{"version":3,"sources":["Context.js","components/Movieboxes.js","components/Footer.js","components/FavoriteMovies.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/SearchPage.js","components/WatchList.js","pages/WatchListpage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","navShadow","setNavShadow","homePageResults","setHomePageResults","added","setAdded","db","Localbase","allFavMovies","setAllFavMovies","db2","allWatchListMovies","setallWatchListMovies","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","year","rating","isFavorite","PseudoBox","bg","w","minW","m","color","cursor","borderWidth","borderColor","rounded","fontSize","p","opacity","_hover","position","Box","top","right","backgroundColor","lineHeight","borderRadius","h","d","Icon","name","paddingLeft","paddingBottom","left","size","Image","src","objectFit","textAlign","Footer","className","paddingTop","boxShadow","Divider","Flex","justifyContent","flexDirection","mt","margin","Text","Link","href","isExternal","ml","orientation","FavoriteMovies","movieId","setMovieId","useDisclosure","isOpen","onOpen","onClose","useContext","useEffect","collection","get","then","movies","console","log","style","maxWidth","marginTop","display","flexWrap","map","movie","key","id","movieTitle","movieImage","undefined","movieReleaseDate","Date","getFullYear","movieRating","MovieDetails","movieDetails","setMovieDetails","movieCredits","setMovieCredits","isFave","setisFave","iswatchListed","setisWatchListed","forEach","axios","res","data","err","cast","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","castMember","index","cast_id","character","profile_path","person_id","Grid","templateColumns","columnGap","to","fontStyle","Modal","preserveScrollBarGap","Stack","overview","runtime","vote_average","status","release_date","toLocaleDateString","budget","format","revenue","rowGap","tagline","Button","variant","width","mr","doc","delete","i","length","add","poster_path","setMovieImage","setMovieTitle","favoriteMovieIds","setFavoriteMovieIds","movieIdArray","push","movieBoxes","original_title","includes","movieName","onHandleMovieClick","backdrop_path","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","type","ref","placeholder","NavBar","px","py","zIndex","isInline","as","RouterLink","Heading","fontWeight","fontFamily","Searchbar","Switch","marginRight","textDecoration","Filter","genre","setGenre","setYear","genreOption","yearOption","submit","setSubmit","selectEl","selectStyles","height","background","overflow","disabled","mx","my","Select","Homepage","myRef","createRef","onScroll","scrollTop","marginLeft","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backgroundSize","backgroundPosition","container","Spinner","transform","thickness","speed","emptyColor","goBack","overflowY","paddingY","pb","wrap","overflowX","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","biography","SearchPage","marginY","WatchList","WatchListpage","App","exact","path","customTheme","theme","colors","primaryBackground","cardBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.8f61128a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Localbase from \"localbase\";\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [search, setSearch] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n  const [navShadow, setNavShadow] = useState(false);\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\n  const [added, setAdded] = useState(0);\n\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  //Create a LOCAL DATABASE forfavorite movies using localbase imported.\n  let db = new Localbase(\"db\");\n  const [allFavMovies, setAllFavMovies] = useState([]);\n\n  //Create a LOCAL DATABASE for Watchlist movies using localbase imported.\n  let db2 = new Localbase(\"db2\");\n const [allWatchListMovies, setallWatchListMovies] = useState([]);\n \n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        homePageResults,\n        setHomePageResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        db,\n        allFavMovies,\n        setAllFavMovies,\n        db2,\n        allWatchListMovies,\n        setallWatchListMovies,\n        setDefaultMovies,\n        navShadow,\n        setNavShadow,\n        defaultMovies,\n        added,\n        setAdded\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image, PseudoBox, Icon } from \"@chakra-ui/core\";\nimport { FaHeart } from \"react-icons/fa\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick, year, rating, isFavorite } = props;\n\n  return (\n    <PseudoBox\n      onClick={() => onClick()}\n      bg=\"cardBackground\"\n      w=\"13vw\"\n      minW=\"175px\"\n      m={4}\n      color=\"primaryText\"\n      cursor=\"pointer\"\n      borderWidth=\"1px\"\n      borderColor=\"primaryBorder\"\n      rounded=\"lg\"\n      fontSize=\"0.8em\"\n      p=\"5px\"\n      opacity=\"0.75\"\n      _hover={{ borderColor: \"#666\", opacity: \"1\" }}\n      position=\"relative\"\n    >\n      {rating !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"8px\"\n          right=\"8px\"\n          backgroundColor=\"rgb(0,0,0,0.6)\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          <Box d=\"inline\">{rating}</Box>\n          <Icon\n            name=\"star\"\n            paddingLeft=\"2px\"\n            paddingBottom=\"3px\"\n            color=\"#ffff00\"\n          />\n        </Box>\n      )}\n\n      {isFavorite !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"4px\"\n          left=\"5px\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          {isFavorite && <FaHeart size=\"20px\" color=\"#ff0000\" />}\n        </Box>\n      )}\n\n      <Image rounded=\"lg\" src={imageSrc} objectFit=\"cover\" />\n      <Box m=\"5px\" textAlign=\"center\" fontSize=\"1.1em\">\n        {`${title} ${year !== null ? `(${year})` : \"\"}`}\n      </Box>\n    </PseudoBox>\n  );\n}\n\nexport default Movieboxes;\n","import React from \"react\";\nimport { Link as Links } from \"react-router-dom\";\nimport {\n    Link,\n    Text,\n    Stack,\n    Divider,\n    Flex,\n    Image,\n    Box\n  } from \"@chakra-ui/core\";\nconst movieDB_logo = 'https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg';\n\n  const Footer = () => {\n    return (\n      <Box\n        className=\"footer-container\"\n        bg=\"primaryBackground\" \n        paddingTop=\"10px\"\n        boxShadow=\"0px -4px 4px 1px rgba(0,0,0,0.25)\"\n        >\n        <Divider />\n        <Flex\n          className=\"footer\"\n          justifyContent=\"space-around\"\n          flexDirection=\"row\"\n          paddingTop=\"8px\"\n          paddingBottom=\"10px\"\n        \n        >\n          <Flex \n            className=\"githubs-container\" \n            justifyContent=\"space-around\"\n            mt=\"30px\" \n         \n          >\n            <Flex color=\"#e5e5e5\" margin=\"0 4px\" className=\"footer-githubs\">\n              <Text className=\"copyright\"color=\"#F34C28\">&copy; Copyright 2020  </Text>\n              <Link className=\"names\"href=\"https://github.com/dpajek\" _hover={{color : \"#49c3fd\"}} isExternal mt={-2} ml={2} ><i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>Pajek</Link>\n              <Link className=\"names\" href=\"https://github.com/Eerian\" _hover={{color : \"#49c3fd\"}} isExternal mt={-2}><i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>Erion </Link>\n              <Link className=\"names\" href=\"https://github.com/Rayhan1998\" _hover={{color : \"#49c3fd\"}} isExternal mt={-2}><i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>Rayhan</Link>\n            </Flex>\n            <Divider mt=\"-4px\" orientation=\"vertical\"/>\n            <Flex className=\"project-repo\">\n              <Link color=\"#fff\" w=\"100%\" ml=\"20px\" _hover={{color : \"#49c3fd\"}} href=\"https://github.com/chingu-voyages/v24-geckos-team-03\" isExternal mt={-2}><i className=\"fa fa-fw fa-2x fa-inverse fa-github\"></i><span className=\"repo-name\">Project Repo</span></Link>\n            </Flex>\n          </Flex>\n    \n          \n          <Flex color=\"#fff\" className=\"footer-logo\" >\n              <Image src={movieDB_logo}\n                    size=\"65px\"\n              />\n          </Flex>   \n        </Flex>\n      </Box>\n    );\n  };\n  \n  export default Footer;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport Footer from './Footer';\n\nconst FavoriteMovies = () => {\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  const { db, allFavMovies, setAllFavMovies } = useContext(Context);\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then(movies => {\n        setAllFavMovies(movies);\n        console.log(db);\n      });\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allFavMovies.map(movie => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n\n\nexport default FavoriteMovies;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport FavoriteMovies from './FavoriteMovies';\nimport Movieboxes from './Movieboxes';\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl, db, db2} = useContext(\n    Context\n  );\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  const {allFavMovies, setAllFavMovies } = useContext(Context);\n  const {allWatchListMovies, setallWatchListMovies} = useContext(Context)\n\n\n//create a handler for \"add to favorites\" button on the Modal.\nconst handleAddToFavorites = () => {\n  //Check for duplicate entries on the database before adding a movie.\n  for (let i = 0; i < allFavMovies.length; i++) {\n    if (allFavMovies[i].id === movieDetails.id) {\n      console.log('movie exists')\n      return null;\n      }\n    }\n\n  //add image and title of movies clicked to the DB\n  db.collection('favoriteMovies').add({\n    id: movieDetails.id,\n    movieImage: ImageUrl + movieDetails.poster_path,\n    movieTitle: movieDetails.title,\n    movieReleaseDate: movieDetails.release_date,\n    movieRating: movieDetails.vote_average,\n  })\n  .then(() => {\n    db.collection(\"favoriteMovies\")\n    .get()\n    .then(movies => {\n      setAllFavMovies(movies);\n    });\n  });\n  \n}\n//create a handler for RemoveFromFavorites button on the Modal\nconst handleRemoveFromFavorites = () => {\n  db.collection('favoriteMovies').doc({id : id}).delete()\n  //update favorite list\n  .then(() => {\n    db.collection(\"favoriteMovies\")\n    .get()\n    .then(movies => {\n      setAllFavMovies(movies);\n    });\n  });\n}\n\n\n//create a handler for \"add to watch list\" button on the Modal.\nconst handleAddToWatchList = () => {\n  //Check for duplicate entries on the database before adding a movie.\n  for (let i = 0; i < allWatchListMovies.length; i++) {\n    if (allWatchListMovies[i].id === movieDetails.id) {\n      console.log('movie exists')\n      return null;\n      }\n    }\n\n  //add image and title of movies clicked to the DB\n  db2.collection('watchListMovies').add({\n    id: movieDetails.id,\n    movieImage: ImageUrl + movieDetails.poster_path,\n    movieTitle: movieDetails.title,\n    movieReleaseDate: movieDetails.release_date,\n    movieRating: movieDetails.vote_average,\n  })\n    .then(() => {\n      db2.collection(\"watchListMovies\")\n      .get()\n      .then(movies => {\n        setallWatchListMovies(movies);\n  });\n});\n\n}\n\n//Create a handler to remove movies from watchlist\nconst handleRemoveFromWatchList = () => {\n    db2.collection('watchListMovies').doc({id : id}).delete()\n    //update watchlist\n    .then(() => {\n      db2.collection(\"watchListMovies\")\n      .get()\n      .then(movies => {\n        setallWatchListMovies(movies);\n      });\n    });\n}\n\n\n\nconst [isFave, setisFave] = useState(false);\nconst [iswatchListed, setisWatchListed] = useState(false);\n//check if a movie is favorited;\n  useEffect(() => {\n    setisFave(false);\n    allFavMovies.forEach(movie => {\n      if (movie.id === id) {\n        setisFave(true);\n      }\n    })\n  },[allFavMovies, id]);\n//check is a movie is watchlisted\n  useEffect(() => {\n    setisWatchListed(false);\n    allWatchListMovies.forEach(movie => {\n      if (movie.id === id) {\n        setisWatchListed(true);\n      }\n    })\n  },[allWatchListMovies, id]);\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id,\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Link to={`/actor/${person_id}`}>\n                <Image\n                  cursor=\"pointer\"\n                  rounded=\"lg\"\n                  src={ImageUrl + profile_path}\n                  h=\"80px\"\n                  objectFit=\"cover\"\n                />\n              </Link>\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n//Check if movie is favorited \nconst [isFaved, setisFaved] = useState();\n// const checkFavorited = () => {\n//     let favorited = \"\";\n//     for (let i = 0; i < allFavMovies.length; i++) {\n//       if (allFavMovies[i].id === movieDetails.id) {\n//         setisFaved(movieDetails.id)\n//         console.log(isFaved);\n//       }\n//   }\n// }\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Rating: {movieDetails.vote_average}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>  \n              {isFave\n              ? <Button\n                  variant=\"outline\"\n                  width=\"350px\"\n                  borderWidth=\"2px\"\n                  backgroundColor=\"#db291d\"\n                  color=\"white\"\n                  _hover\n                  mr={3}\n                  onClick={handleRemoveFromFavorites}\n                  >Remove From Favorites\n                </Button>\n              : <Button \n                  onClick={handleAddToFavorites}\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={3}\n                  \n                  >Add To Favorites\n                </Button>}\n              <Link to={`/moviedetailspage/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                </Link>\n                <Button\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={1}\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n              {iswatchListed\n              ? <Button\n                  variant=\"outline\"\n                  borderWidth=\"2px\"\n                  backgroundColor=\"#db291d\"\n                  color=\"white\"\n                  _hover\n                  mr={6}\n                  ml={6}\n                  onClick={handleRemoveFromWatchList}\n                  >Remove From WatchList\n                </Button>\n              : <Button \n                  onClick={handleAddToWatchList}\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={6}\n                  ml={6}\n                  \n                  >Add To WatchList\n                </Button>}\n              <ModalFooter>\n\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\nexport default MovieDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid(props) {\n  const { searchResults } = props;\n\n  const { ImageUrl, allFavMovies, setAllFavMovies, db } = useContext(Context);\n\n  // State variables for moviedetails modal popup\n  const [movieId, setMovieId] = useState(null);\n  const [movieImage, setMovieImage] = useState(\"\");\n  const [movieTitle, setMovieTitle] = useState(\"\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [favoriteMovieIds, setFavoriteMovieIds] = useState([]);\n\n  //Get data from the DB and store all movie ids to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then((movies) => {\n        setAllFavMovies(movies);\n      });\n    console.log(\"getFavMovies UseEffect\");\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //Get data from the DB and store all movie ids to an array\n  useEffect(() => {\n    if (allFavMovies.length > 0) {\n      const movieIdArray = [];\n      allFavMovies.forEach((movie) => {\n        movieIdArray.push(movie.id);\n      });\n      setFavoriteMovieIds(movieIdArray);\n    }\n  }, [allFavMovies]);\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    marginTop: \"15px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n  };\n\n  const movieBoxes = searchResults.map(function (movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        year={new Date(movie.release_date).getFullYear()}\n        rating={movie.vote_average}\n        isFavorite={favoriteMovieIds.includes(movie.id)}\n        onClick={() =>\n          onHandleMovieClick(\n            movie.id,\n            movie.backdrop_path,\n            movie.original_title\n          )\n        }\n      />\n    );\n  });\n\n  function onHandleMovieClick(id, movieImage, movieName) {\n    setMovieId(id);\n    setMovieImage(movieImage);\n    setMovieTitle(movieName);\n    onOpen();\n    console.log(id);\n    console.log(movieImage);\n    console.log(movieName);\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n      <MovieDetails\n        isOpen={isOpen}\n        onClose={onClose}\n        id={movieId}\n        movieImage={movieImage}\n        movieTitle={movieTitle}\n      />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nfunction Search() {\n  const history = useHistory();\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY,\n    setDefaultMovies\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n\n    setIsSearch(true);\n\n    history.push(\"/searchPage\"); // Routes to search page on submit\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n            setDefaultMovies(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(searchResults);\n  }, [search]);\n\n  const buttonStyle = {\n    borderRadius: \"0.25rem\",\n    fontWeight: 600,\n    display: \"inline-flex\",\n    appearance: \"none\",\n    WebkitBoxAlign: \"center\",\n    alignItems: \"center\",\n    WebkitBoxPack: \"center\",\n    justifyContent: \"center\",\n    transition: \"all 250ms ease 0s\",\n    userSelect: \"none\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    lineHeight: 1.2,\n    outline: \"none\",\n    height: \"2em\",\n    minWidth: \"2.5rem\",\n    fontSize: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n    backgroundColor: \"rgb(237, 242, 247)\",\n    marginLeft: \"5px\",\n    marginRight: \"5px\"\n  };\n  return (\n    <div className=\"search\">\n      <form onSubmit={searchSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          ref={inputEl}\n          placeholder=\"Search movie here!\"\n        ></input>\n        <button type=\"submit\" name=\"button\">\n          <i className=\"fas fa-search\"></i>\n          {/* <input type=\"text\" ref={inputEl}></input> */}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from './Searchbar';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport { Box, Image, Link, Switch, Heading, Stack, Flex } from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const {\n    setDefaultMovies,\n    navShadow\n  } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n  };\n\n  return (\n    <Box\n      className=\"nav-bar\"\n      style={{ top: 0 }}\n      position=\"absolute\"\n      bg=\"primaryBackground\"\n      w=\"100%\"\n      px={5}\n      py={5}\n      paddingBottom=\"10px\" \n      zIndex=\"1000\"\n      boxShadow={\n        navShadow\n          ? \"0px 6px 6px 3px rgba(0, 0, 0, 0.25)\"\n          : \"0px 6px 6px 3px rgba(0, 0, 0, 0)\"\n      }\n    >\n      <Flex isInline justifyContent=\"space-between\" className=\"top-nav\">\n        <Link as={RouterLink} to=\"/\">\n          <Flex isInline onClick={clicked} className=\"logo\">\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={46}\n            />\n            <Heading as=\"h3\" size=\"xl\" fontWeight=\"200\" color=\"#49c3fd\" fontFamily=\"Gugi, cursive\" className=\"logo-name\">\n              DAILY FLIX\n            </Heading>\n          </Flex>\n          </Link>\n          <Flex isInline className=\"search-bar-section\">\n            <Searchbar />\n            <Switch size=\"sm\" className=\"switch-button\"/>\n          </Flex>\n        </Flex>\n        <Flex justifyContent=\"flex-end\" marginRight=\"198px\" className=\"nav-lists\">\n            {/* Use RouterLink as written in ChakraUI docs */}\n            <Link textDecoration=\"none\" _hover={{color : \"#49c3fd\"}} className=\"navbar-links\"as={RouterLink} to=\"/favorites\" px={2} color=\"#fff\" >My Favorites</Link>\n            <Link _hover={{color : \"#49c3fd\"}} className=\"navbar-links\" as={RouterLink} to=\"/watchList\" px={2} color=\"#fff\" >Watch List</Link>\n        </Flex>\n      </Box>\n\n \n      \n    )\n}\n\n\nexport default NavBar;\n\n\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport \"./filter.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../Context\";\nimport { Heading, Button, Select, Box } from \"@chakra-ui/core\";\n\nfunction Filter() {\n  const [genre, setGenre] = useState(\"Genre\");\n  const [year, setYear] = useState(\"Year\");\n  const genreOption = useRef(null);\n  const yearOption = useRef(null);\n  const [submit, setSubmit] = useState(false);\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const {\n    APIKEY,\n    setDefaultMovies,\n    setHomePageResults\n  } = useContext(Context);\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setSubmit(true);\n    setGenre(inputEl.current.value);\n    setYear(selectEl.current.value);\n    genreOption.current.disabled = true;\n\n    yearOption.current.disabled = true;\n  }\n\n  useEffect(() => {\n    //   Checks wheither if correct selections are submitted\n    if (genre !== \"Genre\" && year !== \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(false);\n            setSubmit(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submit]);\n\n  const filterbar = {\n    marginTop: \"125px\",\n    textAlign: \"center\",\n  };\n  const filterButton = {\n    height: \"2em\",\n    borderWidth: \"2px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"0.9em\",\n    cursor: \"pointer\",\n    borderRadius: \"1em\",\n  };\n\n  const selectStyles = {\n    position: \"relative\",\n    width: \"10em\",\n    height: \"2.2em\",\n    lineHeight: \"2em\",\n    background: \"#444\", //\"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \"1em\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    paddingLeft: \"15px\",\n    fontSize: \"0.8em\",\n  };\n\n  return (\n    <div style={filterbar}>\n      <form\n        className=\"form\"\n        onSubmit={formSubmit}\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n      >\n        <Box d=\"inline\" color=\"primaryText\" fontSize=\"1em\" mx=\"7px\" my=\"5px\">\n          Find Movies By\n        </Box>\n        <Select ref={inputEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={genreOption}>Genre</option>\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </Select>\n\n        <Select ref={selectEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={yearOption}>Year</option>\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2014</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </Select>\n\n        <Button\n          backgroundColor=\"primaryBackground\"\n          borderColor=\"logoText\"\n          color=\"logoText\"\n          style={filterButton}\n          _hover={{ backgroundColor: \"logoText\", color: \"primaryBackground\", fontWeight: \"900\" }}\n          type=\"submit\"\n          mx=\"7px\" \n          my=\"7px\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { useContext, useEffect } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\nimport { Context } from \"../Context\";\nimport Footer from './../components/Footer';\n\nfunction Homepage() {\n  const {\n    isSearch,\n    setNavShadow,\n    navShadow,\n    homePageResults,\n    setHomePageResults,\n    defaultMovies,\n    setDefaultMovies,\n    APIKEY,\n  } = useContext(Context);\n\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\n\n  function onScroll() {\n    const scrollTop = myRef.current.scrollTop;\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\n  }\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies, APIKEY, setHomePageResults, setDefaultMovies]);\n\n  return (\n    \n    <Box\n      ref={myRef}\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n      onScroll={onScroll}\n    >\n      <NavBar />\n      <Filter />\n      <Heading\n        as=\"h3\"\n        size=\"lg\"\n        marginTop=\"10px\"\n        marginLeft=\"5%\"\n        color=\"primaryText\"\n      >\n        {isSearch ? null : \"Popular Movies\"}\n      </Heading>\n      <Grid searchResults={homePageResults} />\n      <Footer />\n    </Box>\n    \n      \n   \n  );\n}\n\nexport default Homepage;\n","import React, { useContext } from \"react\";\nimport { Box} from \"@chakra-ui/core\";\nimport NavBar from \"../components/NavBar\";\nimport FavoriteMovies from './../components/FavoriteMovies';\nimport Footer from './../components/Footer';\n\n\n\nconst FavoriteMoviespage = () => {\n\n// const headerStyles = {\n    // position: \"absolute\",\n    // top: \"100px\",\n    // color: \"red\",\n    // left: \"150px\",\n    // fontSize: \"25px\",\n    // fontWeight: \"400\"\n//   };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n      <Box>\n        <h1 className=\"page-heading favorites-list\">Favorite Movies</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <FavoriteMovies />\n      </Box>\n      <Footer />\n    </Box>\n  \n  );    \n    \n}\n\nexport default FavoriteMoviespage;","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"./../../Context\";\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MovieDetailsBody.css\";\n\nfunction MovieDetailsBody(props) {\n  const history = useHistory();\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n\n  setTimeout(() => {\n    setIsPageLoaded(true);\n  }, 2500);\n\n  const goBack = () => {\n    history.goBack();\n    setDefaultMovies(true);\n  };\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast.map((castMember, index) => {\n      const {\n        cast_id,\n        character,\n        name,\n        profile_path,\n        id: person_id\n      } = castMember;\n\n      return (\n        <Box\n          key={cast_id}\n          textAlign=\"center\"\n          marginRight=\"60px\"\n          marginLeft=\"60px\"\n        >\n          <Link to={`/actor/${person_id}`}>\n            <Image\n              m=\"0 auto\"\n              cursor=\"pointer\"\n              rounded=\"lg\"\n              src={ImageUrl + profile_path}\n              objectFit=\"cover\"\n              width=\"100px\"\n              maxWidth=\"none\"\n            />\n          </Link>\n          <Box p=\"7px\">\n            {name} <br />{\" \"}\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n              {character}\n            </Text>\n          </Box>\n        </Box>\n      );\n    });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map(trailer => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            title={trailer.original_title}\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n            className=\"movieTrailerBoxes\"\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n  // Carousel settiings\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3\n  };\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then(res => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then(res => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then(res => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"scroll\"\n  };\n\n  const imageContainer = {\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"top\"\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\"\n  };\n\n  const pageSpinner = {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n\n    transform: \"translate(-50%, -50%)\"\n  };\n  return (\n    <>\n      <Box>\n        {isPageLoaded ? null : (\n          <Box className=\"loadingScreen\">\n            <Spinner\n              style={pageSpinner}\n              thickness=\"3px\"\n              speed=\"0.7s\"\n              emptyColor=\"gray.200\"\n              color=\"black\"\n              size=\"100px\"\n            />\n          </Box>\n        )}\n      </Box>\n      <Box\n        style={imageContainer}\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }}\n        >\n          <Box style={container}>\n            <Heading\n              position=\"absolute\"\n              top=\"50%\"\n              color=\"white\"\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\n            >\n              {movieData.original_title}\n            </Heading>\n            <Link to=\"/\">\n              <span className=\"responsiveArrow\" onClick={goBack}>\n                &#8592;\n              </span>\n            </Link>\n          </Box>\n        </Box>\n      </Box>\n      <Box style={detailBody}>\n        <Box style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\n              {castList}\n            </Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailersboxes}\n            </Flex>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Image, Grid as ChakraGrid, Heading } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction SearchByActor() {\n  const { APIKEY, ImageUrl, setNavShadow, navShadow } = useContext(Context);\n\n  const { personId } = useParams();\n\n  const [personDetails, setPersonDetails] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\n\n  function onScroll() {\n    const scrollTop = myRef.current.scrollTop;\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\n  }\n\n  useEffect(() => {\n    if (personId !== null) {\n      try {\n        axios\n          .get(\n            // retrieve actor's name based on personId\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setPersonDetails(res.data);\n          });\n\n        axios\n          .get(\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n          )\n          .then((res) => {\n            setSearchResults(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, personId, setSearchResults]);\n\n  return (\n    <Box\n      ref={myRef}\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n      onScroll={onScroll}\n    >\n      <NavBar />\n\n      {personDetails !== null && (\n        <>\n          <Heading\n            as=\"h3\"\n            size=\"lg\"\n            marginTop=\"100px\"\n            marginLeft=\"5%\"\n            color=\"primaryText\"\n          >\n            {personDetails.name}\n          </Heading>\n          <ChakraGrid\n            mx=\"125px\"\n            my=\"50px\"\n            borderWidth=\"1px\"\n            borderColor=\"primaryBorder\"\n            rounded=\"lg\"\n            templateColumns=\"auto auto\"\n          >\n            <Image\n              m=\"10px\"\n              src={ImageUrl + personDetails.profile_path}\n              h=\"220px\"\n              objectFit=\"cover\"\n              rounded=\"lg\"\n            />\n            <Box m=\"10px\" color=\"primaryText\" fontSize=\"0.9em\">\n              Actor Biography: {personDetails.biography}\n            </Box>\n          </ChakraGrid>\n\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default SearchByActor;\n","import React, { useContext } from \"react\";\nimport Grid from \"../components/Grid\";\nimport Navbar from \"../components/NavBar\";\nimport { Heading, Box } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\nimport Footer from './../components/Footer';\n\nfunction SearchPage() {\n  const { search, searchResults, isSearch } = useContext(Context);\n  console.log(search);\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n       <Navbar />\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\n        {isSearch ? `Search Results for ${search}` : `Search For Movie`}\n      </Heading>\n     \n      <Grid searchResults={searchResults} />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default SearchPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\n\nconst WatchList = () => {\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  const {db2, allWatchListMovies, setallWatchListMovies } = useContext(Context);\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db2.collection(\"watchListMovies\")\n      .get()\n      .then(movies => {\n        setallWatchListMovies(movies);\n   \n      });\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allWatchListMovies.map((movie) => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n\n\nexport default WatchList;","import React, { useContext } from \"react\";\nimport { Box} from \"@chakra-ui/core\";\nimport NavBar from \"../components/NavBar\";\nimport WatchList from './../components/WatchList';\nimport Footer from './../components/Footer';\n\nconst WatchListpage = () => {\n\n// const headerStyles = {\n    // position: \"absolute\",\n    // top: \"100px\",\n    // color: \"red\",\n    // left: \"150px\",\n    // fontSize: \"25px\",\n    // fontWeight: \"400\"\n//   };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n      <Box>\n        <h1 className=\"page-heading watch-list\">Movies for later</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <WatchList />\n      </Box>\n      <Footer />\n    </Box>\n  \n  );    \n    \n}\n\nexport default WatchListpage;","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { BrowserRouter, Switch, Route, HashRouter } from \"react-router-dom\";\nimport FavoriteMoviespage from \"./pages/FavoriteMoviespage\";\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\nimport SearchByActor from \"./pages/SearchByActor\";\n\nimport SearchPage from \"./pages/SearchPage\";\nimport WatchListpage from './pages/WatchListpage';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route path=\"/favorites\">\n            <FavoriteMoviespage />\n          </Route>\n          <Route path=\"/watchList\">\n            <WatchListpage />\n          </Route>\n          <Route path=\"/moviedetailspage/:movieId\">\n            <MovieDetailsPage />\n          </Route>\n          <Route path=\"/actor/:personId\">\n            <SearchByActor />\n          </Route>\n          <Route path=\"/searchPage\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/\">\n            <Homepage />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      cardBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}