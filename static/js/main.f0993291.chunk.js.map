{"version":3,"sources":["Context.js","components/Movieboxes.js","components/FavoriteMovies.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/SearchPage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","homePageResults","setHomePageResults","db","Localbase","allFavMovies","setAllFavMovies","useEffect","collection","get","then","movies","console","log","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","Box","bg","w","m","color","fontSize","cursor","Image","src","h","objectFit","className","FavoriteMovies","movieId","setMovieId","useDisclosure","isOpen","onOpen","onClose","useContext","style","maxWidth","marginTop","margin","display","flexWrap","justifyContent","map","movie","key","id","movieTitle","movieImage","MovieDetails","movieDetails","setMovieDetails","movieCredits","setMovieCredits","isFave","setisFave","forEach","axios","res","data","err","cast","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","castMember","index","cast_id","character","name","profile_path","person_id","Grid","p","borderWidth","borderColor","rounded","templateColumns","columnGap","to","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","popularity","status","Date","release_date","toLocaleDateString","budget","format","revenue","rowGap","textAlign","tagline","Button","i","length","add","poster_path","backgroundColor","_hover","mr","movieBoxes","original_title","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","push","type","ref","placeholder","NavBar","px","py","paddingBottom","position","boxShadow","zIndex","isInline","Link","as","RouterLink","size","Heading","fontWeight","fontFamily","Searchbar","Switch","ml","float","marginRight","textDecoration","Filter","genre","setGenre","year","setYear","genreOption","yearOption","submit","setSubmit","selectEl","selectStyles","width","height","lineHeight","background","overflow","borderRadius","padding","disabled","Select","border","outline","Homepage","top","left","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","marginLeft","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","container","Spinner","transform","thickness","speed","emptyColor","goBack","overflowY","paddingY","pb","Flex","wrap","overflowX","paddingTop","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","biography","SearchPage","marginY","App","exact","path","customTheme","theme","colors","primaryBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.f0993291.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Localbase from 'localbase';\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [search, setSearch] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\n\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n//Create a LOCAL DATABASE using localbase imported. \nlet db = new Localbase('db');\nconst [allFavMovies, setAllFavMovies] = useState([]);\n  //Get data from the DB and store all favotired movies to an array\n    useEffect(() => {\n      db.collection('favoriteMovies').get().then(movies =>{\n        setAllFavMovies(movies);\n        console.log(db);\n      });\n    },[]);\n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        homePageResults,\n        setHomePageResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        db,\n        allFavMovies,\n        setDefaultMovies,\n        defaultMovies\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image } from \"@chakra-ui/core\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick } = props;\n\n  return (\n    <Box\n      onClick={() => onClick()}\n      bg=\"primaryBackground\"\n      w=\"170px\"\n      m={4}\n      color=\"primaryText\"\n      fontSize={\"16px\"}\n      cursor=\"pointer\"\n    >\n      <Image src={imageSrc} w=\"170px\" h={\"220px\"} objectFit=\"cover\" />\n\n      <h1 className=\"movie-titles\">{title}</h1>\n    </Box>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useContext, useEffect, useState} from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\n\nconst FavoriteMovies = () => {\n    const [movieId, setMovieId] = useState(null);\n    \n\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    function onHandleMovieClick(id) {\n        setMovieId(id);\n        onOpen();\n      }\n\n    const {allFavMovies} = useContext(Context);\n\n\n\n    //styles for the grid\n    const gridStyles = {\n        maxWidth: \"1200px\",\n        marginTop: \"10%\",\n        margin: \"0 auto\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-evenly\"\n      };\n\n    return (\n        <>\n            <div className=\"container\" style={gridStyles}>\n                {allFavMovies.map(movie => {\n                        return (\n                            <Movieboxes\n                                key={movie.id}\n                                title={movie.movieTitle}\n                                imageSrc={movie.movieImage}\n                                onClick={() => onHandleMovieClick(movie.id)}\n                            />\n                        )\n                        \n                    })}\n            </div>\n            <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n        </>\n    )\n                      \n}\n//     <Movieboxes\n//     key={movie.id}\n//     title={movie.movieTitle}\n//     imageSrc={movie.movieImage}\n    \n// />\n   \n\n    \nexport default FavoriteMovies;","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport FavoriteMovies from './FavoriteMovies';\nimport Movieboxes from './Movieboxes';\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl, allFavMovies, db} = useContext(\n    Context\n  );\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n\n//create a handler for \"add to favorites\" button on the Modal.\nconst [isFavorited, setisFavorited] = useState();\n\n\nconst handleAddToFavorites = () => {\n    //Check for duplicate entries on the database before adding a movie.\n    for (let i = 0; i < allFavMovies.length; i++) {\n      if (allFavMovies[i].id === movieDetails.id) {\n        console.log('movie exists')\n        return null;\n      }\n  }\n    //add image and title of movies clicked to the DB\n    db.collection('favoriteMovies').add({\n      id: movieDetails.id,\n      movieImage: ImageUrl + movieDetails.poster_path,\n      movieTitle: movieDetails.title,\n    })\n  \n  }\n \n\n\n// function searchByActor(person_id) {\n//   setPersonId(person_id);\n//   setDefaultMovies(true);\n//   onClose();\n// }\n\nconst [isFave, setisFave] = useState(false);\n//check if a movie is favorited;\n  useEffect(() => {\n    setisFave(false);\n    allFavMovies.forEach(movie => {\n      if (movie.id === id) {\n        setisFave(true);\n      }\n    })\n  \n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id,\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Link to={`/actor/${person_id}`}>\n                <Image\n                  cursor=\"pointer\"\n                  rounded=\"lg\"\n                  src={ImageUrl + profile_path}\n                  h=\"80px\"\n                  objectFit=\"cover\"\n                />\n              </Link>\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n//Check if movie is favorited \nconst [isFaved, setisFaved] = useState();\n// const checkFavorited = () => {\n//     let favorited = \"\";\n//     for (let i = 0; i < allFavMovies.length; i++) {\n//       if (allFavMovies[i].id === movieDetails.id) {\n//         setisFaved(movieDetails.id)\n//         console.log(isFaved);\n//       }\n//   }\n// }\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Popularity: {movieDetails.popularity}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>  \n              {isFave\n              ? <Button>Remove</Button>\n              : <Button onClick={handleAddToFavorites}>Add</Button>}\n         \n            {/* <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3} \n                    onClick={handleAddToFavorites}\n              >\n                    Add to favorites\n              </Button>   */}\n              <Link to={`/moviedetailspage/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                </Link>\n                <Button\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={3}\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\nexport default MovieDetails;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid(props) {\n  const {searchResults} = props;\n\n  const { ImageUrl } = useContext(Context);\n\n  const [movieId, setMovieId] = useState(null);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        onClick={() => onHandleMovieClick(movie.id)}\n      />\n    );\n  });\n\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n    console.log(id);\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nfunction Search() {\n  const history = useHistory();\n  console.log(history);\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY,\n    setDefaultMovies\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n\n    setIsSearch(true);\n\n    history.push(\"/searchPage\"); // Routes to search page on submit\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n            setDefaultMovies(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(searchResults);\n  }, [search, setSearchResults, APIKEY, setIsSearch, setDefaultMovies]);\n\n  const buttonStyle = {\n    borderRadius: \"0.25rem\",\n    fontWeight: 600,\n    display: \"inline-flex\",\n    appearance: \"none\",\n    WebkitBoxAlign: \"center\",\n    alignItems: \"center\",\n    WebkitBoxPack: \"center\",\n    justifyContent: \"center\",\n    transition: \"all 250ms ease 0s\",\n    userSelect: \"none\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    lineHeight: 1.2,\n    outline: \"none\",\n    height: \"2em\",\n    minWidth: \"2.5rem\",\n    fontSize: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n    backgroundColor: \"rgb(237, 242, 247)\",\n    marginLeft: \"5px\",\n    marginRight: \"5px\"\n  };\n  return (\n    <div className=\"search\">\n      <form onSubmit={searchSubmit}>\n        <input type=\"text\" name=\"search\" ref={inputEl} placeholder=\"Search movie here!\"></input>\n        <button type=\"submit\" name=\"button\">\n          <i className=\"fas fa-search\"></i>\n        {/* <input type=\"text\" ref={inputEl}></input> */}\n        </button>\n      </form>\n    </div>\n    );\n}\n\n\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from './Searchbar';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link as Links } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport { Box, Image, Link, Switch, Heading, Stack } from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const {\n    setDefaultMovies,\n    defaultMovies,\n    setSearchResults,\n    search\n  } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n  };\n\n  const stickyNav = {\n    position : \"fixed\",\n    boxShadow : \"0 2px 2px #49c3fd\",\n    zIndex : \"9999\"\n\n  }\n\n  return (\n         <Box bg=\"primaryBackground\" \n          w=\"100%\" \n          px={5} \n          py={5}\n          paddingBottom=\"10px\" \n          style={stickyNav}\n\n          >\n\n      <Stack isInline justifyContent=\"space-between\">\n        <Link as={RouterLink} to=\"/\">\n          <Stack isInline onClick={clicked}>\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={46}\n            />\n            <Heading as=\"h3\" size=\"xl\" fontWeight=\"200\" color=\"#49c3fd\" fontFamily=\"Gugi, cursive\">\n              DAILY FLIX\n            </Heading>\n          </Stack>\n          </Link>\n          <Stack isInline>\n            <Searchbar />\n            <Switch size=\"sm\" ml={2}/>\n          </Stack>\n        </Stack>\n        <Box float=\"right\" marginRight=\"198px\">\n            {/* Use RouterLink as written in ChakraUI docs */}\n            <Link textDecoration=\"none\" _hover={{color : \"#49c3fd\"}} as={RouterLink} to=\"/favorites\" px={2} color=\"#fff\" className=\"link\">My Favorites</Link>\n            <Link _hover={{color : \"#49c3fd\"}} className=\"navbar-links\" px={2} color=\"#fff\" className=\"link\">Watch List</Link>\n        </Box>\n      </Box>\n\n \n      \n    )\n}\n\n\nexport default NavBar;\n\n\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport \"./filter.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../Context\";\nimport { Heading, Button, Select } from \"@chakra-ui/core\";\n\nfunction Filter() {\n  const [genre, setGenre] = useState(\"Genre\");\n  const [year, setYear] = useState(\"Year\");\n  const genreOption = useRef(null);\n  const yearOption = useRef(null);\n  const [submit, setSubmit] = useState(false);\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const {\n    APIKEY,\n    setDefaultMovies,\n    setSearch,\n    setHomePageResults\n  } = useContext(Context);\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setSubmit(true);\n    setGenre(inputEl.current.value);\n    setYear(selectEl.current.value);\n    genreOption.current.disabled = true;\n\n    yearOption.current.disabled = true;\n  }\n\n  useEffect(() => {\n    //   Checks wheither if correct selections are submitted\n    if (genre != \"Genre\" && year != \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(false);\n            setSubmit(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [submit]);\n\n  const filterbar = {\n    marginTop: \"250px\",\n    textAlign: \"center\"\n  };\n  const filterButton = {\n    border: \"none\",\n    color: \"black\",\n    padding: \"8px 32px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"16px\",\n    margin: \"4px 2px\",\n    cursor: \"pointer\",\n    backgroundColor: \"#2c3e50\",\n    borderRadius: \"30px\",\n    outline: \"none\"\n  };\n\n  const selectStyles = {\n    marginRight: \"10px\",\n    position: \"relative\",\n\n    width: \"20em\",\n    height: \"3em\",\n    lineHeight: \"3\",\n    background: \"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \".25em\",\n    padding: \"0 .5em\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  };\n\n  return (\n    <div style={filterbar}>\n      <Heading color=\"white\">Find Movies By</Heading>\n      <form\n        className=\"form\"\n        onSubmit={formSubmit}\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n      >\n        <Select ref={inputEl} style={selectStyles} w=\"20em\">\n          <option ref={genreOption}>Genre</option>\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </Select>\n\n        <Select ref={selectEl} style={selectStyles} w=\"20em\">\n          <option ref={yearOption}>Year</option>\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </Select>\n\n        <button style={filterButton}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Box } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\n\nimport { Context } from \"../Context\";\n\nfunction Homepage() {\n  const {\n    isSearch,\n    searchResults,\n    homePageResults,\n    setHomePageResults,\n    defaultMovies,\n    setDefaultMovies,\n    APIKEY\n  } = useContext(Context);\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies]);\n\n  const headerStyles = {\n    position: \"absolute\",\n    top: \"100px\",\n    color: \"white\",\n    left: \"150px\",\n    fontSize: \"25px\",\n    fontWeight: \"100\"\n  };\n\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n      <h1 style={headerStyles}>{isSearch ? null : \"Popular Movies\"}</h1>\n      <NavBar />\n      <Filter />\n      <Grid searchResults={homePageResults} />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React, { useContext } from \"react\";\nimport { ThemeProvider, Box, Flex, Link, Image,  Switch , Heading, Stack} from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport NavBar from \"../components/NavBar\";\nimport { Localbase } from 'localbase';\nimport FavoriteMovies from './../components/FavoriteMovies';\n\n\n\nconst FavoriteMoviespage = () => {\n\n// const headerStyles = {\n    // position: \"absolute\",\n    // top: \"100px\",\n    // color: \"red\",\n    // left: \"150px\",\n    // fontSize: \"25px\",\n    // fontWeight: \"400\"\n//   };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n      <Box>\n        <h1 className=\"page-heading\">Favorite Movies</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <FavoriteMovies />\n      </Box>\n    </Box>\n  \n  );\n         \n        \n    \n}\n\nexport default FavoriteMoviespage;","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"./../../Context\";\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MovieDetailsBody.css\";\n\nfunction MovieDetailsBody(props) {\n  const history = useHistory();\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n\n  setTimeout(() => {\n    setIsPageLoaded(true);\n  }, 2500);\n\n  const goBack = () => {\n    history.goBack();\n    setDefaultMovies(true);\n  };\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast.map((castMember, index) => {\n      const {\n        cast_id,\n        character,\n        name,\n        profile_path,\n        id: person_id\n      } = castMember;\n\n      return (\n        <Box\n          key={cast_id}\n          textAlign=\"center\"\n          marginRight=\"60px\"\n          marginLeft=\"60px\"\n        >\n          <Link to={`/actor/${person_id}`}>\n            <Image\n              m=\"0 auto\"\n              cursor=\"pointer\"\n              rounded=\"lg\"\n              src={ImageUrl + profile_path}\n              objectFit=\"cover\"\n              width=\"100px\"\n              maxWidth=\"none\"\n            />\n          </Link>\n          <Box p=\"7px\">\n            {name} <br />{\" \"}\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n              {character}\n            </Text>\n          </Box>\n        </Box>\n      );\n    });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map(trailer => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            title={trailer.original_title}\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n            className=\"movieTrailerBoxes\"\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n  // Carousel settiings\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3\n  };\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then(res => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then(res => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then(res => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"scroll\"\n  };\n\n  const imageContainer = {\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"top\"\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\"\n  };\n\n  const pageSpinner = {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n\n    transform: \"translate(-50%, -50%)\"\n  };\n  return (\n    <>\n      <Box>\n        {isPageLoaded ? null : (\n          <Box className=\"loadingScreen\">\n            <Spinner\n              style={pageSpinner}\n              thickness=\"3px\"\n              speed=\"0.7s\"\n              emptyColor=\"gray.200\"\n              color=\"black\"\n              size=\"100px\"\n            />\n          </Box>\n        )}\n      </Box>\n      <Box\n        style={imageContainer}\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }}\n        >\n          <Box style={container}>\n            <Heading\n              position=\"absolute\"\n              top=\"50%\"\n              color=\"white\"\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\n            >\n              {movieData.original_title}\n            </Heading>\n            <Link to=\"/\">\n              <span className=\"responsiveArrow\" onClick={goBack}>\n                &#8592;\n              </span>\n            </Link>\n          </Box>\n        </Box>\n      </Box>\n      <Box style={detailBody}>\n        <Box style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\n              {castList}\n            </Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailersboxes}\n            </Flex>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Image, Grid as ChakraGrid } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\n//import FilterSidebar from \"../components/FilterSidebar\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction SearchByActor() {\n  const { APIKEY, ImageUrl } = useContext(Context);\n\n  const { personId } = useParams();\n\n  const [personDetails, setPersonDetails] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    if (personId !== null) {\n      try {\n        axios\n          .get(\n            // retrieve actor's name based on personId\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setPersonDetails(res.data);\n          });\n\n        axios\n          .get(\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n          )\n          .then((res) => {\n            setSearchResults(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, personId, setSearchResults]);\n\n  const headerStyles = {\n    position: \"absolute\",\n    top: \"100px\",\n    color: \"white\",\n    left: \"150px\",\n    fontSize: \"25px\",\n    fontWeight: \"100\",\n  };\n\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n\n      {personDetails !== null && (\n        <>\n          <h1\n            style={headerStyles}\n          >{`${personDetails.name}`}</h1>\n          <br />\n          <br />\n          <br />\n          <br />\n          <ChakraGrid\n            m=\"100px\"\n            borderWidth=\"1px\"\n            borderColor=\"primaryBorder\"\n            rounded=\"lg\"\n            templateColumns=\"auto auto\"\n          >\n            <Image\n              m=\"10px\"\n              src={ImageUrl + personDetails.profile_path}\n              h=\"220px\"\n              objectFit=\"cover\"\n              rounded=\"lg\"\n            />\n            <Box\n              m=\"10px\"\n              color=\"primaryText\"\n              fontSize=\"0.8em\"\n              >{personDetails.biography}</Box>\n          </ChakraGrid>\n\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default SearchByActor;\n","import React, { useContext } from \"react\";\nimport Grid from \"../components/Grid\";\nimport Navbar from \"../components/NavBar\";\nimport { Heading, Box } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\n\nfunction SearchPage() {\n  const { search, searchResults, isSearch } = useContext(Context);\n  console.log(search);\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n       <Navbar />\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\n        {isSearch ? `Search Results for ${search}` : `Search For Movie`}\n      </Heading>\n     \n      <Grid searchResults={searchResults} />\n    </Box>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport {BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport FavoriteMoviespage from './pages/FavoriteMoviespage';\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\nimport SearchByActor from \"./pages/SearchByActor\";\n\nimport SearchPage from \"./pages/SearchPage\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>  \n        <Route path=\"/favorites\">\n          <FavoriteMoviespage />\n        </Route>\n        <Route path=\"/moviedetailspage/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n\n        <Route path=\"/actor/:personId\">\n          <SearchByActor />\n        </Route>\n        <Route path=\"/searchPage\">\n          <SearchPage />\n        </Route>\n        <Route path=\"/\">\n          <Homepage />\n        </Route>\n      </Switch>\n    </div>\n    </BrowserRouter>\n\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}