{"version":3,"sources":["Context.js","components/Movieboxes.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","components/Footer.js","pages/Homepage.js","components/FavoriteMovies.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/FilterPage.js","pages/SearchPage.js","components/WatchList.js","pages/WatchListpage.js","App.js","theme.js","index.js","img/not-found.jpg"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","searchQuery","setSearchQuery","searchResults","setSearchResults","navShadow","setNavShadow","homePageResults","setHomePageResults","filterdResults","setFilteredResults","db","Localbase","allFavMovies","setAllFavMovies","db2","allWatchListMovies","setallWatchListMovies","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","year","rating","isFavorite","isWantToWatch","PseudoBox","bg","w","minW","m","color","cursor","borderWidth","borderColor","rounded","fontSize","p","opacity","_hover","position","Box","top","right","backgroundColor","lineHeight","borderRadius","h","d","Icon","name","paddingLeft","paddingBottom","left","size","Image","src","objectFit","NotFound","textAlign","MovieDetails","useContext","isOpen","onClose","id","movieDetails","setMovieDetails","movieCredits","setMovieCredits","isFave","setisFave","iswatchListed","setisWatchListed","useEffect","forEach","movie","axios","get","then","res","data","err","console","log","cast","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","map","castMember","index","cast_id","character","profile_path","person_id","key","Grid","templateColumns","columnGap","to","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","vote_average","status","Date","release_date","toLocaleDateString","budget","format","revenue","rowGap","tagline","Button","variant","mr","collection","doc","delete","movies","i","length","add","movieImage","poster_path","movieTitle","movieReleaseDate","movieRating","movieId","setMovieId","useDisclosure","onOpen","favoriteMovieIds","setFavoriteMovieIds","watchListMovieIds","setWatchListMovieIds","movieIdArray","push","movieBoxes","original_title","undefined","getFullYear","includes","className","maxWidth","margin","marginTop","display","flexWrap","justifyContent","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","type","ref","placeholder","NavBar","px","py","zIndex","boxShadow","Flex","isInline","Link","as","RouterLink","Heading","fontWeight","fontFamily","Searchbar","marginRight","textDecoration","Filter","genreOption","yearOption","selectEl","page","selectStyles","width","height","background","overflow","genre","mx","my","Select","Footer","paddingTop","Divider","mb","flexDirection","href","isExternal","ml","orientation","WebkitBackgroundClip","WebkitTextFillColor","Homepage","onScroll","scrollTop","window","scrollY","addEventListener","removeEventListener","minHeight","marginLeft","FavoriteMovies","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","container","Spinner","transform","thickness","speed","emptyColor","go","overflowY","paddingY","pb","wrap","overflowX","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","base","sm","md","marginBottom","biography","FilterPage","SearchPage","marginY","WatchList","WatchListpage","App","exact","path","customTheme","theme","colors","primaryBackground","cardBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector","module","exports"],"mappings":"+SAEMA,EAAUC,IAAMC,gBAEtB,SAASC,EAAgBC,GACvB,IAD8B,EAGEC,oBAAS,GAHX,mBAGvBC,EAHuB,KAGbC,EAHa,OAIYF,oBAAS,GAJrB,mBAIvBG,EAJuB,KAIRC,EAJQ,OAKQJ,mBAAS,IALjB,mBAKvBK,EALuB,KAKVC,EALU,OAMYN,mBAAS,IANrB,mBAMvBO,EANuB,KAMRC,EANQ,OAOIR,oBAAS,GAPb,mBAOvBS,EAPuB,KAOZC,EAPY,OAQgBV,mBAAS,IARzB,mBAQvBW,EARuB,KAQNC,EARM,OASeZ,mBAAS,IATxB,mBASvBa,EATuB,KASPC,EATO,KAe1BC,EAAK,IAAIC,IAAU,MAfO,EAgBUhB,mBAAS,IAhBnB,mBAgBvBiB,EAhBuB,KAgBTC,EAhBS,KAmB1BC,EAAM,IAAIH,IAAU,OAnBM,EAoBsBhB,mBAAS,IApB/B,mBAoBvBoB,EApBuB,KAoBHC,EApBG,KAsB9B,OACE,kBAAC1B,EAAQ2B,SAAT,CACEC,MAAO,CACLlB,cACAC,iBACAE,mBACAD,gBACAI,kBACAC,qBACAY,SA9BW,kCA+BXvB,WACAC,cACAuB,OAtBS,mCAuBTV,KACAE,eACAC,kBACAC,MACAC,qBACAC,wBACAjB,mBACAK,YACAC,eACAP,gBACAU,iBACAC,uBAGDf,EAAM2B,U,sDC8CEC,MA9Ff,SAAoB5B,GAAQ,IAExB6B,EAOE7B,EAPF6B,SACAC,EAME9B,EANF8B,MACAC,EAKE/B,EALF+B,QACAC,EAIEhC,EAJFgC,KACAC,EAGEjC,EAHFiC,OACAC,EAEElC,EAFFkC,WACAC,EACEnC,EADFmC,cAGF,OACE,kBAACC,EAAA,EAAD,CACEL,QAAS,kBAAMA,KACfM,GAAG,iBACHC,EAAE,OACFC,KAAK,QACLC,EAAG,EACHC,MAAM,cACNC,OAAO,UACPC,YAAY,MACZC,YAAY,gBACZC,QAAQ,KACRC,SAAS,QACTC,EAAE,MACFC,QAAQ,OACRC,OAAQ,CAAEL,YAAa,OAAQI,QAAS,KACxCE,SAAS,YAEG,OAAXjB,GACC,kBAACkB,EAAA,EAAD,CACED,SAAS,WACTE,IAAI,MACJC,MAAM,MACNC,gBAAgB,iBAChBP,EAAE,QACFQ,WAAW,MACXC,aAAa,MACbC,EAAE,MACFhB,MAAM,eAEN,kBAACU,EAAA,EAAD,CAAKO,EAAE,UAAUzB,GACjB,kBAAC0B,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,MACZC,cAAc,MACdrB,MAAM,aAKI,OAAfP,GACC,kBAACiB,EAAA,EAAD,CACED,SAAS,WACTE,IAAI,MACJW,KAAK,MACLhB,EAAE,QACFQ,WAAW,MACXC,aAAa,MACbC,EAAE,MACFhB,MAAM,eAELP,GAAc,kBAAC,IAAD,CAAS8B,KAAK,OAAOvB,MAAM,aAI3B,OAAlBN,GACC,kBAACgB,EAAA,EAAD,CACED,SAAS,WACTE,IAAI,MACJW,KAAK,OACLhB,EAAE,QACFQ,WAAW,MACXC,aAAa,MACbC,EAAE,MACFhB,MAAM,eAELN,GAAiB,kBAAC,IAAD,CAAiB6B,KAAK,OAAOvB,MAAM,aAI3C,OAAbZ,EACC,kBAACoC,EAAA,EAAD,CAAOpB,QAAQ,KAAKqB,IAAKrC,EAAUsC,UAAU,UAE7C,kBAACF,EAAA,EAAD,CAAOpB,QAAQ,KAAKqB,IAAKE,IAAUD,UAAU,QAAQ7B,EAAE,SAGzD,kBAACa,EAAA,EAAD,CAAKX,EAAE,MAAM6B,UAAU,SAASvB,SAAS,SAAzC,UACMhB,EADN,YACwB,OAATE,EAAA,WAAoBA,EAApB,KAA8B,O,sDCgUpCsC,MAxYf,SAAsBtE,GAAQ,IAAD,EACWuE,qBAAW3E,GAAzC8B,EADmB,EACnBA,OAAQD,EADW,EACXA,SAAUT,EADC,EACDA,GAAII,EADH,EACGA,IACtBoD,EAAwBxE,EAAxBwE,OAAQC,EAAgBzE,EAAhByE,QAASC,EAAO1E,EAAP0E,GAFE,EAGazE,mBAAS,MAHtB,mBAGpB0E,EAHoB,KAGNC,EAHM,OAIa3E,mBAAS,MAJtB,mBAIpB4E,EAJoB,KAINC,EAJM,OAMeP,qBAAW3E,GAA7CsB,EANmB,EAMnBA,aAAcC,EANK,EAMLA,gBANK,EAO2BoD,qBAAW3E,GAAzDyB,EAPmB,EAOnBA,mBAAoBC,EAPD,EAOCA,sBAPD,EAwGCrB,oBAAS,GAxGV,mBAwGpB8E,EAxGoB,KAwGZC,EAxGY,OAyGe/E,oBAAS,GAzGxB,mBAyGpBgF,EAzGoB,KAyGLC,EAzGK,KA2G3BC,qBAAU,WACRH,GAAU,GACV9D,EAAakE,SAAQ,SAACC,GAChBA,EAAMX,KAAOA,GACfM,GAAU,QAGb,CAAC9D,EAAcwD,IAElBS,qBAAU,WACRD,GAAiB,GACjB7D,EAAmB+D,SAAQ,SAACC,GACtBA,EAAMX,KAAOA,GACfQ,GAAiB,QAGpB,CAAC7D,EAAoBqD,IACxBS,qBAAU,WACR,GAAW,OAAPT,EAAa,CACfE,EAAgB,MAChBE,EAAgB,MAChB,IACEQ,IACGC,IADH,6CAG0Cb,EAH1C,oBAGwDhD,IAErD8D,MAAK,SAACC,GACLb,EAAgBa,EAAIC,SAExB,MAAOC,GACPC,QAAQC,IAAIF,GAGd,IACEL,IACGC,IADH,6CAG0Cb,EAH1C,4BAGgEhD,IAE7D8D,MAAK,SAACC,GACLX,EAAgBW,EAAIC,KAAKI,SAE7B,MAAOH,GACPC,QAAQC,IAAIF,SAGdf,EAAgB,MAChBE,EAAgB,QAEjB,CAACJ,EAAIhD,IAGR,IAAMqE,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IAGrBC,EAAW,GAEf,GAAqB,OAAjBzB,EAAuB,CAIzByB,EAAWzB,EACR0B,MAAM,EAJuB,IAK7BC,KAAI,SAACC,EAAYC,GAAW,IAEzBC,EAKEF,EALFE,QACAC,EAIEH,EAJFG,UACAhD,EAGE6C,EAHF7C,KACAiD,EAEEJ,EAFFI,aACIC,EACFL,EADF/B,GAGF,OACE,kBAACvB,EAAA,EAAD,CAAK4D,IAAKJ,GACR,kBAACK,EAAA,EAAD,CACEjE,EAAE,MACFJ,YAAY,MACZC,YAAY,gBACZC,QAAQ,KACRoE,gBAAgB,UAChBC,UAAU,OAEV,kBAAC,IAAD,CAAMC,GAAE,iBAAYL,IACA,OAAjBD,EACC,kBAAC5C,EAAA,EAAD,CACEvB,OAAO,UACPG,QAAQ,KACRqB,IAAKE,IACLX,EAAE,OACFU,UAAU,UAGZ,kBAACF,EAAA,EAAD,CACEvB,OAAO,UACPG,QAAQ,KACRqB,IAAKzC,EAAWoF,EAChBpD,EAAE,OACFU,UAAU,WAIhB,kBAAChB,EAAA,EAAD,CAAKJ,EAAE,OACJa,EADH,IACS,6BAAO,IACd,kBAACwD,EAAA,EAAD,CAAMtE,SAAS,QAAQuE,UAAU,UAC9BT,SASjB,OACE,oCACE,kBAACU,EAAA,EAAD,CAAOC,sBAAoB,EAAC/C,OAAQA,EAAQC,QAASA,GACnD,kBAAC6C,EAAA,EAAD,MACkB,OAAjB3C,GACkB,OAAjBE,GACE,kBAACyC,EAAA,EAAD,CAAcjF,GAAG,oBAAoBI,MAAM,eACzC,kBAAC6E,EAAA,EAAD,KAAc3C,EAAa7C,OAC3B,kBAACwF,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACrE,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,CACEJ,EAAE,OACFJ,YAAY,MACZC,YAAY,gBACZC,QAAQ,KACRC,SAAS,SAER6B,EAAa8C,UAEhB,kBAACtE,EAAA,EAAD,CAAKuE,GAAG,QAAR,WACA,kBAACV,EAAA,EAAD,CACEjE,EAAE,OACFJ,YAAY,MACZC,YAAY,gBACZC,QAAQ,KACRoE,gBAAgB,UAChBC,UAAU,OACVpE,SAAS,SAET,kBAACK,EAAA,EAAD,gBACW,IACiB,IAAzBwB,EAAagD,QACV,IADH,UAEMhD,EAAagD,QAFnB,aAIH,kBAACxE,EAAA,EAAD,gBAAcwB,EAAaiD,cAC3B,kBAACzE,EAAA,EAAD,gBAAcwB,EAAakD,QAC3B,kBAAC1E,EAAA,EAAD,qBACgB,IACb,IAAI2E,KAAKnD,EAAaoD,cAAcC,sBAEd,IAAxBrD,EAAasD,QACZ,kBAAC9E,EAAA,EAAD,gBAAc4C,EAAUmC,OAAOvD,EAAasD,SAEpB,IAAzBtD,EAAawD,SACZ,kBAAChF,EAAA,EAAD,iBACY4C,EAAUmC,OAAOvD,EAAawD,WAI9C,kBAAChF,EAAA,EAAD,CAAKuE,GAAG,QAAR,QAEkB,OAAjB7C,GACC,kBAACmC,EAAA,EAAD,CACEC,gBAAgB,UAChBC,UAAU,OACVkB,OAAO,OACPtF,SAAS,SAERwD,GAIL,kBAACnD,EAAA,EAAD,CACEJ,EAAE,OACFsB,UAAU,SACV5B,MAAM,WACN4E,UAAU,SACVvE,SAAS,SAER6B,EAAa0D,WAKpB,kBAACf,EAAA,EAAD,KACGvC,EACC,kBAACuD,EAAA,EAAD,CACEC,QAAQ,UAER5F,YAAY,MACZW,gBAAgB,UAChBb,MAAM,QACNQ,QAAM,EACNuF,GAAI,EACJzG,QAhRgB,WAChCf,EAAGyH,WAAW,kBACXC,IAAI,CAAEhE,GAAIA,IACViE,SAEAnD,MAAK,WACJxE,EAAGyH,WAAW,kBACXlD,MACAC,MAAK,SAACoD,GACLzH,EAAgByH,WA+PV,cAaA,kBAACN,EAAA,EAAD,CACEvG,QApTW,WAE3B,IAAK,IAAI8G,EAAI,EAAGA,EAAI3H,EAAa4H,OAAQD,IACvC,GAAI3H,EAAa2H,GAAGnE,KAAOC,EAAaD,GAEtC,OADAkB,QAAQC,IAAI,gBACL,KAKX7E,EAAGyH,WAAW,kBACXM,IAAI,CACHrE,GAAIC,EAAaD,GACjBsE,WAC+B,OAA7BrE,EAAasE,YACT,KACAxH,EAAWkD,EAAasE,YAC9BC,WAAYvE,EAAa7C,MACzBqH,iBAAkBxE,EAAaoD,aAC/BqB,YAAazE,EAAaiD,eAE3BpC,MAAK,WACJxE,EAAGyH,WAAW,kBACXlD,MACAC,MAAK,SAACoD,GACLzH,EAAgByH,UA4RRhG,YAAY,WACZD,YAAY,MACZW,gBAAgB,oBAChBb,MAAM,WACNQ,QAAM,EACNuF,GAAI,GAPN,cAaDvD,EACC,kBAACqD,EAAA,EAAD,CACEC,QAAQ,UACR5F,YAAY,MACZW,gBAAgB,UAChBb,MAAM,QACNQ,QAAM,EACNuF,GAAI,EAEJzG,QA3PgB,WAChCX,EACGqH,WAAW,mBACXC,IAAI,CAAEhE,GAAIA,IACViE,SAEAnD,MAAK,WACJpE,EACGqH,WAAW,mBACXlD,MACAC,MAAK,SAACoD,GACLtH,EAAsBsH,WAwOhB,cAaA,kBAACN,EAAA,EAAD,CACEvG,QAlSW,WAE3B,IAAK,IAAI8G,EAAI,EAAGA,EAAIxH,EAAmByH,OAAQD,IAC7C,GAAIxH,EAAmBwH,GAAGnE,KAAOC,EAAaD,GAE5C,OADAkB,QAAQC,IAAI,gBACL,KAKXzE,EACGqH,WAAW,mBACXM,IAAI,CACHrE,GAAIC,EAAaD,GACjBsE,WAC+B,OAA7BrE,EAAasE,YACT,KACAxH,EAAWkD,EAAasE,YAC9BC,WAAYvE,EAAa7C,MACzBqH,iBAAkBxE,EAAaoD,aAC/BqB,YAAazE,EAAaiD,eAE3BpC,MAAK,WACJpE,EACGqH,WAAW,mBACXlD,MACAC,MAAK,SAACoD,GACLtH,EAAsBsH,UAwQdhG,YAAY,WACZD,YAAY,MACZW,gBAAgB,oBAChBb,MAAM,WACNQ,QAAM,EACNuF,GAAI,GAPN,eAeJ,kBAAClB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMH,GAAE,4BAAuBzC,IAC5B,IACD,kBAAC4D,EAAA,EAAD,CACE1F,YAAY,WACZD,YAAY,MACZW,gBAAgB,oBAChBb,MAAM,WACNQ,QAAM,EACNuF,GAAI,EACJzG,QAAS0C,GAPX,iBAYF,kBAAC6D,EAAA,EAAD,CACE1F,YAAY,WACZD,YAAY,MACZW,gBAAgB,oBAChBb,MAAM,WACNQ,QAAM,EACNuF,GAAI,EACJzG,QAAS0C,GAPX,cCzRDuC,MA5Gf,SAAchH,GAAQ,IACZQ,EAAkBR,EAAlBQ,cADW,EAWf+D,qBAAW3E,GAPb6B,EAJiB,EAIjBA,SACAP,EALiB,EAKjBA,aACAC,EANiB,EAMjBA,gBACAE,EAPiB,EAOjBA,mBACAC,EARiB,EAQjBA,sBACAN,EATiB,EASjBA,GACAI,EAViB,EAUjBA,IAViB,EAcWnB,mBAAS,MAdpB,mBAcZoJ,EAdY,KAcHC,EAdG,OAgBiBC,cAA5B/E,EAhBW,EAgBXA,OAAQgF,EAhBG,EAgBHA,OAAQ/E,EAhBL,EAgBKA,QAhBL,EAkB6BxE,mBAAS,IAlBtC,mBAkBZwJ,EAlBY,KAkBMC,EAlBN,OAmB+BzJ,mBAAS,IAnBxC,mBAmBZ0J,EAnBY,KAmBOC,EAnBP,KAsBnBzE,qBAAU,WACRnE,EAAGyH,WAAW,kBACXlD,MACAC,MAAK,SAACoD,GACLzH,EAAgByH,MAEpBhD,QAAQC,IAAI,0BAEZzE,EACGqH,WAAW,mBACXlD,MACAC,MAAK,SAACoD,GACLtH,EAAsBsH,MAE1BhD,QAAQC,IAAI,2BAEX,IAGHV,qBAAU,WACR,GAAIjE,EAAa4H,OAAS,EAAG,CAC3B,IAAMe,EAAe,GACrB3I,EAAakE,SAAQ,SAACC,GACpBwE,EAAaC,KAAKzE,EAAMX,OAE1BgF,EAAoBG,MAErB,CAAC3I,IAGJiE,qBAAU,WACR,GAAI9D,EAAmByH,OAAS,EAAG,CACjC,IAAMe,EAAe,GACrBxI,EAAmB+D,SAAQ,SAACC,GAC1BwE,EAAaC,KAAKzE,EAAMX,OAE1BkF,EAAqBC,MAEtB,CAACxI,IAEJ,IASM0I,EAAavJ,EAAcgG,KAAI,SAAUnB,GAC7C,OACE,kBAAC,EAAD,CACE0B,IAAK1B,EAAMX,GACX5C,MAAOuD,EAAM2E,eACbnI,SACwB,OAAtBwD,EAAM4D,YAAuB,KAAOxH,EAAW4D,EAAM4D,YAEvDjH,UACyBiI,IAAvB5E,EAAM0C,cAAqD,KAAvB1C,EAAM0C,aACtC,KACA,IAAID,KAAKzC,EAAM0C,cAAcmC,cAEnCjI,OAAQoD,EAAMuC,aACd1F,WAAYuH,EAAiBU,SAAS9E,EAAMX,IAC5CvC,cAAewH,EAAkBQ,SAAS9E,EAAMX,IAChD3C,QAAS,kBAKa2C,EALYW,EAAMX,GAM5C4E,EAAW5E,QAEX8E,IAHF,IAA4B9E,QAM5B,OACE,oCACE,yBAAK0F,UAAU,YAAYlE,MAtCZ,CACjBmE,SAAU,SACVC,OAAQ,SACRC,UAAW,OACXC,QAAS,OACTC,SAAU,OACVC,eAAgB,iBAiCXlK,EAAcsI,OAAS,EAAIiB,EAAa,MAE3C,kBAAC,EAAD,CAAcvF,OAAQA,EAAQC,QAASA,EAASC,GAAI2E,M,OC9C3CsB,MA1Df,WACE,IAAMC,EAAUC,cADA,EASZtG,qBAAW3E,GALba,EAJc,EAIdA,iBACAH,EALc,EAKdA,YACAC,EANc,EAMdA,eACAJ,EAPc,EAOdA,YACAuB,EARc,EAQdA,OAGIoJ,EAAUC,iBAAO,MA8BvB,OAjBA5F,qBAAU,WACR,GAAI7E,EAAYwI,OAAS,EACvB,IACExD,IACGC,IADH,4DAEyD7D,EAFzD,kBAEyEpB,IAEtEkF,MAAK,SAAAC,GACJhF,EAAiBgF,EAAIC,KAAKsF,SAC1B7K,GAAY,MAEhB,MAAOwF,GACPC,QAAQC,IAAIF,MAGf,CAACjE,EAAQpB,EAAaH,EAAaM,IAGpC,yBAAK2J,UAAU,UACb,0BAAMa,SA9BV,SAAsBC,GACpBA,EAAEC,iBAEF5K,EAAeuK,EAAQM,QAAQ5J,OAE/BrB,GAAY,GAEZyK,EAAQd,KAAK,eACblE,QAAQC,IAAIvF,KAuBR,2BACE+K,KAAK,OACLzH,KAAK,SACL0H,IAAKR,EACLS,YAAY,mBAEd,4BAAQF,KAAK,SAASzH,KAAK,UACzB,uBAAGwG,UAAU,sB,iBCiCRoB,EA5EA,WAAO,IAAD,EACqBjH,qBAAW3E,GAA3CS,EADW,EACXA,iBAAkBK,EADP,EACOA,UAK1B,OACE,kBAACyC,EAAA,EAAD,CACEiH,UAAU,UACVlE,MAAO,CAAE9C,IAAK,GACdF,SAAS,QACTb,GAAG,oBACHC,EAAE,OACFmJ,GAAI,EACJC,GAAI,EACJ5H,cAAc,OACd6H,OAAO,OACPC,UACElL,EACI,sCACA,oCAGN,kBAACmL,EAAA,EAAD,CAAMC,UAAQ,EAACpB,eAAe,gBAAgBN,UAAU,WACtD,kBAAC2B,EAAA,EAAD,CAAMC,GAAIC,IAAY9E,GAAG,KACvB,kBAAC0E,EAAA,EAAD,CAAMC,UAAQ,EAAC/J,QAvBP,WACd1B,GAAiB,IAsBsB+J,UAAU,QACzC,kBAACnG,EAAA,EAAD,CACEC,IAAI,+EACJF,KAAM,KAER,kBAACkI,EAAA,EAAD,CACEF,GAAG,KACHhI,KAAK,KACLmI,WAAW,MACX1J,MAAM,UACN2J,WAAW,gBACXhC,UAAU,aANZ,gBAYJ,kBAACyB,EAAA,EAAD,CAAMC,UAAQ,EAAC1B,UAAU,sBACvB,kBAACiC,EAAD,MADF,SAMF,kBAACR,EAAA,EAAD,CAAMnB,eAAe,WAAW4B,YAAY,QAAQlC,UAAU,aAE5D,kBAAC2B,EAAA,EAAD,CACEQ,eAAe,OACftJ,OAAQ,CAAER,MAAO,WACjB2H,UAAU,eACV4B,GAAIC,IACJ9E,GAAG,aACHsE,GAAI,EACJhJ,MAAM,QAPR,gBAWA,kBAACsJ,EAAA,EAAD,CACE9I,OAAQ,CAAER,MAAO,WACjB2H,UAAU,eACV4B,GAAIC,IACJ9E,GAAG,aACHsE,GAAI,EACJhJ,MAAM,QANR,iB,kBCyHO+J,MA5Lf,SAAgBxM,GACd,IAAMyM,EAAc1B,iBAAO,MACrB2B,EAAa3B,iBAAO,MAEpBH,EAAUC,cAEVC,EAAUC,iBAAO,MACjB4B,EAAW5B,iBAAO,MAPH,EASG9K,mBAAS,GATZ,mBASd2M,EATc,aAcjBrI,qBAAW3E,IAHb8B,EAXmB,EAWnBA,OACArB,EAZmB,EAYnBA,iBACAU,EAbmB,EAanBA,mBA0FI8L,EAAe,CACnB3J,SAAU,WACV4J,MAAO,OACPC,OAAQ,QACRxJ,WAAY,MACZyJ,WAAY,OACZC,SAAU,SACVzJ,aAAc,MACdf,MAAO,OACPC,OAAQ,UACRmB,YAAa,OACbf,SAAU,SAKZ,OAFA8C,QAAQC,IAAI+G,GAGV,yBAAK1G,MAhCW,CAChBqE,UAAW,QACXlG,UAAW,WA+BT,0BACE+F,UAAU,OACVa,SA3GN,SAAoBC,GAClBtF,QAAQC,IAAI,SACZqF,EAAEC,iBAEF,IAAM+B,EAAQpC,EAAQM,QAAQ5J,MACxBQ,EAAO2K,EAASvB,QAAQ5J,MAS9B,GAPc,UAAV0L,GAA8B,SAATlL,IACvB3B,GAAiB,GACjBuK,EAAQd,KAAK,MAKD,UAAVoD,GAA8B,SAATlL,EACvB,IACEsD,IACGC,IADH,8DAE2D7D,EAF3D,uDAEgHwL,EAFhH,iBAE8HN,IAE3HpH,MAAK,SAAAC,GACJ1E,EAAmB0E,EAAIC,KAAKsF,SAC5BpF,QAAQC,IAAIJ,EAAIC,KAAKsF,SACrB3K,GAAiB,GAEjBuK,EAAQd,KAAK,kBAEjB,MAAOnE,GACPC,QAAQC,IAAIF,GAKhB,GADAC,QAAQC,IAAI7D,GACC,SAATA,GAA6B,UAAVkL,EACrB,IACE5H,IACGC,IADH,8DAE2D7D,EAF3D,gDAEyGM,EAFzG,iBAEsH4K,IAEnHpH,MAAK,SAAAC,GACJ1E,EAAmB0E,EAAIC,KAAKsF,SAC5BpF,QAAQC,IAAIJ,EAAIC,KAAKsF,SACrB3K,GAAiB,GAEjBuK,EAAQd,KAAK,kBAEjB,MAAOnE,GACPC,QAAQC,IAAIF,GAMhB,GAFAC,QAAQC,IAAI7D,GACZ4D,QAAQC,IAAIqH,GACC,SAATlL,GAA6B,UAAVkL,EACrB,IACE5H,IACGC,IADH,8DAE2D7D,EAF3D,gDAEyGM,EAFzG,wBAE6HkL,EAF7H,iBAE2IN,IAExIpH,MAAK,SAAAC,GACJ1E,EAAmB0E,EAAIC,KAAKsF,SAC5BpF,QAAQC,IAAIJ,EAAIC,KAAKsF,SACrB3K,GAAiB,GAEjBuK,EAAQd,KAAK,kBAEjB,MAAOnE,GACPC,QAAQC,IAAIF,KAyCZO,MAAO,CAAEsE,QAAS,OAAQE,eAAgB,SAAUD,SAAU,SAE9D,kBAACtH,EAAA,EAAD,CAAKO,EAAE,SAASjB,MAAM,cAAcK,SAAS,MAAMqK,GAAG,MAAMC,GAAG,OAA/D,kBAGA,kBAACC,EAAA,EAAD,CAAQ/B,IAAKR,EAAS5E,MAAO2G,EAAcvK,EAAE,MAAM6K,GAAG,MAAMC,GAAG,OAC7D,4BAAQ9B,IAAKmB,GAAb,SAEA,4BAAQjL,MAAM,MAAd,UAEA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,UACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,MAAd,eACA,4BAAQA,MAAM,MAAd,SACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,WACA,4BAAQA,MAAM,SAAd,WACA,4BAAQA,MAAM,OAAd,mBACA,4BAAQA,MAAM,SAAd,YACA,4BAAQA,MAAM,MAAd,YACA,4BAAQA,MAAM,SAAd,QAEF,kBAAC6L,EAAA,EAAD,CAAQ/B,IAAKqB,EAAUzG,MAAO2G,EAAcvK,EAAE,MAAM6K,GAAG,MAAMC,GAAG,OAC9D,4BAAQ9B,IAAKoB,GAAb,QAEA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,yCAGF,kBAACpE,EAAA,EAAD,CACEhF,gBAAgB,oBAChBV,YAAY,WACZH,MAAM,WACNyD,MA/Ea,CACnB6G,OAAQ,MACRpK,YAAa,MACb0B,UAAW,SACXkI,eAAgB,OAChB/B,QAAS,cACT1H,SAAU,QACVJ,OAAQ,UACRc,aAAc,OAwERP,OAAQ,CACNK,gBAAiB,WACjBb,MAAO,oBACP0J,WAAY,OAEdd,KAAK,SACL8B,GAAG,MACHC,GAAG,OAZL,a,SC1EOE,EA/FA,WAMb,OACE,kBAACnK,EAAA,EAAD,CACEiH,UAAU,mBACV/H,GAAG,oBACHkL,WAAW,OACX3B,UAAU,oCACV1I,SAAS,YAET,kBAACsK,EAAA,EAAD,CAASC,IAAK,IACd,kBAAC5B,EAAA,EAAD,CACEzB,UAAU,SACVM,eAAe,eACfgD,cAAc,MACdH,WAAW,MACXzJ,cAAc,OAEd,kBAAC+H,EAAA,EAAD,CACEzB,UAAU,oBACVM,eAAe,eACfhD,GAAG,QAEH,kBAACmE,EAAA,EAAD,CAAMpJ,MAAM,UAAU6H,OAAO,QAAQF,UAAU,kBAC7C,kBAAChD,EAAA,EAAD,CAAMgD,UAAU,YAAY3H,MAAM,WAAlC,sBACwB,KAExB,kBAACsJ,EAAA,EAAD,CACE3B,UAAU,QACVuD,KAAK,4BACL1K,OAAQ,CAAER,MAAO,WACjBmL,YAAU,EACVlG,IAAK,EACLmG,GAAI,GAEJ,uBAAGzD,UAAU,qDARf,SAWA,kBAAC2B,EAAA,EAAD,CACE3B,UAAU,QACVuD,KAAK,4BACL1K,OAAQ,CAAER,MAAO,WACjBmL,YAAU,EACVlG,IAAK,GAEL,uBAAG0C,UAAU,qDAPf,QAQQ,KAER,kBAAC2B,EAAA,EAAD,CACE3B,UAAU,QACVuD,KAAK,gCACL1K,OAAQ,CAAER,MAAO,WACjBmL,YAAU,EACVlG,IAAK,GAEL,uBAAG0C,UAAU,qDAPf,WAWF,kBAACoD,EAAA,EAAD,CAAS9F,GAAG,OAAOoG,YAAY,aAC/B,kBAACjC,EAAA,EAAD,CAAMzB,UAAU,gBACd,kBAAC2B,EAAA,EAAD,CACEtJ,MAAM,OACNH,EAAE,OACFuL,GAAG,OACH5K,OAAQ,CAAER,MAAO,WACjBkL,KAAK,uDACLC,YAAU,EACVlG,IAAK,GAEL,uBAAG0C,UAAU,wCACb,0BAAMA,UAAU,aAAhB,mBAKN,kBAACyB,EAAA,EAAD,CAAMpJ,MAAM,OAAO2H,UAAU,cAAcsD,cAAc,UACvD,kBAACtG,EAAA,EAAD,CACEtE,SAAU,CAAC,KAAM,KAAM,KAAM,MAC7BqJ,WAAW,OACXjG,MAnFW,CACnB8G,WAAY,4CACZe,qBAAsB,OACtBC,oBAAqB,gBA6Ef,cAOA,kBAAC/J,EAAA,EAAD,CAAOC,IA1Ff,qIA0FkCF,KAAK,aChB1BiK,MApEf,WAAqB,IAAD,EASd1J,qBAAW3E,GAPbe,EAFgB,EAEhBA,aACAD,EAHgB,EAGhBA,UACAE,EAJgB,EAIhBA,gBACAC,EALgB,EAKhBA,mBACAT,EANgB,EAMhBA,cACAC,EAPgB,EAOhBA,iBACAqB,EARgB,EAQhBA,OAWF,SAASwM,IACP,IAAMC,EAAYC,OAAOC,SAEpB3N,GAAayN,EAAY,EAC5BxN,GAAa,GACJD,GAA2B,IAAdyN,GACtBxN,GAAa,GAoBjB,OAlCAwE,qBAAU,WAGR,OAFAiJ,OAAOE,iBAAiB,SAAUJ,GAE3B,kBAAME,OAAOG,oBAAoB,SAAUL,MAEjD,CAACxN,IAaJyE,qBAAU,WACR,IAAsB,IAAlB/E,EACF,IACEkF,IACGC,IADH,mEAEgE7D,IAE7D8D,MAAK,SAACC,GACL5E,EAAmB4E,EAAIC,KAAKsF,YAEhC,MAAOrF,GACPC,QAAQC,IAAIF,MAGf,CAACvF,EAAesB,EAAQb,EAAoBR,IAG7C,kBAAC8C,EAAA,EAAD,CAAKd,GAAG,oBACRa,SAAS,WACTsL,UAAU,SAFV,OAKE,kBAAC,EAAD,MACA,kBAACtC,EAAA,EAAD,CACEF,GAAG,KACHhI,KAAK,KACLuG,UAAU,OACVkE,WAAW,KACXhM,MAAM,eAELrC,EAAgB,iBAAmB,MAEtC,kBAAC,EAAD,CAAMI,cAAeI,IACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,QCWS8N,EA5EQ,WAAO,IAAD,EACGzO,mBAAS,MADZ,mBACpBoJ,EADoB,KACXC,EADW,OAISC,cAA5B/E,EAJmB,EAInBA,OAAQgF,EAJW,EAIXA,OAAQ/E,EAJG,EAIHA,QAJG,MAgBmBF,qBAAW3E,GAAjDoB,EAhBmB,EAgBnBA,GAAIE,EAhBe,EAgBfA,aAAcC,EAhBC,EAgBDA,gBAG1BgE,qBAAU,WACRnE,EAAGyH,WAAW,kBACXlD,MACAC,MAAK,SAAAoD,GACJzH,EAAgByH,GAChBhD,QAAQC,IAAI7E,QAGf,IAsBH,OACE,oCACE,yBAAKoJ,UAAU,YAAYlE,MArBZ,CACjBmE,SAAU,SACVE,UAAW,MACXD,OAAQ,SACRE,QAAS,OACTC,SAAU,OACVC,eAAgB,iBAgBXxJ,EAAasF,KAAI,SAAAnB,GAChB,OACE,kBAAC,EAAD,CACE0B,IAAK1B,EAAMX,GACX5C,MAAOuD,EAAM6D,WACbrH,SAAUwD,EAAM2D,WAChBhH,UAC6BiI,IAA3B5E,EAAM8D,iBACF,IAAIrB,KAAKzC,EAAM8D,kBAAkBe,cACjC,KAENjI,YACwBgI,IAAtB5E,EAAM+D,YAA4B/D,EAAM+D,YAAc,KAExDrH,QAAS,kBA7DO2C,EA6DkBW,EAAMX,GA5DlD4E,EAAW5E,QACX8E,IAFF,IAA4B9E,SAkExB,kBAAC,EAAD,CAAcF,OAAQA,EAAQC,QAASA,EAASC,GAAI2E,MChC3CsF,EAvCY,WAAO,IAAD,EACKpK,qBAAW3E,GAAvCc,EADuB,EACvBA,UAAWC,EADY,EACZA,aAUnB,SAASuN,IACP,IAAMC,EAAYC,OAAOC,SAEpB3N,GAAayN,EAAY,EAC5BxN,GAAa,GACJD,GAA2B,IAAdyN,GACtBxN,GAAa,GAIjB,OAlBAwE,qBAAU,WAGR,OAFAiJ,OAAOE,iBAAiB,SAAUJ,GAE3B,kBAAME,OAAOG,oBAAoB,SAAUL,MAEjD,CAACxN,IAcF,kBAACyC,EAAA,EAAD,CAAKd,GAAG,oBACRa,SAAS,WACTsL,UAAU,SAFV,OAKE,kBAACrL,EAAA,EAAD,KACE,wBAAIiH,UAAU,+BAAd,oBAEF,kBAACjH,EAAA,EAAD,CAAKiH,UAAU,cACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,eCiNSwE,MAlPf,SAA0B5O,GACxB,IAAM4K,EAAUC,cADe,EAEgBtG,qBAAW3E,GAAlD8B,EAFuB,EAEvBA,OAAQD,EAFe,EAEfA,SAAUpB,EAFK,EAELA,iBAFK,EAIGJ,mBAAS,IAJZ,mBAIxB4O,EAJwB,KAIbC,EAJa,OAKG7O,mBAAS,IALZ,mBAKxB8O,EALwB,KAKbC,EALa,OAMW/O,mBAAS,IANpB,mBAMxBgP,EANwB,KAMTC,EANS,OAOSjP,oBAAS,GAPlB,mBAOxBkP,EAPwB,KAOVC,EAPU,KAS/BC,YAAW,WACTD,GAAgB,KACf,MAEH,IAKI9I,EAAW,GAGG,OAAdyI,IAGFzI,EAAWyI,EAAUvI,KAAI,SAACC,EAAYC,GAAW,IAE7CC,EAKEF,EALFE,QACAC,EAIEH,EAJFG,UACAhD,EAGE6C,EAHF7C,KACAiD,EAEEJ,EAFFI,aACIC,EACFL,EADF/B,GAGF,OACE,kBAACvB,EAAA,EAAD,CACE4D,IAAKJ,EACLtC,UAAU,SACViI,YAAY,OACZmC,WAAW,QAEX,kBAAC,IAAD,CAAMtH,GAAE,iBAAYL,IACA,OAAjBD,EACC,kBAAC5C,EAAA,EAAD,CACEzB,EAAE,SACFE,OAAO,UACPG,QAAQ,KACRqB,IAAKE,IACLD,UAAU,QACV2I,MAAM,QACNzC,SAAS,SAGX,kBAACpG,EAAA,EAAD,CACEzB,EAAE,SACFE,OAAO,UACPG,QAAQ,KACRqB,IAAKzC,EAAWoF,EAChB1C,UAAU,QACV2I,MAAM,QACNzC,SAAS,UAIf,kBAAClH,EAAA,EAAD,CAAKJ,EAAE,OACJa,EADH,IACS,6BAAO,IACd,kBAACwD,EAAA,EAAD,CAAMtE,SAAS,QAAQuE,UAAU,UAC9BT,SAUb,IAAI0I,EAAqB,GACrBL,EAAcnG,OAAS,IACzBwG,EAAqBL,EAAczI,KAAI,SAAC+I,GACtC,OACE,kBAACpM,EAAA,EAAD,CAAKqF,GAAG,OAAOzB,IAAKwI,EAAQ7K,IAC1B,4BACE5C,MAAOyN,EAAQvF,eACf8C,MAAM,MACNC,OAAO,MACP7I,IAAG,UApEI,kCAoEJ,OAAmBqL,EAAQxI,KAC9BqD,UAAU,2BAtFW,IA8FvBf,EAAYrJ,EAAZqJ,QAERlE,qBAAU,WACR,IACEG,IACGC,IADH,6CAC6C8D,EAD7C,oBACgE3H,IAC7D8D,MAAK,SAACC,GAELqJ,EAAarJ,EAAIC,SAErB,MAAOC,GACPC,QAAQC,IAAIF,GAEd,IACEL,IACGC,IADH,6CAE0C8D,EAF1C,oBAE6D3H,EAF7D,+BAIG8D,MAAK,SAACC,GAELyJ,EAAiBzJ,EAAIC,KAAK8J,OAAOxE,YAErC,MAAOrF,GACPC,QAAQC,IAAIF,GAEd,IACEL,IACGC,IADH,6CAE0C8D,EAF1C,4BAEqE3H,IAElE8D,MAAK,SAACC,GAELuJ,EAAavJ,EAAIC,KAAKI,SAE1B,MAAOH,GACPC,QAAQC,IAAIF,MAEb,CAACjE,EAAQ2H,IAGZ,IAOMoG,EAAiB,CACrB3C,MAAO,QACP4C,gBAAgB,0CAAD,OAA4Cb,EAAUc,cAAtD,KACfC,eAAgB,QAChBC,mBAAoB,OAGhBC,EAAY,CAChBzF,SAAU,MACVC,OAAQ,SACR7H,MAAO,SAUT,OACE,oCACE,kBAACU,EAAA,EAAD,KACGgM,EAAe,KACd,kBAAChM,EAAA,EAAD,CAAKiH,UAAU,iBACb,kBAAC2F,EAAA,EAAD,CACE7J,MAbQ,CAClBhD,SAAU,QACVE,IAAK,MACLW,KAAM,MAENiM,UAAW,yBASDC,UAAU,MACVC,MAAM,OACNC,WAAW,WACX1N,MAAM,QACNuB,KAAK,YAKb,kBAACb,EAAA,EAAD,CACE+C,MAAOuJ,EACP1C,OAAQ,CAAC,QAAS,QAAS,QAAS,SACpC7J,SAAU,CAAC,WAAY,WAAY,SAAU,WAE7C,kBAACC,EAAA,EAAD,CACE+C,MAAO,CACLhD,SAAU,WACVE,IAAK,IACLW,KAAM,IACN+I,MAAO,OACPC,OAAQ,OACRzJ,gBAAiB,oBAGnB,kBAACH,EAAA,EAAD,CAAK+C,MAAO4J,GACV,kBAAC5D,EAAA,EAAD,CACEhJ,SAAS,WACTE,IAAI,MACJX,MAAM,QACNK,SAAU,CAAC,OAAQ,OAAQ,OAAQ,SAElC+L,EAAU7E,gBAGb,0BACEI,UACE+E,EAAY,gDAEdpN,QAjMG,WACb6I,EAAQwF,IAAI,GACZ/P,GAAiB,KA2LT,aAWN,kBAAC8C,EAAA,EAAD,CAAK+C,MA/EU,CACjB5C,gBAAiB,UACjByJ,OAAQ,OACRD,MAAO,OACPuD,UAAW,WA4EP,kBAAClN,EAAA,EAAD,CAAK+C,MAAO4J,GACV,kBAAC3M,EAAA,EAAD,CAAKmN,SAAS,QACZ,kBAACpE,EAAA,EAAD,CAASqE,GAAG,QAAZ,WACA,2BAAI1B,EAAUpH,WAGhB,kBAACtE,EAAA,EAAD,CAAKmN,SAAS,QACZ,kBAACpE,EAAA,EAAD,CAASqE,GAAG,QAAZ,SAEA,kBAAC1E,EAAA,EAAD,CAAM2E,KAAK,SAASC,UAAU,OAAO/F,eAAe,iBACjDpE,IAIL,kBAACnD,EAAA,EAAD,CAAKoK,WAAW,QACd,kBAACrB,EAAA,EAAD,CAASqE,GAAG,QAAZ,YACA,kBAAC1E,EAAA,EAAD,CAAM2E,KAAK,SAASC,UAAU,OAAO/F,eAAe,UACjDuE,EAAcnG,OAAS,EACpBwG,EACA,8BCjOHoB,MAVf,WAA6B,IACnBrH,EAAYsH,cAAZtH,QAER,OACE,6BACE,kBAAC,EAAD,CAAkBA,QAASA,MC+FlBuH,MAjGf,WAA0B,IAAD,EAC+BrM,qBAAW3E,GAAzD8B,EADe,EACfA,OAAQD,EADO,EACPA,SAAUd,EADH,EACGA,aAAcD,EADjB,EACiBA,UAEhCmQ,EAAaF,cAAbE,SAHe,EAKmB5Q,mBAAS,MAL5B,mBAKhB6Q,EALgB,KAKDC,EALC,OAMmB9Q,mBAAS,IAN5B,mBAMhBO,EANgB,KAMDC,EANC,KAgBvB,SAASyN,IACP,IAAMC,EAAYC,OAAOC,SAEpB3N,GAAayN,EAAY,EAC5BxN,GAAa,GACJD,GAA2B,IAAdyN,GACtBxN,GAAa,GA8BjB,OA5CAwE,qBAAU,WAGR,OAFAiJ,OAAOE,iBAAiB,SAAUJ,GAE3B,kBAAME,OAAOG,oBAAoB,SAAUL,MAEjD,CAACxN,IAaJyE,qBAAU,WACR,GAAiB,OAAb0L,EACF,IACEvL,IACGC,IADH,8CAG2CsL,EAH3C,oBAG+DnP,IAE5D8D,MAAK,SAACC,GACLsL,EAAiBtL,EAAIC,SAGzBJ,IACGC,IADH,8CAE2CsL,EAF3C,kCAE6EnP,IAG1E8D,MAAK,SAACC,GACLhF,EAAiBgF,EAAIC,KAAKI,SAE9B,MAAOH,GACPC,QAAQC,IAAIF,MAGf,CAACjE,EAAQmP,EAAUpQ,IAGpB,kBAAC0C,EAAA,EAAD,CAAKd,GAAG,oBAAoBa,SAAS,WAAWsL,UAAU,SAA1D,OAEqB,OAAlBsC,GACC,oCACE,kBAAC5E,EAAA,EAAD,CACEF,GAAG,KACHhI,KAAK,KACLuG,UAAU,QACVkE,WAAW,KACXhM,MAAM,eAELqO,EAAclN,MAEjB,kBAAC,IAAD,CACEwG,UAAU,WACV+C,GAAI,CAAE6D,KAAM,MAAOC,GAAI,OAAQC,GAAI,SACnC3G,UAAW,CAAEyG,KAAM,OAAQE,GAAI,QAC/BC,aAAa,OACbxO,YAAY,MACZC,YAAY,gBACZC,QAAQ,KACRoE,gBAAgB,aAEhB,kBAAChD,EAAA,EAAD,CACEzB,EAAE,OACF0B,IAAKzC,EAAWqP,EAAcjK,aAC9BpD,EAAG,CAAEuN,KAAM,QAASC,GAAI,SACxB9M,UAAU,QACVtB,QAAQ,OAEV,kBAACM,EAAA,EAAD,CAAKX,EAAE,OAAOC,MAAM,cAAcK,SAAS,SAA3C,oBACoBgO,EAAcM,YAInC5Q,EAAcsI,OAAS,GAAK,kBAAC,EAAD,CAAMtI,cAAeA,KAGtD,kBAAC,EAAD,MACA,kBAAC,EAAD,QC/CS6Q,MA7Cf,WAAuB,IAAD,EACgC9M,qBAAW3E,GAAvDkB,EADY,EACZA,eAAgBJ,EADJ,EACIA,UAAWC,EADf,EACeA,aAWnC,SAASuN,IACP,IAAMC,EAAYC,OAAOC,SAEpB3N,GAAayN,EAAY,EAC5BxN,GAAa,GACJD,GAA2B,IAAdyN,GACtBxN,GAAa,GAIjB,OApBAiF,QAAQC,IAAI/E,GAEZqE,qBAAU,WAGR,OAFAiJ,OAAOE,iBAAiB,SAAUJ,GAE3B,kBAAME,OAAOG,oBAAoB,SAAUL,MAEjD,CAACxN,IAcF,kBAACyC,EAAA,EAAD,CAAKd,GAAG,oBACRa,SAAS,WACTsL,UAAU,SAFV,OAKE,kBAAC,EAAD,MACA,kBAACtC,EAAA,EAAD,CACEF,GAAG,KACHhI,KAAK,KACLuG,UAAU,OACVkE,WAAW,KACXhM,MAAM,eALR,kBASA,kBAAC,EAAD,CAAMjC,cAAeM,IACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFSwQ,MAxCf,WAAuB,IAAD,EAC4C/M,qBAAW3E,GAAnEU,EADY,EACZA,YAAaE,EADD,EACCA,cAAeG,EADhB,EACgBA,aAAcD,EAD9B,EAC8BA,UAWlD,SAASwN,IACP,IAAMC,EAAYC,OAAOC,SAEpB3N,GAAayN,EAAY,EAC5BxN,GAAa,GACJD,GAA2B,IAAdyN,GACtBxN,GAAa,GAIjB,OApBAiF,QAAQC,IAAIvF,GAEZ6E,qBAAU,WAGR,OAFAiJ,OAAOE,iBAAiB,SAAUJ,GAE3B,kBAAME,OAAOG,oBAAoB,SAAUL,MAEjD,CAACxN,IAcF,kBAACyC,EAAA,EAAD,CAAKd,GAAG,oBACRa,SAAS,WACTsL,UAAU,SAFV,OAKE,kBAACtC,EAAA,EAAD,CAASoE,SAAS,OAAOiB,QAAQ,OAAOlN,UAAU,SAAS5B,MAAM,SAC9DnC,EAAYwI,OAAS,EAArB,6BACyBxI,GADzB,oBAIH,kBAAC,EAAD,CAAME,cAAeA,IACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,QCyBSgR,EA7DG,WAAO,IAAD,EACQvR,mBAAS,MADjB,mBACfoJ,EADe,KACNC,EADM,OAGcC,cAA5B/E,EAHc,EAGdA,OAAQgF,EAHM,EAGNA,OAAQ/E,EAHF,EAGEA,QAHF,MASqCF,qBACzD3E,GADMwB,EATc,EASdA,IAAKC,EATS,EASTA,mBAAoBC,EATX,EASWA,sBAKjC6D,qBAAU,WACR/D,EACGqH,WAAW,mBACXlD,MACAC,MAAK,SAAAoD,GACJtH,EAAsBsH,QAGzB,IAYH,OACE,oCACE,yBAAKwB,UAAU,YAAYlE,MAXZ,CACjBmE,SAAU,SACVE,UAAW,MACXD,OAAQ,SACRE,QAAS,OACTC,SAAU,OACVC,eAAgB,iBAMXrJ,EAAmBmF,KAAI,SAAAnB,GACtB,OACE,kBAAC,EAAD,CACE0B,IAAK1B,EAAMX,GACX5C,MAAOuD,EAAM6D,WACbrH,SAAUwD,EAAM2D,WAChBhH,UAC6BiI,IAA3B5E,EAAM8D,iBACF,IAAIrB,KAAKzC,EAAM8D,kBAAkBe,cACjC,KAENjI,YACwBgI,IAAtB5E,EAAM+D,YAA4B/D,EAAM+D,YAAc,KAExDrH,QAAS,kBA/CO2C,EA+CkBW,EAAMX,GA9ClD4E,EAAW5E,QACX8E,IAFF,IAA4B9E,SAoDxB,kBAAC,EAAD,CAAcF,OAAQA,EAAQC,QAASA,EAASC,GAAI2E,MCX3CoI,EA3CO,WAAO,IAAD,EAEUlN,qBAAW3E,GAAvCc,EAFkB,EAElBA,UAAWC,EAFO,EAEPA,aAUnB,SAASuN,IACP,IAAMC,EAAYC,OAAOC,SAEpB3N,GAAayN,EAAY,EAC5BxN,GAAa,GACJD,GAA2B,IAAdyN,GACtBxN,GAAa,GAIjB,OAlBAwE,qBAAU,WAGR,OAFAiJ,OAAOE,iBAAiB,SAAUJ,GAE3B,kBAAME,OAAOG,oBAAoB,SAAUL,MAEjD,CAACxN,IAcF,kBAACyC,EAAA,EAAD,CAAKd,GAAG,oBACFa,SAAS,WACTsL,UAAU,SAFhB,OAME,kBAACrL,EAAA,EAAD,KACE,wBAAIiH,UAAU,2BAAd,oBAEF,kBAACjH,EAAA,EAAD,CAAKiH,UAAU,cACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,MACA,kBAAC,EAAD,QCESsH,EAnCH,WACV,OACE,kBAAC,IAAD,KACE,yBAAKtH,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuH,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,8BACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,oBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,W,mBCnCCC,GAAW,6BACjBC,MADiB,IAEpBC,OAAO,6BACFD,KAAMC,QADL,IAEJC,kBAAmB,OACnBC,eAAgB,OAChBC,cAAe,OACfC,SAAU,UACVC,YAAa,W,OCDnBC,IAASC,OACP,kBAACvS,EAAD,KACE,kBAAC,IAAD,KACE,kBAACwS,EAAA,EAAD,CAAeT,MAAOD,IACpB,kBAACW,EAAA,EAAD,MACA,kBAAC,EAAD,SAINC,SAASC,cAAc,W,mBCnBzBC,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.0601ae73.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Localbase from \"localbase\";\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [searchQuery, setSearchQuery] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n  const [navShadow, setNavShadow] = useState(false);\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\n  const [filterdResults, setFilteredResults] = useState([]); // holds filtered movie results\n\n  //const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\"; // old key that stopped working\n  const APIKEY = \"4293a6234605063d9d99ec0e6ac2659d\";\n  \n  //Create a LOCAL DATABASE forfavorite movies using localbase imported.\n  let db = new Localbase(\"db\");\n  const [allFavMovies, setAllFavMovies] = useState([]);\n\n  //Create a LOCAL DATABASE for Watchlist movies using localbase imported.\n  let db2 = new Localbase(\"db2\");\n  const [allWatchListMovies, setallWatchListMovies] = useState([]);\n\n  return (\n    <Context.Provider\n      value={{\n        searchQuery,\n        setSearchQuery,\n        setSearchResults,\n        searchResults,\n        homePageResults,\n        setHomePageResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        db,\n        allFavMovies,\n        setAllFavMovies,\n        db2,\n        allWatchListMovies,\n        setallWatchListMovies,\n        setDefaultMovies,\n        navShadow,\n        setNavShadow,\n        defaultMovies,\n        filterdResults,\n        setFilteredResults,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image, PseudoBox, Icon } from \"@chakra-ui/core\";\nimport { FaHeart, FaClipboardList } from \"react-icons/fa\";\nimport NotFound from \"../img/not-found.jpg\";\n\nfunction Movieboxes(props) {\n  const {\n    imageSrc,\n    title,\n    onClick,\n    year,\n    rating,\n    isFavorite,\n    isWantToWatch,\n  } = props;\n\n  return (\n    <PseudoBox\n      onClick={() => onClick()}\n      bg=\"cardBackground\"\n      w=\"13vw\"\n      minW=\"175px\"\n      m={4}\n      color=\"primaryText\"\n      cursor=\"pointer\"\n      borderWidth=\"1px\"\n      borderColor=\"primaryBorder\"\n      rounded=\"lg\"\n      fontSize=\"0.8em\"\n      p=\"5px\"\n      opacity=\"0.75\"\n      _hover={{ borderColor: \"#666\", opacity: \"1\" }}\n      position=\"relative\"\n    >\n      {rating !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"8px\"\n          right=\"8px\"\n          backgroundColor=\"rgb(0,0,0,0.6)\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          <Box d=\"inline\">{rating}</Box>\n          <Icon\n            name=\"star\"\n            paddingLeft=\"2px\"\n            paddingBottom=\"3px\"\n            color=\"#ffff00\"\n          />\n        </Box>\n      )}\n\n      {isFavorite !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"4px\"\n          left=\"5px\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          {isFavorite && <FaHeart size=\"20px\" color=\"#ff0000\" />}\n        </Box>\n      )}\n\n      {isWantToWatch !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"4px\"\n          left=\"30px\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          {isWantToWatch && <FaClipboardList size=\"20px\" color=\"#49c3fd\" />}\n        </Box>\n      )}\n\n      {imageSrc !== null ? (\n        <Image rounded=\"lg\" src={imageSrc} objectFit=\"cover\" />\n      ) : (\n        <Image rounded=\"lg\" src={NotFound} objectFit=\"cover\" w=\"100%\" />\n      )}\n\n      <Box m=\"5px\" textAlign=\"center\" fontSize=\"1.1em\">\n        {`${title} ${year !== null ? `(${year})` : \"\"}`}\n      </Box>\n    </PseudoBox>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport NotFound from \"../img/not-found.jpg\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl, db, db2 } = useContext(Context);\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  const { allFavMovies, setAllFavMovies } = useContext(Context);\n  const { allWatchListMovies, setallWatchListMovies } = useContext(Context);\n\n  //create a handler for \"add to favorites\" button on the Modal.\n  const handleAddToFavorites = () => {\n    //Check for duplicate entries on the database before adding a movie.\n    for (let i = 0; i < allFavMovies.length; i++) {\n      if (allFavMovies[i].id === movieDetails.id) {\n        console.log(\"movie exists\");\n        return null;\n      }\n    }\n\n    //add image and title of movies clicked to the DB\n    db.collection(\"favoriteMovies\")\n      .add({\n        id: movieDetails.id,\n        movieImage:\n          movieDetails.poster_path === null\n            ? null\n            : ImageUrl + movieDetails.poster_path,\n        movieTitle: movieDetails.title,\n        movieReleaseDate: movieDetails.release_date,\n        movieRating: movieDetails.vote_average,\n      })\n      .then(() => {\n        db.collection(\"favoriteMovies\")\n          .get()\n          .then((movies) => {\n            setAllFavMovies(movies);\n          });\n      });\n  };\n  //create a handler for RemoveFromFavorites button on the Modal\n  const handleRemoveFromFavorites = () => {\n    db.collection(\"favoriteMovies\")\n      .doc({ id: id })\n      .delete()\n      //update favorite list\n      .then(() => {\n        db.collection(\"favoriteMovies\")\n          .get()\n          .then((movies) => {\n            setAllFavMovies(movies);\n          });\n      });\n  };\n\n  //create a handler for \"add to watch list\" button on the Modal.\n  const handleAddToWatchList = () => {\n    //Check for duplicate entries on the database before adding a movie.\n    for (let i = 0; i < allWatchListMovies.length; i++) {\n      if (allWatchListMovies[i].id === movieDetails.id) {\n        console.log(\"movie exists\");\n        return null;\n      }\n    }\n\n    //add image and title of movies clicked to the DB\n    db2\n      .collection(\"watchListMovies\")\n      .add({\n        id: movieDetails.id,\n        movieImage:\n          movieDetails.poster_path === null\n            ? null\n            : ImageUrl + movieDetails.poster_path,\n        movieTitle: movieDetails.title,\n        movieReleaseDate: movieDetails.release_date,\n        movieRating: movieDetails.vote_average,\n      })\n      .then(() => {\n        db2\n          .collection(\"watchListMovies\")\n          .get()\n          .then((movies) => {\n            setallWatchListMovies(movies);\n          });\n      });\n  };\n\n  //Create a handler to remove movies from watchlist\n  const handleRemoveFromWatchList = () => {\n    db2\n      .collection(\"watchListMovies\")\n      .doc({ id: id })\n      .delete()\n      //update watchlist\n      .then(() => {\n        db2\n          .collection(\"watchListMovies\")\n          .get()\n          .then((movies) => {\n            setallWatchListMovies(movies);\n          });\n      });\n  };\n\n  const [isFave, setisFave] = useState(false);\n  const [iswatchListed, setisWatchListed] = useState(false);\n  //check if a movie is favorited;\n  useEffect(() => {\n    setisFave(false);\n    allFavMovies.forEach((movie) => {\n      if (movie.id === id) {\n        setisFave(true);\n      }\n    });\n  }, [allFavMovies, id]);\n  //check is a movie is watchlisted\n  useEffect(() => {\n    setisWatchListed(false);\n    allWatchListMovies.forEach((movie) => {\n      if (movie.id === id) {\n        setisWatchListed(true);\n      }\n    });\n  }, [allWatchListMovies, id]);\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id,\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Link to={`/actor/${person_id}`}>\n                {profile_path === null ? (\n                  <Image\n                    cursor=\"pointer\"\n                    rounded=\"lg\"\n                    src={NotFound}\n                    h=\"80px\"\n                    objectFit=\"cover\"\n                  />\n                ) : (\n                  <Image\n                    cursor=\"pointer\"\n                    rounded=\"lg\"\n                    src={ImageUrl + profile_path}\n                    h=\"80px\"\n                    objectFit=\"cover\"\n                  />\n                )}\n              </Link>\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Rating: {movieDetails.vote_average}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>\n                {isFave ? (\n                  <Button\n                    variant=\"outline\"\n                    //width=\"350px\"\n                    borderWidth=\"2px\"\n                    backgroundColor=\"#db291d\"\n                    color=\"white\"\n                    _hover\n                    mr={3}\n                    onClick={handleRemoveFromFavorites}\n                  >\n                    -Favorites\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={handleAddToFavorites}\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                  >\n                    +Favorites\n                  </Button>\n                )}\n\n                {iswatchListed ? (\n                  <Button\n                    variant=\"outline\"\n                    borderWidth=\"2px\"\n                    backgroundColor=\"#db291d\"\n                    color=\"white\"\n                    _hover\n                    mr={3}\n                    //ml={6}\n                    onClick={handleRemoveFromWatchList}\n                  >\n                    -WatchList\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={handleAddToWatchList}\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    //ml={6}\n                  >\n                    +WatchList\n                  </Button>\n                )}\n              </ModalFooter>\n\n              <ModalFooter>\n                <Link to={`/moviedetailspage/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                </Link>\n                <Button\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={1}\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\nexport default MovieDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid(props) {\n  const { searchResults } = props;\n\n  const {\n    ImageUrl,\n    allFavMovies,\n    setAllFavMovies,\n    allWatchListMovies,\n    setallWatchListMovies,\n    db,\n    db2,\n  } = useContext(Context);\n\n  // State variables for moviedetails modal popup\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [favoriteMovieIds, setFavoriteMovieIds] = useState([]);\n  const [watchListMovieIds, setWatchListMovieIds] = useState([]);\n\n  //Get data from the DB and store all movie ids to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then((movies) => {\n        setAllFavMovies(movies);\n      });\n    console.log(\"getFavMovies UseEffect\");\n\n    db2\n      .collection(\"watchListMovies\")\n      .get()\n      .then((movies) => {\n        setallWatchListMovies(movies);\n      });\n    console.log(\"getWLMovies UseEffect\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //Get data from the favorites DB and store all movie ids to an array\n  useEffect(() => {\n    if (allFavMovies.length > 0) {\n      const movieIdArray = [];\n      allFavMovies.forEach((movie) => {\n        movieIdArray.push(movie.id);\n      });\n      setFavoriteMovieIds(movieIdArray);\n    }\n  }, [allFavMovies]);\n\n  //Get data from the watchlist DB and store all movie ids to an array\n  useEffect(() => {\n    if (allWatchListMovies.length > 0) {\n      const movieIdArray = [];\n      allWatchListMovies.forEach((movie) => {\n        movieIdArray.push(movie.id);\n      });\n      setWatchListMovieIds(movieIdArray);\n    }\n  }, [allWatchListMovies]);\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    marginTop: \"15px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n  };\n\n  const movieBoxes = searchResults.map(function (movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={\n          movie.poster_path === null ? null : ImageUrl + movie.poster_path\n        }\n        year={\n          movie.release_date === undefined || movie.release_date === \"\"\n            ? null\n            : new Date(movie.release_date).getFullYear()\n        }\n        rating={movie.vote_average}\n        isFavorite={favoriteMovieIds.includes(movie.id)}\n        isWantToWatch={watchListMovieIds.includes(movie.id)}\n        onClick={() => onHandleMovieClick(movie.id)}\n      />\n    );\n  });\n\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n\n    onOpen();\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Search() {\n  const history = useHistory();\n\n  const {\n    setSearchResults,\n    searchQuery,\n    setSearchQuery,\n    setIsSearch,\n    APIKEY\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n\n    setSearchQuery(inputEl.current.value);\n\n    setIsSearch(true);\n\n    history.push(\"/searchPage\"); // Routes to search page on submit\n    console.log(searchQuery);\n  }\n\n  useEffect(() => {\n    if (searchQuery.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${searchQuery}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, searchQuery, setIsSearch, setSearchResults]);\n\n  return (\n    <div className=\"search\">\n      <form onSubmit={searchSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          ref={inputEl}\n          placeholder=\"Search movies!\"\n        ></input>\n        <button type=\"submit\" name=\"button\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from \"./Searchbar\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport {\n  Box,\n  Image,\n  Link,\n  //Switch,\n  Heading,\n  Flex,\n} from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const { setDefaultMovies, navShadow } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n  };\n\n  return (\n    <Box\n      className=\"nav-bar\"\n      style={{ top: 0 }}\n      position=\"fixed\"\n      bg=\"primaryBackground\"\n      w=\"100%\"\n      px={5}\n      py={5}\n      paddingBottom=\"10px\"\n      zIndex=\"1000\"\n      boxShadow={\n        navShadow\n          ? \"0px 6px 6px 3px rgba(0, 0, 0, 0.25)\"\n          : \"0px 6px 6px 3px rgba(0, 0, 0, 0)\"\n      }\n    >\n      <Flex isInline justifyContent=\"space-between\" className=\"top-nav\">\n        <Link as={RouterLink} to=\"/\">\n          <Flex isInline onClick={clicked} className=\"logo\">\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={46}\n            />\n            <Heading\n              as=\"h3\"\n              size=\"xl\"\n              fontWeight=\"200\"\n              color=\"#49c3fd\"\n              fontFamily=\"Gugi, cursive\"\n              className=\"logo-name\"\n            >\n              DAILY FLIX\n            </Heading>\n          </Flex>\n        </Link>\n        <Flex isInline className=\"search-bar-section\">\n          <Searchbar />\n          {/*<Switch size=\"sm\" className=\"switch-button\" />*/}\n          &nbsp;\n        </Flex>\n      </Flex>\n      <Flex justifyContent=\"flex-end\" marginRight=\"198px\" className=\"nav-lists\">\n        {/* Use RouterLink as written in ChakraUI docs */}\n        <Link\n          textDecoration=\"none\"\n          _hover={{ color: \"#49c3fd\" }}\n          className=\"navbar-links\"\n          as={RouterLink}\n          to=\"/favorites\"\n          px={2}\n          color=\"#fff\"\n        >\n          My Favorites\n        </Link>\n        <Link\n          _hover={{ color: \"#49c3fd\" }}\n          className=\"navbar-links\"\n          as={RouterLink}\n          to=\"/watchList\"\n          px={2}\n          color=\"#fff\"\n        >\n          Watch List\n        </Link>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext, useRef, useState } from \"react\";\nimport \"./filter.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../Context\";\nimport { Button, Select, Box } from \"@chakra-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Filter(props) {\n  const genreOption = useRef(null);\n  const yearOption = useRef(null);\n\n  const history = useHistory();\n\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  // eslint-disable-next-line no-unused-vars\n  const [page, setPage] = useState(1);\n  const {\n    APIKEY,\n    setDefaultMovies,\n    setFilteredResults\n  } = useContext(Context);\n\n  function formSubmit(e) {\n    console.log(\"hello\");\n    e.preventDefault();\n\n    const genre = inputEl.current.value;\n    const year = selectEl.current.value;\n\n    if (genre === \"Genre\" && year === \"Year\") {\n      setDefaultMovies(true);\n      history.push(\"/\");\n    }\n\n    //   Checks wheither if correct selections are submitted\n\n    if (genre !== \"Genre\" && year === \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&with_genres=${genre}&page=${page}`\n          )\n          .then(res => {\n            setFilteredResults(res.data.results);\n            console.log(res.data.results);\n            setDefaultMovies(false);\n\n            history.push(\"/filterPage\");\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(year);\n    if (year !== \"Year\" && genre === \"Genre\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&page=${page}`\n          )\n          .then(res => {\n            setFilteredResults(res.data.results);\n            console.log(res.data.results);\n            setDefaultMovies(false);\n\n            history.push(\"/filterPage\");\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(year);\n    console.log(genre);\n    if (year !== \"Year\" && genre !== \"Genre\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}&page=${page}`\n          )\n          .then(res => {\n            setFilteredResults(res.data.results);\n            console.log(res.data.results);\n            setDefaultMovies(false);\n            //setSubmit(false);\n            history.push(\"/filterPage\");\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  const filterbar = {\n    marginTop: \"100px\",\n    textAlign: \"center\"\n  };\n  const filterButton = {\n    height: \"2em\",\n    borderWidth: \"2px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"0.9em\",\n    cursor: \"pointer\",\n    borderRadius: \"1em\"\n  };\n\n  const selectStyles = {\n    position: \"relative\",\n    width: \"10em\",\n    height: \"2.2em\",\n    lineHeight: \"2em\",\n    background: \"#444\", //\"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \"1em\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    paddingLeft: \"15px\",\n    fontSize: \"0.8em\"\n  };\n\n  console.log(page);\n\n  return (\n    <div style={filterbar}>\n      <form\n        className=\"form\"\n        onSubmit={formSubmit}\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n      >\n        <Box d=\"inline\" color=\"primaryText\" fontSize=\"1em\" mx=\"7px\" my=\"5px\">\n          Find Movies By\n        </Box>\n        <Select ref={inputEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={genreOption}>Genre</option>\n\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </Select>\n        <Select ref={selectEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={yearOption}>Year</option>\n\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2014</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </Select>\n\n        <Button\n          backgroundColor=\"primaryBackground\"\n          borderColor=\"logoText\"\n          color=\"logoText\"\n          style={filterButton}\n          _hover={{\n            backgroundColor: \"logoText\",\n            color: \"primaryBackground\",\n            fontWeight: \"900\"\n          }}\n          type=\"submit\"\n          mx=\"7px\"\n          my=\"7px\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React from \"react\";\nimport { Link, Text, Divider, Flex, Image, Box } from \"@chakra-ui/core\";\nconst movieDB_logo =\n  \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\";\n\nconst Footer = () => {\n  const textGradient = {\n    background: \"-webkit-linear-gradient(#90cea1, #01b4e4)\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: \"transparent\"\n  };\n  return (\n    <Box\n      className=\"footer-container\"\n      bg=\"primaryBackground\"\n      paddingTop=\"10px\"\n      boxShadow=\"0px -4px 4px 1px rgba(0,0,0,0.25)\"\n      position=\"relative\"\n    >\n      <Divider mb={-1}/>\n      <Flex\n        className=\"footer\"\n        justifyContent=\"space-around\"\n        flexDirection=\"row\"\n        paddingTop=\"2px\"\n        paddingBottom=\"5px\"\n      >\n        <Flex\n          className=\"githubs-container\"\n          justifyContent=\"space-around\"\n          mt=\"30px\"\n        >\n          <Flex color=\"#e5e5e5\" margin=\"0 4px\" className=\"footer-githubs\">\n            <Text className=\"copyright\" color=\"#F34C28\">\n              &copy; Copyright 2020{\" \"}\n            </Text>\n            <Link\n              className=\"names\"\n              href=\"https://github.com/dpajek\"\n              _hover={{ color: \"#49c3fd\" }}\n              isExternal\n              mt={-2}\n              ml={2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>\n              Pajek\n            </Link>\n            <Link\n              className=\"names\"\n              href=\"https://github.com/Eerian\"\n              _hover={{ color: \"#49c3fd\" }}\n              isExternal\n              mt={-2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>\n              Erion{\" \"}\n            </Link>\n            <Link\n              className=\"names\"\n              href=\"https://github.com/Rayhan1998\"\n              _hover={{ color: \"#49c3fd\" }}\n              isExternal\n              mt={-2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>\n              Rayhan\n            </Link>\n          </Flex>\n          <Divider mt=\"-4px\" orientation=\"vertical\" />\n          <Flex className=\"project-repo\">\n            <Link\n              color=\"#fff\"\n              w=\"100%\"\n              ml=\"20px\"\n              _hover={{ color: \"#49c3fd\" }}\n              href=\"https://github.com/chingu-voyages/v24-geckos-team-03\"\n              isExternal\n              mt={-2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github\"></i>\n              <span className=\"repo-name\">Project Repo</span>\n            </Link>\n          </Flex>\n        </Flex>\n\n        <Flex color=\"#fff\" className=\"footer-logo\" flexDirection=\"column\">\n          <Text\n            fontSize={[\"sm\", \"md\", \"lg\", \"xl\"]}\n            fontWeight=\"bold\"\n            style={textGradient}\n          >\n            Powered By\n          </Text>\n          <Image src={movieDB_logo} size=\"50px\" />\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React, { useContext, useEffect } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\nimport { Context } from \"../Context\";\nimport Footer from \"./../components/Footer\";\n\nfunction Homepage() {\n  const {\n    setNavShadow,\n    navShadow,\n    homePageResults,\n    setHomePageResults,\n    defaultMovies,\n    setDefaultMovies,\n    APIKEY,\n  } = useContext(Context);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navShadow]);\n  // need navShadow as a dependency, or the value of navShadow won't change between onScroll events (it will always be false)\n\n  function onScroll() {\n    const scrollTop = window.scrollY;\n\n    if (!navShadow && scrollTop > 0) {\n      setNavShadow(true);\n    } else if (navShadow && scrollTop === 0) {\n      setNavShadow(false);\n    }\n  }\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setHomePageResults(res.data.results);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies, APIKEY, setHomePageResults, setDefaultMovies]);\n\n  return (\n    <Box bg=\"primaryBackground\"\n    position=\"relative\"\n    minHeight=\"100vh\"\n    >\n      &nbsp;\n      <Filter />\n      <Heading\n        as=\"h3\"\n        size=\"lg\"\n        marginTop=\"10px\"\n        marginLeft=\"5%\"\n        color=\"primaryText\"\n      >\n        {defaultMovies ? \"Popular Movies\" : null}\n      </Heading>\n      <Grid searchResults={homePageResults} />\n      <NavBar />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\n//import { useHistory } from \"react-router-dom\";\n\nconst FavoriteMovies = () => {\n  const [movieId, setMovieId] = useState(null);\n  //const history = useHistory();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  /*\n  const goBack = () => {\n    history.goBack();\n  };\n  */\n\n  const { db, allFavMovies, setAllFavMovies } = useContext(Context);\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then(movies => {\n        setAllFavMovies(movies);\n        console.log(db);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  /*\n  const responsiveArrow = {\n    color: \"white\",\n    position: \"absolute\",\n    top: \"170px\",\n    left: \"70px\",\n    cursor: \"pointer\"\n  };\n  */\n \n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allFavMovies.map(movie => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n\nexport default FavoriteMovies;\n","import React, { useContext, useEffect } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport NavBar from \"../components/NavBar\";\nimport FavoriteMovies from \"./../components/FavoriteMovies\";\nimport Footer from \"./../components/Footer\";\nimport { Context } from \"../Context\";\n\nconst FavoriteMoviespage = () => {\n  const { navShadow, setNavShadow } = useContext(Context);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navShadow]);\n  // need navShadow as a dependency, or the value of navShadow won't change between onScroll events (it will always be false)\n\n  function onScroll() {\n    const scrollTop = window.scrollY;\n\n    if (!navShadow && scrollTop > 0) {\n      setNavShadow(true);\n    } else if (navShadow && scrollTop === 0) {\n      setNavShadow(false);\n    }\n  }\n\n  return (\n    <Box bg=\"primaryBackground\"\n    position=\"relative\"\n    minHeight=\"100vh\"\n     >\n      &nbsp;\n      <Box>\n        <h1 className=\"page-heading favorites-list\">Favorite Movies</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <FavoriteMovies />\n      </Box>\n      <NavBar />\n      <Footer />\n    </Box>\n  );\n};\n\nexport default FavoriteMoviespage;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"./../../Context\";\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MovieDetailsBody.css\";\nimport NotFound from \"../../img/not-found.jpg\";\n\nfunction MovieDetailsBody(props) {\n  const history = useHistory();\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n\n  setTimeout(() => {\n    setIsPageLoaded(true);\n  }, 2500);\n\n  const goBack = () => {\n    history.go(-1);\n    setDefaultMovies(true);\n  };\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast.map((castMember, index) => {\n      const {\n        cast_id,\n        character,\n        name,\n        profile_path,\n        id: person_id,\n      } = castMember;\n\n      return (\n        <Box\n          key={cast_id}\n          textAlign=\"center\"\n          marginRight=\"60px\"\n          marginLeft=\"60px\"\n        >\n          <Link to={`/actor/${person_id}`}>\n            {profile_path === null ? (\n              <Image\n                m=\"0 auto\"\n                cursor=\"pointer\"\n                rounded=\"lg\"\n                src={NotFound}\n                objectFit=\"cover\"\n                width=\"100px\"\n                maxWidth=\"none\"\n              />\n            ) : (\n              <Image\n                m=\"0 auto\"\n                cursor=\"pointer\"\n                rounded=\"lg\"\n                src={ImageUrl + profile_path}\n                objectFit=\"cover\"\n                width=\"100px\"\n                maxWidth=\"none\"\n              />\n            )}\n          </Link>\n          <Box p=\"7px\">\n            {name} <br />{\" \"}\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n              {character}\n            </Text>\n          </Box>\n        </Box>\n      );\n    });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map((trailer) => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            title={trailer.original_title}\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n            className=\"movieTrailerBoxes\"\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then((res) => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then((res) => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then((res) => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, [APIKEY, movieId]);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"scroll\",\n  };\n\n  const imageContainer = {\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"top\",\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\",\n  };\n\n  const pageSpinner = {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n\n    transform: \"translate(-50%, -50%)\",\n  };\n  return (\n    <>\n      <Box>\n        {isPageLoaded ? null : (\n          <Box className=\"loadingScreen\">\n            <Spinner\n              style={pageSpinner}\n              thickness=\"3px\"\n              speed=\"0.7s\"\n              emptyColor=\"gray.200\"\n              color=\"black\"\n              size=\"100px\"\n            />\n          </Box>\n        )}\n      </Box>\n      <Box\n        style={imageContainer}\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\",\n          }}\n        >\n          <Box style={container}>\n            <Heading\n              position=\"absolute\"\n              top=\"50%\"\n              color=\"white\"\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\n            >\n              {movieData.original_title}\n            </Heading>\n\n            <span\n              className={\n                isPageLoaded ? `responsiveArrow` : `responsiveArrow removeClick`\n              }\n              onClick={goBack}\n            >\n              &#8592;\n            </span>\n          </Box>\n        </Box>\n      </Box>\n      <Box style={detailBody}>\n        <Box style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\n              {castList}\n            </Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailers.length > 0\n                ? movieTrailersboxes\n                : \"No Trailers Available\"}\n            </Flex>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\n\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Image, Grid as ChakraGrid, Heading } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"./../components/Footer\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\nfunction SearchByActor() {\n  const { APIKEY, ImageUrl, setNavShadow, navShadow } = useContext(Context);\n\n  const { personId } = useParams();\n\n  const [personDetails, setPersonDetails] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navShadow]);\n  // need navShadow as a dependency, or the value of navShadow won't change between onScroll events (it will always be false)\n\n  function onScroll() {\n    const scrollTop = window.scrollY;\n\n    if (!navShadow && scrollTop > 0) {\n      setNavShadow(true);\n    } else if (navShadow && scrollTop === 0) {\n      setNavShadow(false);\n    }\n  }\n\n  useEffect(() => {\n    if (personId !== null) {\n      try {\n        axios\n          .get(\n            // retrieve actor's name based on personId\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setPersonDetails(res.data);\n          });\n\n        axios\n          .get(\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n          )\n          .then((res) => {\n            setSearchResults(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, personId, setSearchResults]);\n\n  return (\n    <Box bg=\"primaryBackground\" position=\"relative\" minHeight=\"100vh\">\n      &nbsp;\n      {personDetails !== null && (\n        <>\n          <Heading\n            as=\"h3\"\n            size=\"lg\"\n            marginTop=\"100px\"\n            marginLeft=\"5%\"\n            color=\"primaryText\"\n          >\n            {personDetails.name}\n          </Heading>\n          <ChakraGrid\n            className=\"actorBio\"\n            mx={{ base: \"0px\", sm: \"10px\", md: \"125px\" }}\n            marginTop={{ base: \"10px\", md: \"50px\" }}\n            marginBottom=\"50px\"\n            borderWidth=\"1px\"\n            borderColor=\"primaryBorder\"\n            rounded=\"lg\"\n            templateColumns=\"auto auto\"\n          >\n            <Image\n              m=\"10px\"\n              src={ImageUrl + personDetails.profile_path}\n              h={{ base: \"150px\", sm: \"220px\" }}\n              objectFit=\"cover\"\n              rounded=\"lg\"\n            />\n            <Box m=\"10px\" color=\"primaryText\" fontSize=\"0.9em\">\n              Actor Biography: {personDetails.biography}\n            </Box>\n          </ChakraGrid>\n\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\n        </>\n      )}\n      <NavBar />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default SearchByActor;\n","import React, { useContext, useEffect } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\nimport Footer from \"./../components/Footer\";\n\nimport { Context } from \"../Context\";\n\nfunction FilterPage() {\n  const { filterdResults, navShadow, setNavShadow } = useContext(Context);\n  console.log(filterdResults);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navShadow]);\n  // need navShadow as a dependency, or the value of navShadow won't change between onScroll events (it will always be false)\n\n  function onScroll() {\n    const scrollTop = window.scrollY;\n\n    if (!navShadow && scrollTop > 0) {\n      setNavShadow(true);\n    } else if (navShadow && scrollTop === 0) {\n      setNavShadow(false);\n    }\n  }\n\n  return (\n    <Box bg=\"primaryBackground\"\n    position=\"relative\"\n    minHeight=\"100vh\"\n      >\n      &nbsp;\n      <Filter />\n      <Heading\n        as=\"h3\"\n        size=\"lg\"\n        marginTop=\"10px\"\n        marginLeft=\"5%\"\n        color=\"primaryText\"\n      >\n        Filter Results\n      </Heading>\n      <Grid searchResults={filterdResults} />\n      <NavBar />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default FilterPage;\n","import React, { useContext, useEffect } from \"react\";\nimport Grid from \"../components/Grid\";\nimport Navbar from \"../components/NavBar\";\nimport { Heading, Box } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\nimport Footer from \"./../components/Footer\";\n\nfunction SearchPage() {\n  const { searchQuery, searchResults, setNavShadow, navShadow } = useContext(Context);\n  console.log(searchQuery);\n  \n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navShadow]);\n  // need navShadow as a dependency, or the value of navShadow won't change between onScroll events (it will always be false)\n\n  function onScroll() {\n    const scrollTop = window.scrollY;\n\n    if (!navShadow && scrollTop > 0) {\n      setNavShadow(true);\n    } else if (navShadow && scrollTop === 0) {\n      setNavShadow(false);\n    }\n  }\n\n  return (\n    <Box bg=\"primaryBackground\"\n    position=\"relative\"\n    minHeight=\"100vh\"\n    >\n      &nbsp;\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\n        {searchQuery.length > 0\n          ? `Search Results for ${searchQuery}`\n          : `Search For Movie`}\n      </Heading>\n      <Grid searchResults={searchResults} />\n      <Navbar />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default SearchPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\n\nconst WatchList = () => {\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  const { db2, allWatchListMovies, setallWatchListMovies } = useContext(\n    Context\n  );\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db2\n      .collection(\"watchListMovies\")\n      .get()\n      .then(movies => {\n        setallWatchListMovies(movies);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allWatchListMovies.map(movie => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n\nexport default WatchList;\n","import React, { useContext, useEffect } from \"react\";\nimport { Box} from \"@chakra-ui/core\";\nimport NavBar from \"../components/NavBar\";\nimport WatchList from './../components/WatchList';\nimport Footer from './../components/Footer';\nimport { Context } from \"../Context\";\n\n\nconst WatchListpage = () => {\n\n  const { navShadow, setNavShadow } = useContext(Context);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navShadow]);\n  // need navShadow as a dependency, or the value of navShadow won't change between onScroll events (it will always be false)\n\n  function onScroll() {\n    const scrollTop = window.scrollY;\n\n    if (!navShadow && scrollTop > 0) {\n      setNavShadow(true);\n    } else if (navShadow && scrollTop === 0) {\n      setNavShadow(false);\n    }\n  }\n\n  return (\n    <Box bg=\"primaryBackground\"\n          position=\"relative\"\n          minHeight=\"100vh\"\n    >\n          \n      &nbsp;\n      <Box>\n        <h1 className=\"page-heading watch-list\">Movies to watch</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <WatchList />\n      </Box>\n      <NavBar />\n      <Footer />\n    </Box>\n  \n  );    \n    \n}\n\nexport default WatchListpage;","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport FavoriteMoviespage from \"./pages/FavoriteMoviespage\";\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\nimport SearchByActor from \"./pages/SearchByActor\";\nimport FilterPage from \"./pages/FilterPage\";\n\nimport SearchPage from \"./pages/SearchPage\";\nimport WatchListpage from \"./pages/WatchListpage\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route path=\"/favorites\">\n            <FavoriteMoviespage />\n          </Route>\n          <Route path=\"/watchList\">\n            <WatchListpage />\n          </Route>\n          <Route path=\"/moviedetailspage/:movieId\">\n            <MovieDetailsPage />\n          </Route>\n          <Route path=\"/actor/:personId\">\n            <SearchByActor />\n          </Route>\n          <Route path=\"/searchPage\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/filterPage\">\n            <FilterPage />\n          </Route>\n          <Route path=\"/\">\n            <Homepage />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      cardBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/not-found.c9888dc1.jpg\";"],"sourceRoot":""}