{"version":3,"sources":["Context.js","components/Movieboxes.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","components/FavoriteMovies.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/SearchPage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","navShadow","setNavShadow","homePageResults","setHomePageResults","added","setAdded","db","Localbase","allFavMovies","setAllFavMovies","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","year","rating","isFavorite","PseudoBox","bg","w","minW","m","color","cursor","borderWidth","borderColor","rounded","fontSize","p","opacity","_hover","position","Box","top","right","backgroundColor","lineHeight","borderRadius","h","d","Icon","name","paddingLeft","paddingBottom","left","size","Image","src","objectFit","textAlign","MovieDetails","useContext","isOpen","onClose","id","movieDetails","setMovieDetails","movieCredits","setMovieCredits","updateFavorites","collection","get","then","movies","console","log","isFave","setisFave","useEffect","forEach","movie","axios","res","data","err","cast","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","map","castMember","index","cast_id","character","profile_path","person_id","key","Grid","templateColumns","columnGap","to","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","vote_average","status","Date","release_date","toLocaleDateString","budget","format","revenue","rowGap","tagline","Button","variant","width","mr","doc","delete","i","length","add","movieImage","poster_path","movieTitle","movieReleaseDate","movieRating","movieId","setMovieId","setMovieImage","setMovieTitle","useDisclosure","onOpen","favoriteMovieIds","setFavoriteMovieIds","movieIdArray","push","movieBoxes","original_title","getFullYear","includes","movieName","onHandleMovieClick","backdrop_path","className","maxWidth","margin","marginTop","display","flexWrap","justifyContent","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","type","ref","placeholder","NavBar","px","py","zIndex","boxShadow","isInline","Link","as","RouterLink","Heading","fontWeight","fontFamily","Searchbar","Switch","ml","float","marginRight","textDecoration","Filter","genre","setGenre","setYear","genreOption","yearOption","submit","setSubmit","selectEl","selectStyles","height","background","overflow","disabled","mx","my","Select","Homepage","myRef","createRef","onScroll","scrollTop","marginLeft","FavoriteMovies","undefined","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backgroundSize","backgroundPosition","container","Spinner","transform","thickness","speed","emptyColor","goBack","overflowY","paddingY","pb","Flex","wrap","overflowX","paddingTop","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","biography","SearchPage","marginY","App","exact","path","customTheme","theme","colors","primaryBackground","cardBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.bc67ac81.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Localbase from \"localbase\";\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [search, setSearch] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n  const [navShadow, setNavShadow] = useState(false);\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\n  const [added, setAdded] = useState(0);\n\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  //Create a LOCAL DATABASE using localbase imported.\n  let db = new Localbase(\"db\");\n  const [allFavMovies, setAllFavMovies] = useState([]);\n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        homePageResults,\n        setHomePageResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        db,\n        allFavMovies,\n        setAllFavMovies,\n        setDefaultMovies,\n        navShadow,\n        setNavShadow,\n        defaultMovies,\n        added,\n        setAdded\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image, PseudoBox, Icon } from \"@chakra-ui/core\";\nimport { FaHeart } from \"react-icons/fa\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick, year, rating, isFavorite } = props;\n\n  return (\n    <PseudoBox\n      onClick={() => onClick()}\n      bg=\"cardBackground\"\n      w=\"13vw\"\n      minW=\"175px\"\n      m={4}\n      color=\"primaryText\"\n      cursor=\"pointer\"\n      borderWidth=\"1px\"\n      borderColor=\"primaryBorder\"\n      rounded=\"lg\"\n      fontSize=\"0.8em\"\n      p=\"5px\"\n      opacity=\"0.75\"\n      _hover={{ borderColor: \"#666\", opacity: \"1\" }}\n      position=\"relative\"\n    >\n      {rating !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"8px\"\n          right=\"8px\"\n          backgroundColor=\"rgb(0,0,0,0.6)\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          <Box d=\"inline\">{rating}</Box>\n          <Icon\n            name=\"star\"\n            paddingLeft=\"2px\"\n            paddingBottom=\"3px\"\n            color=\"#ffff00\"\n          />\n        </Box>\n      )}\n\n      {isFavorite !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"4px\"\n          left=\"5px\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          {isFavorite && <FaHeart size=\"20px\" color=\"#ff0000\" />}\n        </Box>\n      )}\n\n      <Image rounded=\"lg\" src={imageSrc} objectFit=\"cover\" />\n      <Box m=\"5px\" textAlign=\"center\" fontSize=\"1.1em\">\n        {`${title} ${year !== null ? `(${year})` : \"\"}`}\n      </Box>\n    </PseudoBox>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl, db, allFavMovies, setAllFavMovies } = useContext(\n    Context\n  );\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  const updateFavorites = () => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then((movies) => {\n        setAllFavMovies(movies);\n      });\n    console.log(\"Favorites Updated\");\n  };\n\n  //create a handler for \"add to favorites\" button on the Modal.\n  const handleAddToFavorites = () => {\n    //Check for duplicate entries on the database before adding a movie.\n    for (let i = 0; i < allFavMovies.length; i++) {\n      if (allFavMovies[i].id === movieDetails.id) {\n        console.log(\"movie exists\");\n        return null;\n      }\n    }\n    //add image and title of movies clicked to the DB\n    db.collection(\"favoriteMovies\")\n      .add({\n        id: movieDetails.id,\n        movieImage: ImageUrl + movieDetails.poster_path,\n        movieTitle: movieDetails.title,\n        movieReleaseDate: movieDetails.release_date,\n        movieRating: movieDetails.vote_average,\n      })\n      .then(() => {\n        updateFavorites();\n      });\n  };\n\n  //create a handler for RemoveFromFavorites button on the Modal\n  const handleRemoveFromFavorites = () => {\n    db.collection(\"favoriteMovies\")\n      .doc({ id: id })\n      .delete()\n      .then(() => {\n        updateFavorites();\n      });\n  };\n\n  const [isFave, setisFave] = useState(false);\n  //check if a movie is favorited;\n  useEffect(() => {\n    setisFave(false);\n    allFavMovies.forEach((movie) => {\n      if (movie.id === id) {\n        setisFave(true);\n      }\n    });\n  }, [allFavMovies, id]);\n\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id,\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Link to={`/actor/${person_id}`}>\n                <Image\n                  cursor=\"pointer\"\n                  rounded=\"lg\"\n                  src={ImageUrl + profile_path}\n                  h=\"80px\"\n                  objectFit=\"cover\"\n                />\n              </Link>\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n  //Check if movie is favorited -- remove?\n  /*\n  const [isFaved, setisFaved] = useState();\n  const checkFavorited = () => {\n    let favorited = \"\";\n    for (let i = 0; i < allFavMovies.length; i++) {\n      if (allFavMovies[i].id === movieDetails.id) {\n        setisFaved(movieDetails.id);\n        console.log(isFaved);\n      }\n    }\n  };\n  */\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Rating: {movieDetails.vote_average}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>\n                {isFave ? (\n                  <Button\n                    variant=\"outline\"\n                    width=\"350px\"\n                    borderWidth=\"2px\"\n                    backgroundColor=\"#db291d\"\n                    color=\"white\"\n                    _hover\n                    mr={3}\n                    onClick={handleRemoveFromFavorites}\n                  >\n                    Remove From Favorites\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={handleAddToFavorites}\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                  >\n                    Add To Favorites\n                  </Button>\n                )}\n\n                {/* <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3} \n                    onClick={handleAddToFavorites}\n              >\n                    Add to favorites\n              </Button>   */}\n                <Link to={`/moviedetailspage/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                </Link>\n                <Button\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={3}\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\nexport default MovieDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid(props) {\n  const { searchResults } = props;\n\n  const { ImageUrl, allFavMovies, setAllFavMovies, db } = useContext(Context);\n\n  // State variables for moviedetails modal popup\n  const [movieId, setMovieId] = useState(null);\n  const [movieImage, setMovieImage] = useState(\"\");\n  const [movieTitle, setMovieTitle] = useState(\"\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [favoriteMovieIds, setFavoriteMovieIds] = useState([]);\n\n  //Get data from the DB and store all movie ids to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then((movies) => {\n        setAllFavMovies(movies);\n      });\n    console.log(\"getFavMovies UseEffect\");\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //Get data from the DB and store all movie ids to an array\n  useEffect(() => {\n    if (allFavMovies.length > 0) {\n      const movieIdArray = [];\n      allFavMovies.forEach((movie) => {\n        movieIdArray.push(movie.id);\n      });\n      setFavoriteMovieIds(movieIdArray);\n    }\n  }, [allFavMovies]);\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    marginTop: \"15px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n  };\n\n  const movieBoxes = searchResults.map(function (movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        year={new Date(movie.release_date).getFullYear()}\n        rating={movie.vote_average}\n        isFavorite={favoriteMovieIds.includes(movie.id)}\n        onClick={() =>\n          onHandleMovieClick(\n            movie.id,\n            movie.backdrop_path,\n            movie.original_title\n          )\n        }\n      />\n    );\n  });\n\n  function onHandleMovieClick(id, movieImage, movieName) {\n    setMovieId(id);\n    setMovieImage(movieImage);\n    setMovieTitle(movieName);\n    onOpen();\n    console.log(id);\n    console.log(movieImage);\n    console.log(movieName);\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n      <MovieDetails\n        isOpen={isOpen}\n        onClose={onClose}\n        id={movieId}\n        movieImage={movieImage}\n        movieTitle={movieTitle}\n      />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nfunction Search() {\n  const history = useHistory();\n  console.log(history);\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY,\n    setDefaultMovies\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n\n    setIsSearch(true);\n\n    history.push(\"/searchPage\"); // Routes to search page on submit\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n            setDefaultMovies(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(searchResults);\n  }, [search]);\n\n  const buttonStyle = {\n    borderRadius: \"0.25rem\",\n    fontWeight: 600,\n    display: \"inline-flex\",\n    appearance: \"none\",\n    WebkitBoxAlign: \"center\",\n    alignItems: \"center\",\n    WebkitBoxPack: \"center\",\n    justifyContent: \"center\",\n    transition: \"all 250ms ease 0s\",\n    userSelect: \"none\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    lineHeight: 1.2,\n    outline: \"none\",\n    height: \"2em\",\n    minWidth: \"2.5rem\",\n    fontSize: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n    backgroundColor: \"rgb(237, 242, 247)\",\n    marginLeft: \"5px\",\n    marginRight: \"5px\"\n  };\n  return (\n    <div className=\"search\">\n      <form onSubmit={searchSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          ref={inputEl}\n          placeholder=\"Search movie here!\"\n        ></input>\n        <button type=\"submit\" name=\"button\">\n          <i className=\"fas fa-search\"></i>\n          {/* <input type=\"text\" ref={inputEl}></input> */}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from './Searchbar';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport { Box, Image, Link, Switch, Heading, Stack } from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const {\n    setDefaultMovies,\n    navShadow\n  } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n  };\n\n  return (\n    <Box\n      className=\"nav-bar\"\n      style={{ top: 0 }}\n      position=\"absolute\"\n      bg=\"primaryBackground\"\n      w=\"100%\"\n      px={5}\n      py={5}\n      paddingBottom=\"10px\" \n      zIndex=\"1000\"\n      boxShadow={\n        navShadow\n          ? \"0px 6px 6px 3px rgba(0, 0, 0, 0.25)\"\n          : \"0px 6px 6px 3px rgba(0, 0, 0, 0)\"\n      }\n    >\n      <Stack isInline justifyContent=\"space-between\">\n        <Link as={RouterLink} to=\"/\">\n          <Stack isInline onClick={clicked}>\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={46}\n            />\n            <Heading as=\"h3\" size=\"xl\" fontWeight=\"200\" color=\"#49c3fd\" fontFamily=\"Gugi, cursive\">\n              DAILY FLIX\n            </Heading>\n          </Stack>\n          </Link>\n          <Stack isInline>\n            <Searchbar />\n            <Switch size=\"sm\" ml={2}/>\n          </Stack>\n        </Stack>\n        <Box float=\"right\" marginRight=\"198px\">\n            {/* Use RouterLink as written in ChakraUI docs */}\n            <Link textDecoration=\"none\" _hover={{color : \"#49c3fd\"}} as={RouterLink} to=\"/favorites\" px={2} color=\"#fff\" className=\"link\">My Favorites</Link>\n            <Link _hover={{color : \"#49c3fd\"}} className=\"navbar-links\" px={2} color=\"#fff\">Watch List</Link>\n        </Box>\n      </Box>\n\n \n      \n    )\n}\n\n\nexport default NavBar;\n\n\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport \"./filter.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../Context\";\nimport { Heading, Button, Select, Box } from \"@chakra-ui/core\";\n\nfunction Filter() {\n  const [genre, setGenre] = useState(\"Genre\");\n  const [year, setYear] = useState(\"Year\");\n  const genreOption = useRef(null);\n  const yearOption = useRef(null);\n  const [submit, setSubmit] = useState(false);\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const {\n    APIKEY,\n    setDefaultMovies,\n    setHomePageResults\n  } = useContext(Context);\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setSubmit(true);\n    setGenre(inputEl.current.value);\n    setYear(selectEl.current.value);\n    genreOption.current.disabled = true;\n\n    yearOption.current.disabled = true;\n  }\n\n  useEffect(() => {\n    //   Checks wheither if correct selections are submitted\n    if (genre !== \"Genre\" && year !== \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(false);\n            setSubmit(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submit]);\n\n  const filterbar = {\n    marginTop: \"125px\",\n    textAlign: \"center\",\n  };\n  const filterButton = {\n    height: \"2em\",\n    borderWidth: \"2px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"0.9em\",\n    cursor: \"pointer\",\n    borderRadius: \"1em\",\n  };\n\n  const selectStyles = {\n    position: \"relative\",\n    width: \"10em\",\n    height: \"2.2em\",\n    lineHeight: \"2em\",\n    background: \"#444\", //\"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \"1em\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    paddingLeft: \"15px\",\n    fontSize: \"0.8em\",\n  };\n\n  return (\n    <div style={filterbar}>\n      <form\n        className=\"form\"\n        onSubmit={formSubmit}\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n      >\n        <Box d=\"inline\" color=\"primaryText\" fontSize=\"1em\" mx=\"7px\" my=\"5px\">\n          Find Movies By\n        </Box>\n        <Select ref={inputEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={genreOption}>Genre</option>\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </Select>\n\n        <Select ref={selectEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={yearOption}>Year</option>\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2014</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </Select>\n\n        <Button\n          backgroundColor=\"primaryBackground\"\n          borderColor=\"logoText\"\n          color=\"logoText\"\n          style={filterButton}\n          _hover={{ backgroundColor: \"logoText\", color: \"primaryBackground\", fontWeight: \"900\" }}\n          type=\"submit\"\n          mx=\"7px\" \n          my=\"7px\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { useContext, useEffect } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\n\nimport { Context } from \"../Context\";\n\nfunction Homepage() {\n  const {\n    isSearch,\n    setNavShadow,\n    navShadow,\n    homePageResults,\n    setHomePageResults,\n    defaultMovies,\n    setDefaultMovies,\n    APIKEY,\n  } = useContext(Context);\n\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\n\n  function onScroll() {\n    const scrollTop = myRef.current.scrollTop;\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\n  }\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies, APIKEY, setHomePageResults, setDefaultMovies]);\n\n  return (\n    <Box\n      ref={myRef}\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n      onScroll={onScroll}\n    >\n      <NavBar />\n      <Filter />\n      <Heading\n        as=\"h3\"\n        size=\"lg\"\n        marginTop=\"10px\"\n        marginLeft=\"5%\"\n        color=\"primaryText\"\n      >\n        {isSearch ? null : \"Popular Movies\"}\n      </Heading>\n      <Grid searchResults={homePageResults} />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\n\nconst FavoriteMovies = () => {\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  const { db, allFavMovies, setAllFavMovies } = useContext(Context);\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then(movies => {\n        setAllFavMovies(movies);\n        console.log(db);\n      });\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allFavMovies.map(movie => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n//     <Movieboxes\n//     key={movie.id}\n//     title={movie.movieTitle}\n//     imageSrc={movie.movieImage}\n\n// />\n\nexport default FavoriteMovies;\n","import React, { useContext } from \"react\";\nimport { ThemeProvider, Box, Flex, Link, Image,  Switch , Heading, Stack} from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport NavBar from \"../components/NavBar\";\nimport { Localbase } from 'localbase';\nimport FavoriteMovies from './../components/FavoriteMovies';\n\n\n\nconst FavoriteMoviespage = () => {\n\n// const headerStyles = {\n    // position: \"absolute\",\n    // top: \"100px\",\n    // color: \"red\",\n    // left: \"150px\",\n    // fontSize: \"25px\",\n    // fontWeight: \"400\"\n//   };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n      <Box>\n        <h1 className=\"page-heading\">Favorite Movies</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <FavoriteMovies />\n      </Box>\n    </Box>\n  \n  );\n         \n        \n    \n}\n\nexport default FavoriteMoviespage;","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"./../../Context\";\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MovieDetailsBody.css\";\n\nfunction MovieDetailsBody(props) {\n  const history = useHistory();\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n\n  setTimeout(() => {\n    setIsPageLoaded(true);\n  }, 2500);\n\n  const goBack = () => {\n    history.goBack();\n    setDefaultMovies(true);\n  };\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast.map((castMember, index) => {\n      const {\n        cast_id,\n        character,\n        name,\n        profile_path,\n        id: person_id\n      } = castMember;\n\n      return (\n        <Box\n          key={cast_id}\n          textAlign=\"center\"\n          marginRight=\"60px\"\n          marginLeft=\"60px\"\n        >\n          <Link to={`/actor/${person_id}`}>\n            <Image\n              m=\"0 auto\"\n              cursor=\"pointer\"\n              rounded=\"lg\"\n              src={ImageUrl + profile_path}\n              objectFit=\"cover\"\n              width=\"100px\"\n              maxWidth=\"none\"\n            />\n          </Link>\n          <Box p=\"7px\">\n            {name} <br />{\" \"}\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n              {character}\n            </Text>\n          </Box>\n        </Box>\n      );\n    });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map(trailer => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            title={trailer.original_title}\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n            className=\"movieTrailerBoxes\"\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n  // Carousel settiings\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3\n  };\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then(res => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then(res => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then(res => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"scroll\"\n  };\n\n  const imageContainer = {\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"top\"\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\"\n  };\n\n  const pageSpinner = {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n\n    transform: \"translate(-50%, -50%)\"\n  };\n  return (\n    <>\n      <Box>\n        {isPageLoaded ? null : (\n          <Box className=\"loadingScreen\">\n            <Spinner\n              style={pageSpinner}\n              thickness=\"3px\"\n              speed=\"0.7s\"\n              emptyColor=\"gray.200\"\n              color=\"black\"\n              size=\"100px\"\n            />\n          </Box>\n        )}\n      </Box>\n      <Box\n        style={imageContainer}\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }}\n        >\n          <Box style={container}>\n            <Heading\n              position=\"absolute\"\n              top=\"50%\"\n              color=\"white\"\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\n            >\n              {movieData.original_title}\n            </Heading>\n            <Link to=\"/\">\n              <span className=\"responsiveArrow\" onClick={goBack}>\n                &#8592;\n              </span>\n            </Link>\n          </Box>\n        </Box>\n      </Box>\n      <Box style={detailBody}>\n        <Box style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\n              {castList}\n            </Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailersboxes}\n            </Flex>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Image, Grid as ChakraGrid, Heading } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction SearchByActor() {\n  const { APIKEY, ImageUrl, setNavShadow, navShadow } = useContext(Context);\n\n  const { personId } = useParams();\n\n  const [personDetails, setPersonDetails] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\n\n  function onScroll() {\n    const scrollTop = myRef.current.scrollTop;\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\n  }\n\n  useEffect(() => {\n    if (personId !== null) {\n      try {\n        axios\n          .get(\n            // retrieve actor's name based on personId\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setPersonDetails(res.data);\n          });\n\n        axios\n          .get(\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n          )\n          .then((res) => {\n            setSearchResults(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, personId, setSearchResults]);\n\n  return (\n    <Box\n      ref={myRef}\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n      onScroll={onScroll}\n    >\n      <NavBar />\n\n      {personDetails !== null && (\n        <>\n          <Heading\n            as=\"h3\"\n            size=\"lg\"\n            marginTop=\"100px\"\n            marginLeft=\"5%\"\n            color=\"primaryText\"\n          >\n            {personDetails.name}\n          </Heading>\n          <ChakraGrid\n            mx=\"125px\"\n            my=\"50px\"\n            borderWidth=\"1px\"\n            borderColor=\"primaryBorder\"\n            rounded=\"lg\"\n            templateColumns=\"auto auto\"\n          >\n            <Image\n              m=\"10px\"\n              src={ImageUrl + personDetails.profile_path}\n              h=\"220px\"\n              objectFit=\"cover\"\n              rounded=\"lg\"\n            />\n            <Box m=\"10px\" color=\"primaryText\" fontSize=\"0.9em\">\n              Actor Biography: {personDetails.biography}\n            </Box>\n          </ChakraGrid>\n\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default SearchByActor;\n","import React, { useContext } from \"react\";\nimport Grid from \"../components/Grid\";\nimport Navbar from \"../components/NavBar\";\nimport { Heading, Box } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\n\nfunction SearchPage() {\n  const { search, searchResults, isSearch } = useContext(Context);\n  console.log(search);\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n       <Navbar />\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\n        {isSearch ? `Search Results for ${search}` : `Search For Movie`}\n      </Heading>\n     \n      <Grid searchResults={searchResults} />\n    </Box>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { BrowserRouter, Switch, Route, HashRouter } from \"react-router-dom\";\nimport FavoriteMoviespage from \"./pages/FavoriteMoviespage\";\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\nimport SearchByActor from \"./pages/SearchByActor\";\n\nimport SearchPage from \"./pages/SearchPage\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route path=\"/favorites\">\n            <FavoriteMoviespage />\n          </Route>\n          <Route path=\"/moviedetailspage/:movieId\">\n            <MovieDetailsPage />\n          </Route>\n\n          <Route path=\"/actor/:personId\">\n            <SearchByActor />\n          </Route>\n          <Route path=\"/searchPage\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/\">\n            <Homepage />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      cardBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}