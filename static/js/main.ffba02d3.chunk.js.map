{"version":3,"sources":["Context.js","components/Movieboxes.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","pages/Homepage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","search","setSearch","searchResults","setSearchResults","APIKEY","useEffect","axios","get","then","res","data","results","err","console","log","Provider","value","ImageUrl","children","Movieboxes","imageSrc","title","onClick","Box","bg","w","m","color","fontSize","Image","src","h","objectFit","MovieDetails","useContext","isOpen","onClose","id","movieDetails","setMovieDetails","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","Modal","preserveScrollBarGap","Stack","p","borderWidth","borderColor","rounded","overview","Grid","templateColumns","columnGap","runtime","popularity","status","Date","release_date","toLocaleDateString","budget","format","revenue","textAlign","fontStyle","tagline","Button","backgroundColor","_hover","mr","movieId","setMovieId","useDisclosure","onOpen","movieBoxes","map","movie","key","original_title","poster_path","className","maxWidth","margin","marginTop","display","flexWrap","justifyContent","length","Search","inputEl","useRef","onSubmit","e","preventDefault","current","type","ref","mx","NavBar","px","py","isInline","size","Heading","as","Searchbar","Switch","ml","float","Link","Homepage","overflow","position","top","left","fontWeight","App","path","customTheme","theme","colors","primaryBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"mPAGMA,EAAUC,IAAMC,gBAEtB,SAASC,EAAgBC,GACvB,IAD8B,EAEEC,oBAAS,GAFX,mBAEvBC,EAFuB,KAEbC,EAFa,OAGFF,mBAAS,IAHP,mBAGvBG,EAHuB,KAGfC,EAHe,OAIYJ,mBAAS,IAJrB,mBAIvBK,EAJuB,KAIRC,EAJQ,KAKxBC,EAAS,mCAgBf,OAdAC,qBAAU,WACR,IACEC,IACGC,IADH,mEAEgEH,IAE7DI,MAAK,SAAAC,GACJN,EAAiBM,EAAIC,KAAKC,YAE9B,MAAOC,GACPC,QAAQC,IAAIF,MAEb,IAGD,kBAACpB,EAAQuB,SAAT,CACEC,MAAO,CACLf,YACAE,mBACAH,SACAE,gBACAe,SA3BW,kCA4BXnB,WACAC,cACAK,WAGDR,EAAMsB,U,aCjBEC,MAnBf,SAAoBvB,GAAQ,IAClBwB,EAA6BxB,EAA7BwB,SAAUC,EAAmBzB,EAAnByB,MAAOC,EAAY1B,EAAZ0B,QAEzB,OACE,kBAACC,EAAA,EAAD,CACED,QAAS,kBAAMA,KACfE,GAAG,oBACHC,EAAE,QACFC,EAAG,EACHC,MAAM,cACNC,SAAU,QAEV,kBAACC,EAAA,EAAD,CAAOC,IAAKV,EAAUK,EAAE,QAAQM,EAAG,QAASC,UAAU,UAEtD,4BAAKX,K,6CC+GIY,MA/Gf,SAAsBrC,GAAQ,IACpBQ,EAAW8B,qBAAW1C,GAAtBY,OACA+B,EAAwBvC,EAAxBuC,OAAQC,EAAgBxC,EAAhBwC,QAASC,EAAOzC,EAAPyC,GAFE,EAGaxC,mBAAS,MAHtB,mBAGpByC,EAHoB,KAGNC,EAHM,KAK3BlC,qBAAU,WACR,GAAW,OAAPgC,EAAa,CACfE,EAAgB,MAChB,IACEjC,IACGC,IADH,6CAC6C8B,EAD7C,oBAC2DjC,IACxDI,MAAK,SAACC,GACL8B,EAAgB9B,EAAIC,SAExB,MAAOE,GACPC,QAAQC,IAAIF,SAGd2B,EAAgB,QAEjB,CAACF,EAAIjC,IAGR,IAAMoC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IAKzB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAOC,sBAAoB,EAACb,OAAQA,EAAQC,QAASA,GACnD,kBAACW,EAAA,EAAD,MACkB,OAAjBT,GACC,kBAACS,EAAA,EAAD,CAAcvB,GAAG,oBAAoBG,MAAM,eACzC,kBAACoB,EAAA,EAAD,KAAcT,EAAajB,OAC3B,kBAAC0B,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,CACE2B,EAAE,OACFC,YAAY,MACZC,YAAY,gBACZC,QAAQ,KACRzB,SAAS,SAERU,EAAagB,UAEhB,kBAACC,EAAA,EAAD,CACEL,EAAE,OACFC,YAAY,MACZC,YAAY,gBACZC,QAAQ,KACRG,gBAAgB,UAChBC,UAAU,OACV7B,SAAS,SAET,kBAACL,EAAA,EAAD,gBACW,IACiB,IAAzBe,EAAaoB,QACV,IADH,UAEMpB,EAAaoB,QAFnB,aAIH,kBAACnC,EAAA,EAAD,oBAAkBe,EAAaqB,YAC/B,kBAACpC,EAAA,EAAD,gBAAce,EAAasB,QAC3B,kBAACrC,EAAA,EAAD,qBACgB,IACb,IAAIsC,KAAKvB,EAAawB,cAAcC,sBAEd,IAAxBzB,EAAa0B,QACZ,kBAACzC,EAAA,EAAD,gBAAciB,EAAUyB,OAAO3B,EAAa0B,SAEpB,IAAzB1B,EAAa4B,SACZ,kBAAC3C,EAAA,EAAD,iBAAeiB,EAAUyB,OAAO3B,EAAa4B,WAGjD,kBAAC3C,EAAA,EAAD,CACE2B,EAAE,OACFiB,UAAU,SACVxC,MAAM,WACNyC,UAAU,SACVxC,SAAS,SAERU,EAAa+B,WAKpB,kBAACtB,EAAA,EAAD,KACE,kBAACuB,EAAA,EAAD,CACElB,YAAY,WACZD,YAAY,MACZoB,gBAAgB,oBAChB5C,MAAM,WACN6C,QAAM,EACNC,GAAI,EACJnD,QAASc,GAPX,cC1DCmB,MA7Cf,WAAiB,IAAD,EACsBrB,qBAAW1C,GAAvCU,EADM,EACNA,cAAee,EADT,EACSA,SADT,EAGgBpB,mBAAS,MAHzB,mBAGP6E,EAHO,KAGEC,EAHF,OAKsBC,cAA5BzC,EALM,EAKNA,OAAQ0C,EALF,EAKEA,OAAQzC,EALV,EAKUA,QAalB0C,EAAa5E,EAAc6E,KAAI,SAASC,GAC5C,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAM3C,GACXhB,MAAO2D,EAAME,eACb9D,SAAUH,EAAW+D,EAAMG,YAC3B7D,QAAS,kBAKae,EALY2C,EAAM3C,GAM5CsC,EAAWtC,QACXwC,IAFF,IAA4BxC,QAK5B,OACE,oCACE,yBAAK+C,UAAU,YAAYzC,MA7BZ,CACjB0C,SAAU,SAEVC,OAAQ,SAERC,UAAW,MACXC,QAAS,OACTC,SAAU,OACVC,eAAgB,iBAsBXxF,EAAcyF,OAAS,EAAIb,EAAa,MAG3C,kBAAC,EAAD,CAAc3C,OAAQA,EAAQC,QAASA,EAASC,GAAIqC,MCK3CkB,MA9Cf,WAAmB,IAAD,EAQZ1D,qBAAW1C,GANbS,EAFc,EAEdA,UACAE,EAHc,EAGdA,iBACAH,EAJc,EAIdA,OACAE,EALc,EAKdA,cACAH,EANc,EAMdA,YACAK,EAPc,EAOdA,OAGIyF,EAAUC,iBAAO,MA0BvB,OAlBAzF,qBAAU,WACR,GAAIL,EAAO2F,OAAS,EAClB,IACErF,IACGC,IADH,4DAEyDH,EAFzD,kBAEyEJ,IAEtEQ,MAAK,SAAAC,GACJN,EAAiBM,EAAIC,KAAKC,SAC1BZ,GAAY,MAEhB,MAAOa,GACPC,QAAQC,IAAIF,MAGf,CAACZ,EAAQG,EAAkBC,EAAQL,IAEtCc,QAAQC,IAAIZ,GAEV,yBAAKkF,UAAU,cACb,0BAAMW,SA1BV,SAAsBC,GACpBA,EAAEC,iBACFhG,EAAU4F,EAAQK,QAAQlF,OAC1BjB,GAAY,KAwBR,2BAAOoG,KAAK,OAAOC,IAAKP,IACxB,kBAACvB,EAAA,EAAD,CAAQ+B,GAAG,MAAMtE,EAAE,OAAnB,oB,2BCKOuE,EAtCA,WAIb,OACE,kBAAC/E,EAAA,EAAD,CAAK6D,UAAU,UAAU5D,GAAG,oBAAoBC,EAAE,OAAO8E,GAAI,EAAGC,GAAI,GAClE,kBAACvD,EAAA,EAAD,CAAOwD,UAAQ,EAACf,eAAe,iBAC5B,IACD,kBAACzC,EAAA,EAAD,CAAOwD,UAAQ,EAACnF,QAPN,WACdT,QAAQC,IAAI,yBAON,kBAACe,EAAA,EAAD,CACEC,IAAI,+EACJ4E,KAAM,KAER,kBAACC,EAAA,EAAD,CAASC,GAAG,KAAKF,KAAK,KAAK/E,MAAM,YAAjC,eAIF,kBAACsB,EAAA,EAAD,CAAOwD,UAAQ,GACb,kBAACI,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQJ,KAAK,KAAKK,GAAI,MAI1B,kBAACxF,EAAA,EAAD,CAAKyF,MAAM,QAAQvC,GAAI,IACrB,kBAACwC,EAAA,EAAD,CAAMV,GAAI,EAAG5E,MAAM,cAAcyD,UAAU,QAA3C,gBAGA,kBAAC6B,EAAA,EAAD,CAAMV,GAAI,EAAG5E,MAAM,cAAcyD,UAAU,QAA3C,WAGA,kBAAC6B,EAAA,EAAD,CAAMV,GAAI,EAAG5E,MAAM,cAAcyD,UAAU,QAA3C,iBCRO8B,MA5Bf,WAAqB,IACXpH,EAAaoC,qBAAW1C,GAAxBM,SAUR,OACE,kBAACyB,EAAA,EAAD,CACEC,GAAG,oBACHO,EAAE,QACFN,EAAE,QACFkB,MAAO,CACLwE,SAAU,WAGZ,wBAAIxE,MAjBa,CACnByE,SAAU,WACVC,IAAK,QACL1F,MAAO,QACP2F,KAAM,QACN1F,SAAU,OACV2F,WAAY,QAWgBzH,EAAW,KAAO,kBAC5C,kBAAC,EAAD,MAEA,kBAAC,EAAD,Q,OCbS0H,EAZH,WACV,OACE,yBAAKpC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,KAAK,KACV,kBAAC,EAAD,U,iBCNGC,EAAW,2BACjBC,KADiB,IAEpBC,OAAO,2BACFD,IAAMC,QADL,IAEJC,kBAAmB,OACnBC,cAAe,OACfC,SAAU,UACVC,YAAa,W,OCAnBC,IAASC,OACP,kBAACvI,EAAD,KACE,kBAAC,IAAD,KACE,kBAACwI,EAAA,EAAD,CAAeR,MAAOD,GACpB,kBAACU,EAAA,EAAD,MACA,kBAAC,EAAD,SAINC,SAASC,cAAc,W","file":"static/js/main.ffba02d3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n  const [isSearch, setIsSearch] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  useEffect(() => {\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n        )\n        .then(res => {\n          setSearchResults(res.data.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image } from \"@chakra-ui/core\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick } = props;\n\n  return (\n    <Box\n      onClick={() => onClick()}\n      bg=\"primaryBackground\"\n      w=\"170px\"\n      m={4}\n      color=\"primaryText\"\n      fontSize={\"16px\"}\n    >\n      <Image src={imageSrc} w=\"170px\" h={\"220px\"} objectFit=\"cover\" />\n\n      <h1>{title}</h1>\n    </Box>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\n\nfunction MovieDetails(props) {\n  const { APIKEY } = useContext(Context);\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      try {\n        axios\n          .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`)\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter.\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  //formatter.format(2500); /* $2,500.00 */\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null && (\n          <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n            <ModalHeader>{movieDetails.title}</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Stack>\n                <Box\n                  p=\"10px\"\n                  borderWidth=\"1px\"\n                  borderColor=\"primaryBorder\"\n                  rounded=\"lg\"\n                  fontSize=\"0.9em\"\n                >\n                  {movieDetails.overview}\n                </Box>\n                <Grid\n                  p=\"10px\"\n                  borderWidth=\"1px\"\n                  borderColor=\"primaryBorder\"\n                  rounded=\"lg\"\n                  templateColumns=\"45% 45%\"\n                  columnGap=\"10px\"\n                  fontSize=\"0.8em\"\n                >\n                  <Box>\n                    Runtime:{\" \"}\n                    {movieDetails.runtime === 0\n                      ? \"?\"\n                      : `${movieDetails.runtime} minutes`}\n                  </Box>\n                  <Box>Popularity: {movieDetails.popularity}</Box>\n                  <Box>Status: {movieDetails.status}</Box>\n                  <Box>\n                    Release Date:{\" \"}\n                    {new Date(movieDetails.release_date).toLocaleDateString()}\n                  </Box>\n                  {movieDetails.budget !== 0 && (\n                    <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                  )}\n                  {movieDetails.revenue !== 0 && (\n                    <Box>Revenue: {formatter.format(movieDetails.revenue)}</Box>\n                  )}\n                </Grid>\n                <Box\n                  p=\"10px\"\n                  textAlign=\"center\"\n                  color=\"logoText\"\n                  fontStyle=\"italic\"\n                  fontSize=\"1.1em\"\n                >\n                  {movieDetails.tagline}\n                </Box>\n              </Stack>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                borderColor=\"logoText\"\n                borderWidth=\"3px\"\n                backgroundColor=\"primaryBackground\"\n                color=\"logoText\"\n                _hover\n                mr={3}\n                onClick={onClose}\n              >\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid() {\n  const { searchResults, ImageUrl } = useContext(Context);\n\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n\n    margin: \"0 auto\",\n\n    marginTop: \"11%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        onClick={() => onHandleMovieClick(movie.id)}\n      />\n    );\n  });\n\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport {Button} from \"@chakra-ui/core\";\n\nfunction Search() {\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n    setIsSearch(true);\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [search, setSearchResults, APIKEY, setIsSearch]);\n\n  console.log(searchResults);\n  return (\n    <div className=\"search-bar\">\n      <form onSubmit={searchSubmit}>\n        <input type=\"text\" ref={inputEl}></input>\n        <Button mx=\"5px\" h=\"2em\">Search Movies</Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport Searchbar from \"./Searchbar\";\nimport {\n  Box,\n  Flex,\n  Image,\n  Link,\n  Switch,\n  Heading,\n  Stack,\n} from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const clicked = () => {\n    console.log(\"NavBar Logo Clicked\");\n  };\n  return (\n    <Box className=\"nav-bar\" bg=\"primaryBackground\" w=\"100%\" px={5} py={2}>\n      <Stack isInline justifyContent=\"space-between\">\n        {\" \"}\n        <Stack isInline onClick={clicked}>\n          <Image\n            src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n            size={30}\n          />\n          <Heading as=\"h3\" size=\"lg\" color=\"logoText\">\n            Daily Flix\n          </Heading>\n        </Stack>\n        <Stack isInline>\n          <Searchbar />\n          <Switch size=\"sm\" ml={2} />\n        </Stack>\n      </Stack>\n\n      <Box float=\"right\" mr={10}>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          My Favorites\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watched\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watch List\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport { Context } from \"../Context\";\n\nfunction Homepage() {\n  const { isSearch } = useContext(Context);\n\n  const headerStyles = {\n    position: \"absolute\",\n    top: \"100px\",\n    color: \"white\",\n    left: \"150px\",\n    fontSize: \"25px\",\n    fontWeight: \"100\"\n  };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <h1 style={headerStyles}>{isSearch ? null : \"Popular Movies\"}</h1>\n      <NavBar />\n\n      <Grid />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\">\n          <Homepage />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}