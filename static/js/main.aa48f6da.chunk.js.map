{"version":3,"sources":["Context.js","components/Movieboxes.js","components/FavoriteMovies.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/SearchPage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","navShadow","setNavShadow","homePageResults","setHomePageResults","added","setAdded","db","Localbase","allFavMovies","setAllFavMovies","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","year","rating","PseudoBox","bg","w","minW","m","color","cursor","borderWidth","borderColor","rounded","fontSize","p","opacity","_hover","position","Box","top","right","backgroundColor","lineHeight","borderRadius","h","d","Icon","name","paddingLeft","paddingBottom","Image","src","objectFit","textAlign","FavoriteMovies","movieId","setMovieId","useDisclosure","isOpen","onOpen","onClose","useContext","useEffect","collection","get","then","movies","console","log","className","style","maxWidth","marginTop","margin","display","flexWrap","justifyContent","map","movie","key","id","movieTitle","movieImage","undefined","movieReleaseDate","Date","getFullYear","movieRating","MovieDetails","movieDetails","setMovieDetails","movieCredits","setMovieCredits","isFave","setisFave","forEach","axios","res","data","err","cast","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","castMember","index","cast_id","character","profile_path","person_id","Grid","templateColumns","columnGap","to","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","vote_average","status","release_date","toLocaleDateString","budget","format","revenue","rowGap","tagline","Button","variant","width","mr","doc","delete","i","length","add","poster_path","setMovieImage","setMovieTitle","movieBoxes","original_title","movieName","onHandleMovieClick","backdrop_path","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","push","type","ref","placeholder","NavBar","px","py","zIndex","boxShadow","isInline","Link","as","RouterLink","size","Heading","fontWeight","fontFamily","Searchbar","Switch","ml","float","marginRight","textDecoration","Filter","genre","setGenre","setYear","genreOption","yearOption","submit","setSubmit","selectEl","selectStyles","height","background","overflow","disabled","mx","my","Select","Homepage","myRef","createRef","onScroll","scrollTop","marginLeft","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backgroundSize","backgroundPosition","container","Spinner","left","transform","thickness","speed","emptyColor","goBack","overflowY","paddingY","pb","Flex","wrap","overflowX","paddingTop","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","biography","SearchPage","marginY","App","exact","path","customTheme","theme","colors","primaryBackground","cardBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.aa48f6da.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Localbase from \"localbase\";\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [search, setSearch] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n  const [navShadow, setNavShadow] = useState(false);\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\n  const [added, setAdded] = useState(0);\n\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  //Create a LOCAL DATABASE using localbase imported.\n  let db = new Localbase(\"db\");\n  const [allFavMovies, setAllFavMovies] = useState([]);\n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        homePageResults,\n        setHomePageResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        db,\n        allFavMovies,\n        setAllFavMovies,\n        setDefaultMovies,\n        navShadow,\n        setNavShadow,\n        defaultMovies,\n        added,\n        setAdded\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image, PseudoBox, Icon } from \"@chakra-ui/core\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick, year, rating } = props;\n\n  return (\n    <PseudoBox\n      onClick={() => onClick()}\n      bg=\"cardBackground\"\n      w=\"13vw\"\n      minW=\"175px\"\n      m={4}\n      color=\"primaryText\"\n      cursor=\"pointer\"\n      borderWidth=\"1px\"\n      borderColor=\"primaryBorder\"\n      rounded=\"lg\"\n      fontSize=\"0.8em\"\n      p=\"5px\"\n      opacity=\"0.75\"\n      _hover={{ borderColor: \"#666\", opacity: \"1\" }}\n      position=\"relative\"\n    >\n      {rating !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"8px\"\n          right=\"8px\"\n          backgroundColor=\"rgb(0,0,0,0.6)\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          <Box d=\"inline\">{rating}</Box>\n          <Icon\n            name=\"star\"\n            paddingLeft=\"2px\"\n            paddingBottom=\"3px\"\n            color=\"#ffff00\"\n          />\n        </Box>\n      )}\n      <Image rounded=\"lg\" src={imageSrc} objectFit=\"cover\" />\n\n      <Box m=\"5px\" textAlign=\"center\" fontSize=\"1.1em\">\n        {`${title} ${year !== null ? `(${year})` : \"\"}`}\n      </Box>\n    </PseudoBox>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\n\nconst FavoriteMovies = () => {\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  const { db, allFavMovies, setAllFavMovies } = useContext(Context);\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then(movies => {\n        setAllFavMovies(movies);\n        console.log(db);\n      });\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allFavMovies.map(movie => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n//     <Movieboxes\n//     key={movie.id}\n//     title={movie.movieTitle}\n//     imageSrc={movie.movieImage}\n\n// />\n\nexport default FavoriteMovies;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport FavoriteMovies from \"./FavoriteMovies\";\nimport Movieboxes from \"./Movieboxes\";\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl, db, allFavMovies, setAllFavMovies } = useContext(\n    Context\n  );\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  //create a handler for \"add to favorites\" button on the Modal.\n  const handleAddToFavorites = () => {\n    //Check for duplicate entries on the database before adding a movie.\n    for (let i = 0; i < allFavMovies.length; i++) {\n      if (allFavMovies[i].id === movieDetails.id) {\n        console.log(\"movie exists\");\n        return null;\n      }\n    }\n    //add image and title of movies clicked to the DB\n    db.collection(\"favoriteMovies\").add({\n      id: movieDetails.id,\n      movieImage: ImageUrl + movieDetails.poster_path,\n      movieTitle: movieDetails.title,\n      movieReleaseDate: movieDetails.release_date,\n      movieRating: movieDetails.vote_average\n    });\n  };\n\n  //create a handler for RemoveFromFavorites button on the Modal\n  const handleRemoveFromFavorites = () => {\n    db.collection(\"favoriteMovies\")\n      .doc({ id: id })\n      .delete();\n  };\n\n  const [isFave, setisFave] = useState(false);\n  //check if a movie is favorited;\n  useEffect(() => {\n    setisFave(false);\n    allFavMovies.forEach(movie => {\n      if (movie.id === id) {\n        setisFave(true);\n      }\n    });\n\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Link to={`/actor/${person_id}`}>\n                <Image\n                  cursor=\"pointer\"\n                  rounded=\"lg\"\n                  src={ImageUrl + profile_path}\n                  h=\"80px\"\n                  objectFit=\"cover\"\n                />\n              </Link>\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n  //Check if movie is favorited\n  const [isFaved, setisFaved] = useState();\n  const checkFavorited = () => {\n    let favorited = \"\";\n    for (let i = 0; i < allFavMovies.length; i++) {\n      if (allFavMovies[i].id === movieDetails.id) {\n        setisFaved(movieDetails.id);\n        console.log(isFaved);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n        movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Rating: {movieDetails.vote_average}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>\n                {isFave ? (\n                  <Button\n                    variant=\"outline\"\n                    width=\"350px\"\n                    borderWidth=\"2px\"\n                    backgroundColor=\"#db291d\"\n                    color=\"white\"\n                    _hover\n                    mr={3}\n                    onClick={handleRemoveFromFavorites}\n                  >\n                    Remove From Favorites\n                  </Button>\n                ) : (\n                  <Button\n                    onClick={handleAddToFavorites}\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                  >\n                    Add To Favorites\n                  </Button>\n                )}\n\n                {/* <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3} \n                    onClick={handleAddToFavorites}\n              >\n                    Add to favorites\n              </Button>   */}\n                <Link to={`/moviedetailspage/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                </Link>\n                <Button\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={3}\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\nexport default MovieDetails;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid(props) {\n  const { searchResults } = props;\n\n  const { ImageUrl } = useContext(Context);\n\n  const [movieId, setMovieId] = useState(null);\n  const [movieImage, setMovieImage] = useState(\"\");\n  const [movieTitle, setMovieTitle] = useState(\"\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    marginTop: \"15px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        year={new Date(movie.release_date).getFullYear()}\n        rating={movie.vote_average}\n        onClick={() =>\n          onHandleMovieClick(\n            movie.id,\n            movie.backdrop_path,\n            movie.original_title\n          )\n        }\n      />\n    );\n  });\n\n  function onHandleMovieClick(id, movieImage, movieName) {\n    setMovieId(id);\n    setMovieImage(movieImage);\n    setMovieTitle(movieName);\n    onOpen();\n    console.log(id);\n    console.log(movieImage);\n    console.log(movieName);\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n      <MovieDetails\n        isOpen={isOpen}\n        onClose={onClose}\n        id={movieId}\n        movieImage={movieImage}\n        movieTitle={movieTitle}\n      />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nfunction Search() {\n  const history = useHistory();\n  console.log(history);\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY,\n    setDefaultMovies\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n\n    setIsSearch(true);\n\n    history.push(\"/searchPage\"); // Routes to search page on submit\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n            setDefaultMovies(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(searchResults);\n  }, [search]);\n\n  const buttonStyle = {\n    borderRadius: \"0.25rem\",\n    fontWeight: 600,\n    display: \"inline-flex\",\n    appearance: \"none\",\n    WebkitBoxAlign: \"center\",\n    alignItems: \"center\",\n    WebkitBoxPack: \"center\",\n    justifyContent: \"center\",\n    transition: \"all 250ms ease 0s\",\n    userSelect: \"none\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    lineHeight: 1.2,\n    outline: \"none\",\n    height: \"2em\",\n    minWidth: \"2.5rem\",\n    fontSize: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n    backgroundColor: \"rgb(237, 242, 247)\",\n    marginLeft: \"5px\",\n    marginRight: \"5px\"\n  };\n  return (\n    <div className=\"search\">\n      <form onSubmit={searchSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          ref={inputEl}\n          placeholder=\"Search movie here!\"\n        ></input>\n        <button type=\"submit\" name=\"button\">\n          <i className=\"fas fa-search\"></i>\n          {/* <input type=\"text\" ref={inputEl}></input> */}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from './Searchbar';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport { Box, Image, Link, Switch, Heading, Stack } from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const {\n    setDefaultMovies,\n    navShadow\n  } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n  };\n\n  return (\n    <Box\n      className=\"nav-bar\"\n      style={{ top: 0 }}\n      position=\"absolute\"\n      bg=\"primaryBackground\"\n      w=\"100%\"\n      px={5}\n      py={5}\n      paddingBottom=\"10px\" \n      zIndex=\"1000\"\n      boxShadow={\n        navShadow\n          ? \"0px 6px 6px 3px rgba(0, 0, 0, 0.25)\"\n          : \"0px 6px 6px 3px rgba(0, 0, 0, 0)\"\n      }\n    >\n      <Stack isInline justifyContent=\"space-between\">\n        <Link as={RouterLink} to=\"/\">\n          <Stack isInline onClick={clicked}>\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={46}\n            />\n            <Heading as=\"h3\" size=\"xl\" fontWeight=\"200\" color=\"#49c3fd\" fontFamily=\"Gugi, cursive\">\n              DAILY FLIX\n            </Heading>\n          </Stack>\n          </Link>\n          <Stack isInline>\n            <Searchbar />\n            <Switch size=\"sm\" ml={2}/>\n          </Stack>\n        </Stack>\n        <Box float=\"right\" marginRight=\"198px\">\n            {/* Use RouterLink as written in ChakraUI docs */}\n            <Link textDecoration=\"none\" _hover={{color : \"#49c3fd\"}} as={RouterLink} to=\"/favorites\" px={2} color=\"#fff\" className=\"link\">My Favorites</Link>\n            <Link _hover={{color : \"#49c3fd\"}} className=\"navbar-links\" px={2} color=\"#fff\">Watch List</Link>\n        </Box>\n      </Box>\n\n \n      \n    )\n}\n\n\nexport default NavBar;\n\n\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport \"./filter.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../Context\";\nimport { Heading, Button, Select, Box } from \"@chakra-ui/core\";\n\nfunction Filter() {\n  const [genre, setGenre] = useState(\"Genre\");\n  const [year, setYear] = useState(\"Year\");\n  const genreOption = useRef(null);\n  const yearOption = useRef(null);\n  const [submit, setSubmit] = useState(false);\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const {\n    APIKEY,\n    setDefaultMovies,\n    setHomePageResults\n  } = useContext(Context);\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setSubmit(true);\n    setGenre(inputEl.current.value);\n    setYear(selectEl.current.value);\n    genreOption.current.disabled = true;\n\n    yearOption.current.disabled = true;\n  }\n\n  useEffect(() => {\n    //   Checks wheither if correct selections are submitted\n    if (genre !== \"Genre\" && year !== \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(false);\n            setSubmit(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submit]);\n\n  const filterbar = {\n    marginTop: \"125px\",\n    textAlign: \"center\",\n  };\n  const filterButton = {\n    height: \"2em\",\n    borderWidth: \"2px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"0.9em\",\n    cursor: \"pointer\",\n    borderRadius: \"1em\",\n  };\n\n  const selectStyles = {\n    position: \"relative\",\n    width: \"10em\",\n    height: \"2.2em\",\n    lineHeight: \"2em\",\n    background: \"#444\", //\"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \"1em\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    paddingLeft: \"15px\",\n    fontSize: \"0.8em\",\n  };\n\n  return (\n    <div style={filterbar}>\n      <form\n        className=\"form\"\n        onSubmit={formSubmit}\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n      >\n        <Box d=\"inline\" color=\"primaryText\" fontSize=\"1em\" mx=\"7px\" my=\"5px\">\n          Find Movies By\n        </Box>\n        <Select ref={inputEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={genreOption}>Genre</option>\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </Select>\n\n        <Select ref={selectEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={yearOption}>Year</option>\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2014</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </Select>\n\n        <Button\n          backgroundColor=\"primaryBackground\"\n          borderColor=\"logoText\"\n          color=\"logoText\"\n          style={filterButton}\n          _hover={{ backgroundColor: \"logoText\", color: \"primaryBackground\", fontWeight: \"900\" }}\n          type=\"submit\"\n          mx=\"7px\" \n          my=\"7px\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { useContext, useEffect } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\n\nimport { Context } from \"../Context\";\n\nfunction Homepage() {\n  const {\n    isSearch,\n    setNavShadow,\n    navShadow,\n    homePageResults,\n    setHomePageResults,\n    defaultMovies,\n    setDefaultMovies,\n    APIKEY,\n  } = useContext(Context);\n\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\n\n  function onScroll() {\n    const scrollTop = myRef.current.scrollTop;\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\n  }\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies, APIKEY, setHomePageResults, setDefaultMovies]);\n\n  return (\n    <Box\n      ref={myRef}\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n      onScroll={onScroll}\n    >\n      <NavBar />\n      <Filter />\n      <Heading\n        as=\"h3\"\n        size=\"lg\"\n        marginTop=\"10px\"\n        marginLeft=\"5%\"\n        color=\"primaryText\"\n      >\n        {isSearch ? null : \"Popular Movies\"}\n      </Heading>\n      <Grid searchResults={homePageResults} />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React, { useContext } from \"react\";\nimport { ThemeProvider, Box, Flex, Link, Image,  Switch , Heading, Stack} from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport NavBar from \"../components/NavBar\";\nimport { Localbase } from 'localbase';\nimport FavoriteMovies from './../components/FavoriteMovies';\n\n\n\nconst FavoriteMoviespage = () => {\n\n// const headerStyles = {\n    // position: \"absolute\",\n    // top: \"100px\",\n    // color: \"red\",\n    // left: \"150px\",\n    // fontSize: \"25px\",\n    // fontWeight: \"400\"\n//   };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n      <Box>\n        <h1 className=\"page-heading\">Favorite Movies</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <FavoriteMovies />\n      </Box>\n    </Box>\n  \n  );\n         \n        \n    \n}\n\nexport default FavoriteMoviespage;","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"./../../Context\";\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MovieDetailsBody.css\";\n\nfunction MovieDetailsBody(props) {\n  const history = useHistory();\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n\n  setTimeout(() => {\n    setIsPageLoaded(true);\n  }, 2500);\n\n  const goBack = () => {\n    history.goBack();\n    setDefaultMovies(true);\n  };\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast.map((castMember, index) => {\n      const {\n        cast_id,\n        character,\n        name,\n        profile_path,\n        id: person_id\n      } = castMember;\n\n      return (\n        <Box\n          key={cast_id}\n          textAlign=\"center\"\n          marginRight=\"60px\"\n          marginLeft=\"60px\"\n        >\n          <Link to={`/actor/${person_id}`}>\n            <Image\n              m=\"0 auto\"\n              cursor=\"pointer\"\n              rounded=\"lg\"\n              src={ImageUrl + profile_path}\n              objectFit=\"cover\"\n              width=\"100px\"\n              maxWidth=\"none\"\n            />\n          </Link>\n          <Box p=\"7px\">\n            {name} <br />{\" \"}\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n              {character}\n            </Text>\n          </Box>\n        </Box>\n      );\n    });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map(trailer => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            title={trailer.original_title}\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n            className=\"movieTrailerBoxes\"\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n  // Carousel settiings\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3\n  };\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then(res => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then(res => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then(res => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"scroll\"\n  };\n\n  const imageContainer = {\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"top\"\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\"\n  };\n\n  const pageSpinner = {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n\n    transform: \"translate(-50%, -50%)\"\n  };\n  return (\n    <>\n      <Box>\n        {isPageLoaded ? null : (\n          <Box className=\"loadingScreen\">\n            <Spinner\n              style={pageSpinner}\n              thickness=\"3px\"\n              speed=\"0.7s\"\n              emptyColor=\"gray.200\"\n              color=\"black\"\n              size=\"100px\"\n            />\n          </Box>\n        )}\n      </Box>\n      <Box\n        style={imageContainer}\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }}\n        >\n          <Box style={container}>\n            <Heading\n              position=\"absolute\"\n              top=\"50%\"\n              color=\"white\"\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\n            >\n              {movieData.original_title}\n            </Heading>\n            <Link to=\"/\">\n              <span className=\"responsiveArrow\" onClick={goBack}>\n                &#8592;\n              </span>\n            </Link>\n          </Box>\n        </Box>\n      </Box>\n      <Box style={detailBody}>\n        <Box style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\n              {castList}\n            </Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailersboxes}\n            </Flex>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Image, Grid as ChakraGrid, Heading } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction SearchByActor() {\n  const { APIKEY, ImageUrl, setNavShadow, navShadow } = useContext(Context);\n\n  const { personId } = useParams();\n\n  const [personDetails, setPersonDetails] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\n\n  function onScroll() {\n    const scrollTop = myRef.current.scrollTop;\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\n  }\n\n  useEffect(() => {\n    if (personId !== null) {\n      try {\n        axios\n          .get(\n            // retrieve actor's name based on personId\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setPersonDetails(res.data);\n          });\n\n        axios\n          .get(\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n          )\n          .then((res) => {\n            setSearchResults(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, personId, setSearchResults]);\n\n  return (\n    <Box\n      ref={myRef}\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n      onScroll={onScroll}\n    >\n      <NavBar />\n\n      {personDetails !== null && (\n        <>\n          <Heading\n            as=\"h3\"\n            size=\"lg\"\n            marginTop=\"100px\"\n            marginLeft=\"5%\"\n            color=\"primaryText\"\n          >\n            {personDetails.name}\n          </Heading>\n          <ChakraGrid\n            mx=\"125px\"\n            my=\"50px\"\n            borderWidth=\"1px\"\n            borderColor=\"primaryBorder\"\n            rounded=\"lg\"\n            templateColumns=\"auto auto\"\n          >\n            <Image\n              m=\"10px\"\n              src={ImageUrl + personDetails.profile_path}\n              h=\"220px\"\n              objectFit=\"cover\"\n              rounded=\"lg\"\n            />\n            <Box m=\"10px\" color=\"primaryText\" fontSize=\"0.9em\">\n              Actor Biography: {personDetails.biography}\n            </Box>\n          </ChakraGrid>\n\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default SearchByActor;\n","import React, { useContext } from \"react\";\nimport Grid from \"../components/Grid\";\nimport Navbar from \"../components/NavBar\";\nimport { Heading, Box } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\n\nfunction SearchPage() {\n  const { search, searchResults, isSearch } = useContext(Context);\n  console.log(search);\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n       <Navbar />\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\n        {isSearch ? `Search Results for ${search}` : `Search For Movie`}\n      </Heading>\n     \n      <Grid searchResults={searchResults} />\n    </Box>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { BrowserRouter, Switch, Route, HashRouter } from \"react-router-dom\";\nimport FavoriteMoviespage from \"./pages/FavoriteMoviespage\";\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\nimport SearchByActor from \"./pages/SearchByActor\";\n\nimport SearchPage from \"./pages/SearchPage\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route path=\"/favorites\">\n            <FavoriteMoviespage />\n          </Route>\n          <Route path=\"/moviedetailspage/:movieId\">\n            <MovieDetailsPage />\n          </Route>\n\n          <Route path=\"/actor/:personId\">\n            <SearchByActor />\n          </Route>\n          <Route path=\"/searchPage\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/\">\n            <Homepage />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      cardBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}