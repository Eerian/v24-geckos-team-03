{"version":3,"sources":["Context.js","components/Movieboxes.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterSidebar.js","pages/Homepage.js","components/MovieDetailsBody.js","pages/MovieDetails.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","personId","setPersonId","personName","setPersonName","APIKEY","useEffect","searchByActorFailed","axios","get","then","res","data","name","cast","err","console","log","results","Provider","value","ImageUrl","children","Movieboxes","imageSrc","title","onClick","Box","bg","w","m","color","fontSize","Image","src","h","objectFit","MovieDetails","useContext","isOpen","onClose","id","movieDetails","setMovieDetails","movieCredits","setMovieCredits","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","map","castMember","index","cast_id","character","profile_path","person_id","key","Grid","p","borderWidth","borderColor","rounded","templateColumns","columnGap","searchByActor","cursor","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","popularity","status","Date","release_date","toLocaleDateString","budget","format","revenue","rowGap","textAlign","tagline","to","Button","backgroundColor","_hover","mr","movieId","setMovieId","useDisclosure","onOpen","movieBoxes","movie","original_title","poster_path","className","maxWidth","margin","marginTop","display","flexWrap","justifyContent","length","Search","inputEl","useRef","current","onSubmit","e","preventDefault","type","ref","mx","NavBar","top","px","py","isInline","size","Heading","as","Searchbar","Switch","ml","float","Link","FilterSidebar","genre","setGenre","year","setYear","submit","setSubmit","selectEl","selectStyles","marginRight","position","width","height","lineHeight","background","overflow","borderRadius","padding","disabled","border","textDecoration","outline","Homepage","left","fontWeight","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backdrop_path","backgroundSize","container","paddingY","pb","Flex","paddingTop","wrap","overflowX","MovieDetailsPage","useParams","App","exact","path","customTheme","theme","colors","primaryBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.ad6206f6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false);\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [search, setSearch] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n\n  const [personId, setPersonId] = useState(null);\n  const [personName, setPersonName] = useState(\"\");\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  // check if the actor query string is populated\n  //const params = new URLSearchParams(window.location.search);\n  //const person_id = params.get(\"actor\");\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      let searchByActorFailed = false;\n\n      // if a person_id was passed, then search for the movies that have that actor\n      if (personId !== null) {\n        try {\n          axios\n            .get(\n              // retrieve actor's name based on personId\n              `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n            )\n            .then(res => {\n              setPersonName(res.data.name);\n            });\n\n          axios\n            .get(\n              `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n              // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n            )\n            .then(res => {\n              setIsSearch(false); // need to clear this so heading shows up\n              setSearchResults(res.data.cast);\n              setDefaultMovies(true);\n            });\n        } catch (err) {\n          console.log(err);\n          // if search by actor doesn't work, then try to grab the trending movies\n          searchByActorFailed = true;\n        }\n      }\n      if (searchByActorFailed || personId === null) {\n        setPersonName(\"\"); // clear name if personId is null\n        try {\n          axios\n            .get(\n              `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n            )\n            .then(res => {\n              setSearchResults(res.data.results);\n              setDefaultMovies(true);\n            });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n  }, [defaultMovies, personId]);\n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        setDefaultMovies,\n        personName,\n        setPersonId\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image } from \"@chakra-ui/core\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick } = props;\n\n  return (\n    <Box\n      onClick={() => onClick()}\n      bg=\"primaryBackground\"\n      w=\"170px\"\n      m={4}\n      color=\"primaryText\"\n      fontSize={\"16px\"}\n    >\n      <Image src={imageSrc} w=\"170px\" h={\"220px\"} objectFit=\"cover\" />\n\n      <h1>{title}</h1>\n    </Box>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl, setPersonId, setDefaultMovies } = useContext(\n    Context\n  );\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  function searchByActor(person_id) {\n    setPersonId(person_id);\n    setDefaultMovies(true);\n    onClose();\n  }\n\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Image\n                onClick={() => searchByActor(person_id)}\n                cursor=\"pointer\"\n                rounded=\"lg\"\n                src={ImageUrl + profile_path}\n                h=\"80px\"\n                objectFit=\"cover\"\n              />\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n        movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Popularity: {movieDetails.popularity}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>\n                <Link to={`/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    Close\n                  </Button>\n                </Link>\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid() {\n  const { searchResults, ImageUrl } = useContext(Context);\n\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n\n    margin: \"0 auto\",\n\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        onClick={() => onHandleMovieClick(movie.id)}\n      />\n    );\n  });\n\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { Button } from \"@chakra-ui/core\";\n\nfunction Search() {\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY,\n    setDefaultMovies\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n\n    setIsSearch(true);\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n            setDefaultMovies(false);\n            inputEl.current.value = \"\";\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(searchResults);\n  }, [search, setSearchResults, APIKEY, setIsSearch, setDefaultMovies]);\n\n  return (\n    <div className=\"search-bar\">\n      <form onSubmit={searchSubmit}>\n        <input type=\"text\" ref={inputEl}></input>\n        <Button mx=\"5px\" h=\"2em\">\n          Search Movies\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from \"./Searchbar\";\nimport { Link as Links } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport {\n  Box,\n  Flex,\n  Image,\n  Link,\n  Switch,\n  Heading,\n  Stack\n} from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const { setDefaultMovies, defaultMovies, setPersonId } = useContext(Context);\n  const clicked = () => {\n    setPersonId(null);\n    setDefaultMovies(true);\n    console.log(defaultMovies);\n    console.log(\"hello\");\n  };\n  return (\n    <Box\n      className=\"nav-bar\"\n      style={{ top: 0 }}\n      bg=\"primaryBackground\"\n      w=\"100%\"\n      px={5}\n      py={2}\n    >\n      <Stack isInline justifyContent=\"space-between\">\n        {\" \"}\n        <Links to=\"/\">\n          {\" \"}\n          <Stack isInline onClick={clicked}>\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={30}\n            />{\" \"}\n            <Heading as=\"h3\" size=\"lg\" color=\"logoText\">\n              Daily Flix\n            </Heading>\n          </Stack>\n        </Links>\n        <Stack isInline>\n          <Searchbar />\n          <Switch size=\"sm\" ml={2} />\n        </Stack>\n      </Stack>\n\n      <Box float=\"right\" mr={10}>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          My Favorites\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watched\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watch List\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { Heading } from \"@chakra-ui/core\";\nimport { Button } from \"@chakra-ui/core\";\n\nfunction FilterSidebar() {\n  const [genre, setGenre] = useState(\"Genre\");\n  const [year, setYear] = useState(\"Year\");\n  const [submit, setSubmit] = useState(false);\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const { setSearchResults, APIKEY, setDefaultMovies, setSearch } = useContext(\n    Context\n  );\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setSubmit(true);\n    setGenre(inputEl.current.value);\n    setYear(selectEl.current.value);\n  }\n\n  useEffect(() => {\n    //   Checks wheither if correct selections are submitted\n    if (genre != \"Genre\" && year != \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setDefaultMovies(false);\n            setSubmit(false);\n            setSearch(\"\");\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [submit]);\n\n  const sidebar = {\n    marginTop: \"250px\",\n    textAlign: \"center\"\n  };\n  const filterButton = {\n    border: \"none\",\n    color: \"black\",\n    padding: \"8px 32px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"16px\",\n    margin: \"4px 2px\",\n    cursor: \"pointer\",\n    backgroundColor: \"#2c3e50\",\n    borderRadius: \"30px\",\n    outline: \"none\"\n  };\n\n  const selectStyles = {\n    marginRight: \"10px\",\n    position: \"relative\",\n\n    width: \"20em\",\n    height: \"3em\",\n    lineHeight: \"3\",\n    background: \"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \".25em\",\n    padding: \"0 .5em\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  };\n  console.log(\"filter\");\n  return (\n    <div style={sidebar}>\n      <Heading color=\"white\">Find Movies By</Heading>\n      <form onSubmit={formSubmit}>\n        <select ref={inputEl} style={selectStyles}>\n          <option value disabled>\n            Genre\n          </option>\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </select>\n\n        <select ref={selectEl} style={selectStyles}>\n          <option value disabled>\n            Year\n          </option>\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </select>\n\n        <button style={filterButton}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FilterSidebar;\n","import React, { useContext } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport FilterSidebar from \"../components/FilterSidebar\";\n\nimport { Context } from \"../Context\";\n\nfunction Homepage() {\n  const { isSearch, personName } = useContext(Context);\n  // personName is needed to update the heading when searching by actor\n\n  const headerStyles = {\n    position: \"absolute\",\n    top: \"100px\",\n    color: \"white\",\n    left: \"150px\",\n    fontSize: \"25px\",\n    fontWeight: \"100\",\n  };\n\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <h1 style={headerStyles}>\n        {isSearch\n          ? null\n          : personName === \"\"\n          ? \"Popular Movies\"\n          : `Movies starring ${personName}`}\n      </h1>\n      <NavBar />\n      <FilterSidebar />\n      <Grid />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { Box, Heading, Image, Text, Flex } from \"@chakra-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nfunction MovieDetailsBody(props) {\n  const { APIKEY, ImageUrl, setPersonId } = useContext(Context);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n\n  function searchByActor(person_id) {\n    setPersonId(person_id);\n  }\n\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id\n        } = castMember;\n\n        return (\n          <Box key={cast_id} textAlign=\"center\">\n            <Image\n              m=\"0 auto\"\n              // onClick={() => searchByActor(person_id)} Will implement in next week MVP\n              cursor=\"pointer\"\n              rounded=\"lg\"\n              src={ImageUrl + profile_path}\n              h=\"80px\"\n              objectFit=\"cover\"\n            />\n            <Box p=\"7px\">\n              {name} <br />{\" \"}\n              <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                {character}\n              </Text>\n            </Box>\n          </Box>\n        );\n      });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map(trailer => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then(res => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then(res => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then(res => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  console.log(movieTrailers);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100vh\",\n    width: \"100vw\"\n  };\n\n  const imageContainer = {\n    height: \"100vh\",\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    position: \"relative\"\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\"\n  };\n  return (\n    <>\n      <div style={imageContainer}>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }}\n        >\n          <div style={container}>\n            <Heading position=\"absolute\" top=\"50%\" color=\"white\">\n              {movieData.original_title}\n            </Heading>\n            <Link to=\"/\">\n              <span\n                style={{\n                  color: \"white\",\n                  fontSize: \"80px\",\n                  position: \"absolute\",\n                  top: \"50px\"\n                }}\n              >\n                &#8592;\n              </span>\n            </Link>\n          </div>\n        </div>\n      </div>\n      <div style={detailBody}>\n        <div style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n            <Flex>{castList}</Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailersboxes}\n            </Flex>\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport MovieDetailsBody from \"../components/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport MovieDetailsPage from \"./pages/MovieDetails\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n      </Switch>\n      <Switch>\n        <Route path=\"/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}