{"version":3,"sources":["Context.js","components/Movieboxes.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","components/FavoriteMovies.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/SearchPage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","navShadow","setNavShadow","homePageResults","setHomePageResults","added","setAdded","db","Localbase","allFavMovies","setAllFavMovies","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","year","rating","isFavorite","PseudoBox","bg","w","minW","m","color","cursor","borderWidth","borderColor","rounded","fontSize","p","opacity","_hover","position","Box","top","right","backgroundColor","lineHeight","borderRadius","h","d","Icon","name","paddingLeft","paddingBottom","left","size","Image","src","objectFit","textAlign","MovieDetails","useContext","isOpen","onClose","id","movieDetails","setMovieDetails","movieCredits","setMovieCredits","updateFavorites","collection","get","then","movies","console","log","isFave","setisFave","useEffect","forEach","movie","axios","res","data","err","cast","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","map","castMember","index","cast_id","character","profile_path","person_id","key","Grid","templateColumns","columnGap","to","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","vote_average","status","Date","release_date","toLocaleDateString","budget","format","revenue","rowGap","tagline","Button","variant","width","mr","doc","delete","i","length","add","movieImage","poster_path","movieTitle","movieReleaseDate","movieRating","movieId","setMovieId","setMovieImage","setMovieTitle","useDisclosure","onOpen","favoriteMovieIds","setFavoriteMovieIds","movieIdArray","push","movieBoxes","original_title","getFullYear","includes","movieName","onHandleMovieClick","backdrop_path","className","maxWidth","margin","marginTop","display","flexWrap","justifyContent","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","type","ref","placeholder","NavBar","px","py","zIndex","boxShadow","isInline","Link","as","RouterLink","Heading","fontWeight","fontFamily","Searchbar","Switch","ml","float","marginRight","textDecoration","Filter","genre","setGenre","setYear","genreOption","yearOption","submit","setSubmit","selectEl","selectStyles","height","background","overflow","disabled","mx","my","Select","Homepage","myRef","createRef","onScroll","scrollTop","marginLeft","FavoriteMovies","undefined","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backgroundSize","backgroundPosition","container","Spinner","transform","thickness","speed","emptyColor","goBack","overflowY","paddingY","pb","Flex","wrap","overflowX","paddingTop","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","biography","SearchPage","marginY","App","exact","path","customTheme","theme","colors","primaryBackground","cardBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.6efdaa34.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Localbase from \"localbase\";\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider(props) {\r\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\r\n\r\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\r\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\r\n  const [search, setSearch] = useState(\"\"); // save search input\r\n  const [searchResults, setSearchResults] = useState([]); // saves search results\r\n  const [navShadow, setNavShadow] = useState(false);\r\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\r\n  const [added, setAdded] = useState(0);\r\n\r\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\r\n\r\n  //Create a LOCAL DATABASE using localbase imported.\r\n  let db = new Localbase(\"db\");\r\n  const [allFavMovies, setAllFavMovies] = useState([]);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        setSearch,\r\n        setSearchResults,\r\n        search,\r\n        searchResults,\r\n        homePageResults,\r\n        setHomePageResults,\r\n        ImageUrl,\r\n        isSearch,\r\n        setIsSearch,\r\n        APIKEY,\r\n        db,\r\n        allFavMovies,\r\n        setAllFavMovies,\r\n        setDefaultMovies,\r\n        navShadow,\r\n        setNavShadow,\r\n        defaultMovies,\r\n        added,\r\n        setAdded\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider, Context };\r\n","import React from \"react\";\r\nimport { Box, Image, PseudoBox, Icon } from \"@chakra-ui/core\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\n\r\nfunction Movieboxes(props) {\r\n  const { imageSrc, title, onClick, year, rating, isFavorite } = props;\r\n\r\n  return (\r\n    <PseudoBox\r\n      onClick={() => onClick()}\r\n      bg=\"cardBackground\"\r\n      w=\"13vw\"\r\n      minW=\"175px\"\r\n      m={4}\r\n      color=\"primaryText\"\r\n      cursor=\"pointer\"\r\n      borderWidth=\"1px\"\r\n      borderColor=\"primaryBorder\"\r\n      rounded=\"lg\"\r\n      fontSize=\"0.8em\"\r\n      p=\"5px\"\r\n      opacity=\"0.75\"\r\n      _hover={{ borderColor: \"#666\", opacity: \"1\" }}\r\n      position=\"relative\"\r\n    >\r\n      {rating !== null && (\r\n        <Box\r\n          position=\"absolute\"\r\n          top=\"8px\"\r\n          right=\"8px\"\r\n          backgroundColor=\"rgb(0,0,0,0.6)\"\r\n          p=\"0.5em\"\r\n          lineHeight=\"1em\"\r\n          borderRadius=\"1em\"\r\n          h=\"2em\"\r\n          color=\"primaryText\"\r\n        >\r\n          <Box d=\"inline\">{rating}</Box>\r\n          <Icon\r\n            name=\"star\"\r\n            paddingLeft=\"2px\"\r\n            paddingBottom=\"3px\"\r\n            color=\"#ffff00\"\r\n          />\r\n        </Box>\r\n      )}\r\n\r\n      {isFavorite !== null && (\r\n        <Box\r\n          position=\"absolute\"\r\n          top=\"4px\"\r\n          left=\"5px\"\r\n          p=\"0.5em\"\r\n          lineHeight=\"1em\"\r\n          borderRadius=\"1em\"\r\n          h=\"2em\"\r\n          color=\"primaryText\"\r\n        >\r\n          {isFavorite && <FaHeart size=\"20px\" color=\"#ff0000\" />}\r\n        </Box>\r\n      )}\r\n\r\n      <Image rounded=\"lg\" src={imageSrc} objectFit=\"cover\" />\r\n      <Box m=\"5px\" textAlign=\"center\" fontSize=\"1.1em\">\r\n        {`${title} ${year !== null ? `(${year})` : \"\"}`}\r\n      </Box>\r\n    </PseudoBox>\r\n  );\r\n}\r\n\r\nexport default Movieboxes;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  Stack,\r\n  Box,\r\n  Grid,\r\n  Image,\r\n  Text,\r\n} from \"@chakra-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nfunction MovieDetails(props) {\r\n  const { APIKEY, ImageUrl, db, allFavMovies, setAllFavMovies } = useContext(\r\n    Context\r\n  );\r\n  const { isOpen, onClose, id } = props;\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n  const [movieCredits, setMovieCredits] = useState(null);\r\n\r\n  const updateFavorites = () => {\r\n    db.collection(\"favoriteMovies\")\r\n      .get()\r\n      .then((movies) => {\r\n        setAllFavMovies(movies);\r\n      });\r\n    console.log(\"Favorites Updated\");\r\n  };\r\n\r\n  //create a handler for \"add to favorites\" button on the Modal.\r\n  const handleAddToFavorites = () => {\r\n    //Check for duplicate entries on the database before adding a movie.\r\n    for (let i = 0; i < allFavMovies.length; i++) {\r\n      if (allFavMovies[i].id === movieDetails.id) {\r\n        console.log(\"movie exists\");\r\n        return null;\r\n      }\r\n    }\r\n    //add image and title of movies clicked to the DB\r\n    db.collection(\"favoriteMovies\")\r\n      .add({\r\n        id: movieDetails.id,\r\n        movieImage: ImageUrl + movieDetails.poster_path,\r\n        movieTitle: movieDetails.title,\r\n        movieReleaseDate: movieDetails.release_date,\r\n        movieRating: movieDetails.vote_average,\r\n      })\r\n      .then(() => {\r\n        updateFavorites();\r\n      });\r\n  };\r\n\r\n  //create a handler for RemoveFromFavorites button on the Modal\r\n  const handleRemoveFromFavorites = () => {\r\n    db.collection(\"favoriteMovies\")\r\n      .doc({ id: id })\r\n      .delete()\r\n      .then(() => {\r\n        updateFavorites();\r\n      });\r\n  };\r\n\r\n  const [isFave, setisFave] = useState(false);\r\n  //check if a movie is favorited;\r\n  useEffect(() => {\r\n    setisFave(false);\r\n    allFavMovies.forEach((movie) => {\r\n      if (movie.id === id) {\r\n        setisFave(true);\r\n      }\r\n    });\r\n  }, [allFavMovies, id]);\r\n\r\n  useEffect(() => {\r\n    if (id !== null) {\r\n      setMovieDetails(null); // prevents details from previous modal from showing up\r\n      setMovieCredits(null);\r\n      try {\r\n        axios\r\n          .get(\r\n            // retrieve credits object based on movie id\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setMovieDetails(res.data);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      try {\r\n        axios\r\n          .get(\r\n            // retrieve credits object based on movie id\r\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setMovieCredits(res.data.cast);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      setMovieDetails(null);\r\n      setMovieCredits(null);\r\n    }\r\n  }, [id, APIKEY]);\r\n\r\n  // Create our number formatter for USD currency\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n\r\n  let castList = [];\r\n\r\n  if (movieCredits !== null) {\r\n    const numberOfActorsDisplayed = 10;\r\n    // the code beloe takes the first X objects in the movie credit array\r\n    // for each of these, a Box is generated with a headshot, actor name, and character\r\n    castList = movieCredits\r\n      .slice(0, numberOfActorsDisplayed)\r\n      .map((castMember, index) => {\r\n        const {\r\n          cast_id,\r\n          character,\r\n          name,\r\n          profile_path,\r\n          id: person_id,\r\n        } = castMember;\r\n\r\n        return (\r\n          <Box key={cast_id}>\r\n            <Grid\r\n              p=\"3px\"\r\n              borderWidth=\"1px\"\r\n              borderColor=\"primaryBorder\"\r\n              rounded=\"lg\"\r\n              templateColumns=\"30% 70%\"\r\n              columnGap=\"3px\"\r\n            >\r\n              <Link to={`/v24-geckos-team-03/actor/${person_id}`}>\r\n                <Image\r\n                  cursor=\"pointer\"\r\n                  rounded=\"lg\"\r\n                  src={ImageUrl + profile_path}\r\n                  h=\"80px\"\r\n                  objectFit=\"cover\"\r\n                />\r\n              </Link>\r\n              <Box p=\"7px\">\r\n                {name} <br />{\" \"}\r\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\r\n                  {character}\r\n                </Text>\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      });\r\n  }\r\n\r\n  //Check if movie is favorited -- remove?\r\n  /*\r\n  const [isFaved, setisFaved] = useState();\r\n  const checkFavorited = () => {\r\n    let favorited = \"\";\r\n    for (let i = 0; i < allFavMovies.length; i++) {\r\n      if (allFavMovies[i].id === movieDetails.id) {\r\n        setisFaved(movieDetails.id);\r\n        console.log(isFaved);\r\n      }\r\n    }\r\n  };\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        {movieDetails !== null &&\r\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\r\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\r\n              <ModalHeader>{movieDetails.title}</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <Stack>\r\n                  <Box>Summary</Box>\r\n                  <Box\r\n                    p=\"10px\"\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"primaryBorder\"\r\n                    rounded=\"lg\"\r\n                    fontSize=\"0.9em\"\r\n                  >\r\n                    {movieDetails.overview}\r\n                  </Box>\r\n                  <Box mt=\"15px\">Details</Box>\r\n                  <Grid\r\n                    p=\"10px\"\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"primaryBorder\"\r\n                    rounded=\"lg\"\r\n                    templateColumns=\"50% 50%\"\r\n                    columnGap=\"10px\"\r\n                    fontSize=\"0.8em\"\r\n                  >\r\n                    <Box>\r\n                      Runtime:{\" \"}\r\n                      {movieDetails.runtime === 0\r\n                        ? \"?\"\r\n                        : `${movieDetails.runtime} minutes`}\r\n                    </Box>\r\n                    <Box>Rating: {movieDetails.vote_average}</Box>\r\n                    <Box>Status: {movieDetails.status}</Box>\r\n                    <Box>\r\n                      Release Date:{\" \"}\r\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\r\n                    </Box>\r\n                    {movieDetails.budget !== 0 && (\r\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\r\n                    )}\r\n                    {movieDetails.revenue !== 0 && (\r\n                      <Box>\r\n                        Revenue: {formatter.format(movieDetails.revenue)}\r\n                      </Box>\r\n                    )}\r\n                  </Grid>\r\n                  <Box mt=\"15px\">Cast</Box>\r\n\r\n                  {movieCredits !== null && (\r\n                    <Grid\r\n                      templateColumns=\"50% 50%\"\r\n                      columnGap=\"10px\"\r\n                      rowGap=\"10px\"\r\n                      fontSize=\"0.7em\"\r\n                    >\r\n                      {castList}\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Box\r\n                    p=\"10px\"\r\n                    textAlign=\"center\"\r\n                    color=\"logoText\"\r\n                    fontStyle=\"italic\"\r\n                    fontSize=\"1.1em\"\r\n                  >\r\n                    {movieDetails.tagline}\r\n                  </Box>\r\n                </Stack>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>\r\n                {isFave ? (\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    width=\"350px\"\r\n                    borderWidth=\"2px\"\r\n                    backgroundColor=\"#db291d\"\r\n                    color=\"white\"\r\n                    _hover\r\n                    mr={3}\r\n                    onClick={handleRemoveFromFavorites}\r\n                  >\r\n                    Remove From Favorites\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    onClick={handleAddToFavorites}\r\n                    borderColor=\"logoText\"\r\n                    borderWidth=\"3px\"\r\n                    backgroundColor=\"primaryBackground\"\r\n                    color=\"logoText\"\r\n                    _hover\r\n                    mr={3}\r\n                  >\r\n                    Add To Favorites\r\n                  </Button>\r\n                )}\r\n\r\n                {/* <Button\r\n                    borderColor=\"logoText\"\r\n                    borderWidth=\"3px\"\r\n                    backgroundColor=\"primaryBackground\"\r\n                    color=\"logoText\"\r\n                    _hover\r\n                    mr={3} \r\n                    onClick={handleAddToFavorites}\r\n              >\r\n                    Add to favorites\r\n              </Button>   */}\r\n                <Link to={`/v24-geckos-team-03/moviedetailspage/${id}`}>\r\n                  {\" \"}\r\n                  <Button\r\n                    borderColor=\"logoText\"\r\n                    borderWidth=\"3px\"\r\n                    backgroundColor=\"primaryBackground\"\r\n                    color=\"logoText\"\r\n                    _hover\r\n                    mr={3}\r\n                    onClick={onClose}\r\n                  >\r\n                    More Details\r\n                  </Button>\r\n                </Link>\r\n                <Button\r\n                  borderColor=\"logoText\"\r\n                  borderWidth=\"3px\"\r\n                  backgroundColor=\"primaryBackground\"\r\n                  color=\"logoText\"\r\n                  _hover\r\n                  mr={3}\r\n                  onClick={onClose}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </ModalFooter>\r\n            </ModalContent>\r\n          )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default MovieDetails;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport Movieboxes from \"./Movieboxes\";\r\nimport { useDisclosure } from \"@chakra-ui/core\";\r\nimport MovieDetails from \"./MovieDetails\";\r\n\r\nfunction Grid(props) {\r\n  const { searchResults } = props;\r\n\r\n  const { ImageUrl, allFavMovies, setAllFavMovies, db } = useContext(Context);\r\n\r\n  // State variables for moviedetails modal popup\r\n  const [movieId, setMovieId] = useState(null);\r\n  const [movieImage, setMovieImage] = useState(\"\");\r\n  const [movieTitle, setMovieTitle] = useState(\"\");\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const [favoriteMovieIds, setFavoriteMovieIds] = useState([]);\r\n\r\n  //Get data from the DB and store all movie ids to an array\r\n  useEffect(() => {\r\n    db.collection(\"favoriteMovies\")\r\n      .get()\r\n      .then((movies) => {\r\n        setAllFavMovies(movies);\r\n      });\r\n    console.log(\"getFavMovies UseEffect\");\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //Get data from the DB and store all movie ids to an array\r\n  useEffect(() => {\r\n    if (allFavMovies.length > 0) {\r\n      const movieIdArray = [];\r\n      allFavMovies.forEach((movie) => {\r\n        movieIdArray.push(movie.id);\r\n      });\r\n      setFavoriteMovieIds(movieIdArray);\r\n    }\r\n  }, [allFavMovies]);\r\n\r\n  const gridStyles = {\r\n    maxWidth: \"1200px\",\r\n    margin: \"0 auto\",\r\n    marginTop: \"15px\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-evenly\",\r\n  };\r\n\r\n  const movieBoxes = searchResults.map(function (movie) {\r\n    return (\r\n      <Movieboxes\r\n        key={movie.id}\r\n        title={movie.original_title}\r\n        imageSrc={ImageUrl + movie.poster_path}\r\n        year={new Date(movie.release_date).getFullYear()}\r\n        rating={movie.vote_average}\r\n        isFavorite={favoriteMovieIds.includes(movie.id)}\r\n        onClick={() =>\r\n          onHandleMovieClick(\r\n            movie.id,\r\n            movie.backdrop_path,\r\n            movie.original_title\r\n          )\r\n        }\r\n      />\r\n    );\r\n  });\r\n\r\n  function onHandleMovieClick(id, movieImage, movieName) {\r\n    setMovieId(id);\r\n    setMovieImage(movieImage);\r\n    setMovieTitle(movieName);\r\n    onOpen();\r\n    console.log(id);\r\n    console.log(movieImage);\r\n    console.log(movieName);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={gridStyles}>\r\n        {searchResults.length > 0 ? movieBoxes : null}\r\n      </div>\r\n      <MovieDetails\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        id={movieId}\r\n        movieImage={movieImage}\r\n        movieTitle={movieTitle}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nfunction Search() {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  const {\r\n    setSearch,\r\n    setSearchResults,\r\n    search,\r\n    searchResults,\r\n    setIsSearch,\r\n    APIKEY,\r\n    setDefaultMovies\r\n  } = useContext(Context);\r\n\r\n  const inputEl = useRef(null);\r\n\r\n  function searchSubmit(e) {\r\n    e.preventDefault();\r\n    setSearch(inputEl.current.value);\r\n\r\n    setIsSearch(true);\r\n\r\n    history.push(\"/searchPage\"); // Routes to search page on submit\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (search.length > 0) {\r\n      try {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\r\n          )\r\n          .then(res => {\r\n            setSearchResults(res.data.results);\r\n            setIsSearch(true);\r\n            setDefaultMovies(false);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    console.log(searchResults);\r\n  }, [search]);\r\n\r\n  const buttonStyle = {\r\n    borderRadius: \"0.25rem\",\r\n    fontWeight: 600,\r\n    display: \"inline-flex\",\r\n    appearance: \"none\",\r\n    WebkitBoxAlign: \"center\",\r\n    alignItems: \"center\",\r\n    WebkitBoxPack: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: \"all 250ms ease 0s\",\r\n    userSelect: \"none\",\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    verticalAlign: \"middle\",\r\n    lineHeight: 1.2,\r\n    outline: \"none\",\r\n    height: \"2em\",\r\n    minWidth: \"2.5rem\",\r\n    fontSize: \"1rem\",\r\n    paddingLeft: \"1rem\",\r\n    paddingRight: \"1rem\",\r\n    backgroundColor: \"rgb(237, 242, 247)\",\r\n    marginLeft: \"5px\",\r\n    marginRight: \"5px\"\r\n  };\r\n  return (\r\n    <div className=\"search\">\r\n      <form onSubmit={searchSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          ref={inputEl}\r\n          placeholder=\"Search movie here!\"\r\n        ></input>\r\n        <button type=\"submit\" name=\"button\">\r\n          <i className=\"fas fa-search\"></i>\r\n          {/* <input type=\"text\" ref={inputEl}></input> */}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useContext } from \"react\";\r\nimport Searchbar from './Searchbar';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Context } from \"../Context\";\r\nimport { Box, Image, Link, Switch, Heading, Stack } from \"@chakra-ui/core\";\r\n\r\nconst NavBar = () => {\r\n  const {\r\n    setDefaultMovies,\r\n    navShadow\r\n  } = useContext(Context);\r\n  const clicked = () => {\r\n    setDefaultMovies(true);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className=\"nav-bar\"\r\n      style={{ top: 0 }}\r\n      position=\"absolute\"\r\n      bg=\"primaryBackground\"\r\n      w=\"100%\"\r\n      px={5}\r\n      py={5}\r\n      paddingBottom=\"10px\" \r\n      zIndex=\"1000\"\r\n      boxShadow={\r\n        navShadow\r\n          ? \"0px 6px 6px 3px rgba(0, 0, 0, 0.25)\"\r\n          : \"0px 6px 6px 3px rgba(0, 0, 0, 0)\"\r\n      }\r\n    >\r\n      <Stack isInline justifyContent=\"space-between\">\r\n        <Link as={RouterLink} to=\"/\">\r\n          <Stack isInline onClick={clicked}>\r\n            <Image\r\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\r\n              size={46}\r\n            />\r\n            <Heading as=\"h3\" size=\"xl\" fontWeight=\"200\" color=\"#49c3fd\" fontFamily=\"Gugi, cursive\">\r\n              DAILY FLIX\r\n            </Heading>\r\n          </Stack>\r\n          </Link>\r\n          <Stack isInline>\r\n            <Searchbar />\r\n            <Switch size=\"sm\" ml={2}/>\r\n          </Stack>\r\n        </Stack>\r\n        <Box float=\"right\" marginRight=\"198px\">\r\n            {/* Use RouterLink as written in ChakraUI docs */}\r\n            <Link textDecoration=\"none\" _hover={{color : \"#49c3fd\"}} as={RouterLink} to=\"/favorites\" px={2} color=\"#fff\" className=\"link\">My Favorites</Link>\r\n            <Link _hover={{color : \"#49c3fd\"}} className=\"navbar-links\" px={2} color=\"#fff\">Watch List</Link>\r\n        </Box>\r\n      </Box>\r\n\r\n \r\n      \r\n    )\r\n}\r\n\r\n\r\nexport default NavBar;\r\n\r\n\r\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\r\nimport \"./filter.css\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../Context\";\r\nimport { Heading, Button, Select, Box } from \"@chakra-ui/core\";\r\n\r\nfunction Filter() {\r\n  const [genre, setGenre] = useState(\"Genre\");\r\n  const [year, setYear] = useState(\"Year\");\r\n  const genreOption = useRef(null);\r\n  const yearOption = useRef(null);\r\n  const [submit, setSubmit] = useState(false);\r\n  const inputEl = useRef(null);\r\n  const selectEl = useRef(null);\r\n  const {\r\n    APIKEY,\r\n    setDefaultMovies,\r\n    setHomePageResults\r\n  } = useContext(Context);\r\n\r\n  function formSubmit(e) {\r\n    e.preventDefault();\r\n    setSubmit(true);\r\n    setGenre(inputEl.current.value);\r\n    setYear(selectEl.current.value);\r\n    genreOption.current.disabled = true;\r\n\r\n    yearOption.current.disabled = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    //   Checks wheither if correct selections are submitted\r\n    if (genre !== \"Genre\" && year !== \"Year\") {\r\n      try {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\r\n          )\r\n          .then(res => {\r\n            setHomePageResults(res.data.results);\r\n            setDefaultMovies(false);\r\n            setSubmit(false);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [submit]);\r\n\r\n  const filterbar = {\r\n    marginTop: \"125px\",\r\n    textAlign: \"center\",\r\n  };\r\n  const filterButton = {\r\n    height: \"2em\",\r\n    borderWidth: \"2px\",\r\n    textAlign: \"center\",\r\n    textDecoration: \"none\",\r\n    display: \"inlineBlock\",\r\n    fontSize: \"0.9em\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"1em\",\r\n  };\r\n\r\n  const selectStyles = {\r\n    position: \"relative\",\r\n    width: \"10em\",\r\n    height: \"2.2em\",\r\n    lineHeight: \"2em\",\r\n    background: \"#444\", //\"#2c3e50\",\r\n    overflow: \"hidden\",\r\n    borderRadius: \"1em\",\r\n    color: \"#fff\",\r\n    cursor: \"pointer\",\r\n    paddingLeft: \"15px\",\r\n    fontSize: \"0.8em\",\r\n  };\r\n\r\n  return (\r\n    <div style={filterbar}>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={formSubmit}\r\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\r\n      >\r\n        <Box d=\"inline\" color=\"primaryText\" fontSize=\"1em\" mx=\"7px\" my=\"5px\">\r\n          Find Movies By\r\n        </Box>\r\n        <Select ref={inputEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\r\n          <option ref={genreOption}>Genre</option>\r\n          <option value=\"28\">Action</option>\r\n\r\n          <option value=\"12\">Adventure</option>\r\n          <option value=\"16\">Animation</option>\r\n          <option value=\"35\">Comedy</option>\r\n          <option value=\"80\">Crime</option>\r\n          <option value=\"99\">Documentary</option>\r\n          <option value=\"18\">Drama</option>\r\n          <option value=\"14\">Fantasy</option>\r\n          <option value=\"36\">History</option>\r\n          <option value=\"10402\">Music</option>\r\n          <option value=\"9648\">Mystery</option>\r\n          <option value=\"10749\">Romance</option>\r\n          <option value=\"878\">Science Fiction</option>\r\n          <option value=\"10770\">Tv Movie</option>\r\n          <option value=\"53\">Thriller</option>\r\n          <option value=\"10752\">War</option>\r\n        </Select>\r\n\r\n        <Select ref={selectEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\r\n          <option ref={yearOption}>Year</option>\r\n          <option>2020</option>\r\n          <option>2019</option>\r\n          <option>2018</option>\r\n          <option>2017</option>\r\n          <option>2016</option>\r\n          <option>2015</option>\r\n          <option>2014</option>\r\n          <option>2013</option>\r\n          <option>2012</option>\r\n          <option>2011</option>\r\n          <option>2010</option>\r\n          <option>2009</option>\r\n        </Select>\r\n\r\n        <Button\r\n          backgroundColor=\"primaryBackground\"\r\n          borderColor=\"logoText\"\r\n          color=\"logoText\"\r\n          style={filterButton}\r\n          _hover={{ backgroundColor: \"logoText\", color: \"primaryBackground\", fontWeight: \"900\" }}\r\n          type=\"submit\"\r\n          mx=\"7px\" \r\n          my=\"7px\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Box, Heading } from \"@chakra-ui/core\";\r\nimport axios from \"axios\";\r\nimport Grid from \"../components/Grid\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Filter from \"../components/FilterBar/Filter\";\r\n\r\nimport { Context } from \"../Context\";\r\n\r\nfunction Homepage() {\r\n  const {\r\n    isSearch,\r\n    setNavShadow,\r\n    navShadow,\r\n    homePageResults,\r\n    setHomePageResults,\r\n    defaultMovies,\r\n    setDefaultMovies,\r\n    APIKEY,\r\n  } = useContext(Context);\r\n\r\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\r\n\r\n  function onScroll() {\r\n    const scrollTop = myRef.current.scrollTop;\r\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\r\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (defaultMovies === true) {\r\n      try {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setHomePageResults(res.data.results);\r\n            setDefaultMovies(true);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }, [defaultMovies, APIKEY, setHomePageResults, setDefaultMovies]);\r\n\r\n  return (\r\n    <Box\r\n      ref={myRef}\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\",\r\n      }}\r\n      onScroll={onScroll}\r\n    >\r\n      <NavBar />\r\n      <Filter />\r\n      <Heading\r\n        as=\"h3\"\r\n        size=\"lg\"\r\n        marginTop=\"10px\"\r\n        marginLeft=\"5%\"\r\n        color=\"primaryText\"\r\n      >\r\n        {isSearch ? null : \"Popular Movies\"}\r\n      </Heading>\r\n      <Grid searchResults={homePageResults} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { Context } from \"../Context\";\r\nimport Movieboxes from \"../components/Movieboxes\";\r\nimport MovieDetails from \"./MovieDetails\";\r\nimport { useDisclosure } from \"@chakra-ui/core\";\r\n\r\nconst FavoriteMovies = () => {\r\n  const [movieId, setMovieId] = useState(null);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  function onHandleMovieClick(id) {\r\n    setMovieId(id);\r\n    onOpen();\r\n  }\r\n\r\n  const { db, allFavMovies, setAllFavMovies } = useContext(Context);\r\n\r\n  //Get data from the DB and store all favotired movies to an array\r\n  useEffect(() => {\r\n    db.collection(\"favoriteMovies\")\r\n      .get()\r\n      .then(movies => {\r\n        setAllFavMovies(movies);\r\n        console.log(db);\r\n      });\r\n  }, []);\r\n\r\n  //styles for the grid\r\n  const gridStyles = {\r\n    maxWidth: \"1200px\",\r\n    marginTop: \"10%\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-evenly\"\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={gridStyles}>\r\n        {allFavMovies.map(movie => {\r\n          return (\r\n            <Movieboxes\r\n              key={movie.id}\r\n              title={movie.movieTitle}\r\n              imageSrc={movie.movieImage}\r\n              year={\r\n                movie.movieReleaseDate !== undefined\r\n                  ? new Date(movie.movieReleaseDate).getFullYear()\r\n                  : null\r\n              }\r\n              rating={\r\n                movie.movieRating !== undefined ? movie.movieRating : null\r\n              }\r\n              onClick={() => onHandleMovieClick(movie.id)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\r\n    </>\r\n  );\r\n};\r\n//     <Movieboxes\r\n//     key={movie.id}\r\n//     title={movie.movieTitle}\r\n//     imageSrc={movie.movieImage}\r\n\r\n// />\r\n\r\nexport default FavoriteMovies;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeProvider, Box, Flex, Link, Image,  Switch , Heading, Stack} from \"@chakra-ui/core\";\r\nimport Grid from \"../components/Grid\";\r\nimport { Context } from \"../Context\";\r\nimport Movieboxes from \"../components/Movieboxes\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport { Localbase } from 'localbase';\r\nimport FavoriteMovies from './../components/FavoriteMovies';\r\n\r\n\r\n\r\nconst FavoriteMoviespage = () => {\r\n\r\n// const headerStyles = {\r\n    // position: \"absolute\",\r\n    // top: \"100px\",\r\n    // color: \"red\",\r\n    // left: \"150px\",\r\n    // fontSize: \"25px\",\r\n    // fontWeight: \"400\"\r\n//   };\r\n  return (\r\n    <Box\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\",\r\n      }}\r\n    >\r\n      <NavBar />\r\n      <Box>\r\n        <h1 className=\"page-heading\">Favorite Movies</h1>\r\n      </Box>\r\n      <Box className=\"movie-grid\">\r\n        <FavoriteMovies />\r\n      </Box>\r\n    </Box>\r\n  \r\n  );\r\n         \r\n        \r\n    \r\n}\r\n\r\nexport default FavoriteMoviespage;","import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"./../../Context\";\r\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./MovieDetailsBody.css\";\r\n\r\nfunction MovieDetailsBody(props) {\r\n  const history = useHistory();\r\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\r\n\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [movieCast, setMovieCast] = useState([]);\r\n  const [movieTrailers, setMovieTrailers] = useState([]);\r\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\r\n\r\n  setTimeout(() => {\r\n    setIsPageLoaded(true);\r\n  }, 2500);\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n    setDefaultMovies(true);\r\n  };\r\n  const youtubeLink = `https://www.youtube.com/embed/`;\r\n  let castList = []; // Holds all the movie cast headshots/name/\r\n\r\n  // movie cast card creator\r\n  if (movieCast !== null) {\r\n    const numberOfActorsDisplayed = 10;\r\n    // the code beloe takes the first X objects in the movie credit array\r\n    // for each of these, a Box is generated with a headshot, actor name, and character\r\n    castList = movieCast.map((castMember, index) => {\r\n      const {\r\n        cast_id,\r\n        character,\r\n        name,\r\n        profile_path,\r\n        id: person_id\r\n      } = castMember;\r\n\r\n      return (\r\n        <Box\r\n          key={cast_id}\r\n          textAlign=\"center\"\r\n          marginRight=\"60px\"\r\n          marginLeft=\"60px\"\r\n        >\r\n          <Link to={`/v24-geckos-team-03/actor/${person_id}`}>\r\n            <Image\r\n              m=\"0 auto\"\r\n              cursor=\"pointer\"\r\n              rounded=\"lg\"\r\n              src={ImageUrl + profile_path}\r\n              objectFit=\"cover\"\r\n              width=\"100px\"\r\n              maxWidth=\"none\"\r\n            />\r\n          </Link>\r\n          <Box p=\"7px\">\r\n            {name} <br />{\" \"}\r\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\r\n              {character}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    });\r\n  }\r\n\r\n  // movie trailer box creator\r\n\r\n  let movieTrailersboxes = [];\r\n  if (movieTrailers.length > 0) {\r\n    movieTrailersboxes = movieTrailers.map(trailer => {\r\n      return (\r\n        <Box mr=\"10px\" key={trailer.id}>\r\n          <iframe\r\n            title={trailer.original_title}\r\n            width=\"420\"\r\n            height=\"345\"\r\n            src={`${youtubeLink}${trailer.key}`}\r\n            className=\"movieTrailerBoxes\"\r\n          ></iframe>\r\n        </Box>\r\n      );\r\n    });\r\n  }\r\n  // Carousel settiings\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3\r\n  };\r\n\r\n  // Id is passed from MovieDetails component\r\n  const { movieId } = props;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios\r\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\r\n        .then(res => {\r\n          // stores movie data using movie ID\r\n          setMovieData(res.data);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    try {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\r\n        )\r\n        .then(res => {\r\n          // stores all movie trailers keys\r\n          setMovieTrailers(res.data.videos.results);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    try {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\r\n        )\r\n        .then(res => {\r\n          // stores cast data using movie ID\r\n          setMovieCast(res.data.cast);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  // styling varibles\r\n  const detailBody = {\r\n    backgroundColor: \"#333333\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    overflowY: \"scroll\"\r\n  };\r\n\r\n  const imageContainer = {\r\n    width: \"100vw\",\r\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"top\"\r\n  };\r\n\r\n  const container = {\r\n    maxWidth: \"80%\",\r\n    margin: \"0 auto\",\r\n    color: \"white\"\r\n  };\r\n\r\n  const pageSpinner = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n\r\n    transform: \"translate(-50%, -50%)\"\r\n  };\r\n  return (\r\n    <>\r\n      <Box>\r\n        {isPageLoaded ? null : (\r\n          <Box className=\"loadingScreen\">\r\n            <Spinner\r\n              style={pageSpinner}\r\n              thickness=\"3px\"\r\n              speed=\"0.7s\"\r\n              emptyColor=\"gray.200\"\r\n              color=\"black\"\r\n              size=\"100px\"\r\n            />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        style={imageContainer}\r\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\r\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\r\n      >\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0,0,0,0.5)\"\r\n          }}\r\n        >\r\n          <Box style={container}>\r\n            <Heading\r\n              position=\"absolute\"\r\n              top=\"50%\"\r\n              color=\"white\"\r\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\r\n            >\r\n              {movieData.original_title}\r\n            </Heading>\r\n            <Link to=\"/v24-geckos-team-03/\" >\r\n              <span className=\"responsiveArrow\" onClick={goBack}>\r\n                &#8592;\r\n              </span>\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box style={detailBody}>\r\n        <Box style={container}>\r\n          <Box paddingY=\"30px\">\r\n            <Heading pb=\"10px\">Summary</Heading>\r\n            <p>{movieData.overview}</p>\r\n          </Box>\r\n\r\n          <Box paddingY=\"30px\">\r\n            <Heading pb=\"10px\"> Cast</Heading>\r\n\r\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\r\n              {castList}\r\n            </Flex>\r\n          </Box>\r\n\r\n          <Box paddingTop=\"30px\">\r\n            <Heading pb=\"10px\">Trailers</Heading>\r\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\r\n              {movieTrailersboxes}\r\n            </Flex>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsBody;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Box } from \"@chakra-ui/core\";\r\n\r\nfunction MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <MovieDetailsBody movieId={movieId} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Box, Image, Grid as ChakraGrid, Heading } from \"@chakra-ui/core\";\r\nimport Grid from \"../components/Grid\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../Context\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction SearchByActor() {\r\n  const { APIKEY, ImageUrl, setNavShadow, navShadow } = useContext(Context);\r\n\r\n  const { personId } = useParams();\r\n\r\n  const [personDetails, setPersonDetails] = useState(null);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\r\n\r\n  function onScroll() {\r\n    const scrollTop = myRef.current.scrollTop;\r\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\r\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (personId !== null) {\r\n      try {\r\n        axios\r\n          .get(\r\n            // retrieve actor's name based on personId\r\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setPersonDetails(res.data);\r\n          });\r\n\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\r\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\r\n          )\r\n          .then((res) => {\r\n            setSearchResults(res.data.cast);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }, [APIKEY, personId, setSearchResults]);\r\n\r\n  return (\r\n    <Box\r\n      ref={myRef}\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\",\r\n      }}\r\n      onScroll={onScroll}\r\n    >\r\n      <NavBar />\r\n\r\n      {personDetails !== null && (\r\n        <>\r\n          <Heading\r\n            as=\"h3\"\r\n            size=\"lg\"\r\n            marginTop=\"100px\"\r\n            marginLeft=\"5%\"\r\n            color=\"primaryText\"\r\n          >\r\n            {personDetails.name}\r\n          </Heading>\r\n          <ChakraGrid\r\n            mx=\"125px\"\r\n            my=\"50px\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"primaryBorder\"\r\n            rounded=\"lg\"\r\n            templateColumns=\"auto auto\"\r\n          >\r\n            <Image\r\n              m=\"10px\"\r\n              src={ImageUrl + personDetails.profile_path}\r\n              h=\"220px\"\r\n              objectFit=\"cover\"\r\n              rounded=\"lg\"\r\n            />\r\n            <Box m=\"10px\" color=\"primaryText\" fontSize=\"0.9em\">\r\n              Actor Biography: {personDetails.biography}\r\n            </Box>\r\n          </ChakraGrid>\r\n\r\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchByActor;\r\n","import React, { useContext } from \"react\";\r\nimport Grid from \"../components/Grid\";\r\nimport Navbar from \"../components/NavBar\";\r\nimport { Heading, Box } from \"@chakra-ui/core\";\r\nimport { Context } from \"../Context\";\r\n\r\nfunction SearchPage() {\r\n  const { search, searchResults, isSearch } = useContext(Context);\r\n  console.log(search);\r\n  return (\r\n    <Box\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\"\r\n      }}\r\n    >\r\n       <Navbar />\r\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\r\n        {isSearch ? `Search Results for ${search}` : `Search For Movie`}\r\n      </Heading>\r\n     \r\n      <Grid searchResults={searchResults} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport { BrowserRouter, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport FavoriteMoviespage from \"./pages/FavoriteMoviespage\";\r\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\r\nimport SearchByActor from \"./pages/SearchByActor\";\r\n\r\nimport SearchPage from \"./pages/SearchPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/v24-geckos-team-03/\">\r\n            <Homepage />\r\n          </Route>\r\n          <Route path=\"/v24-geckos-team-03/favorites\">\r\n            <FavoriteMoviespage />\r\n          </Route>\r\n          <Route path=\"/v24-geckos-team-03/moviedetailspage/:movieId\">\r\n            <MovieDetailsPage />\r\n          </Route>\r\n\r\n          <Route path=\"/v24-geckos-team-03/actor/:personId\">\r\n            <SearchByActor />\r\n          </Route>\r\n          <Route path=\"/v24-geckos-team-03/searchPage\">\r\n            <SearchPage />\r\n          </Route>\r\n          <Route path=\"/v24-geckos-team-03/\">\r\n            <Homepage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { theme } from \"@chakra-ui/core\";\r\n\r\n// we can customize our theme here\r\nexport const customTheme = {\r\n    ...theme,\r\n    colors: {\r\n      ...theme.colors,\r\n      primaryBackground: \"#333\",\r\n      cardBackground: \"#333\",\r\n      primaryBorder: \"#555\",\r\n      logoText: \"#49c3fd\",\r\n      primaryText: \"#fff\",\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport { ContextProvider } from \"./Context\";\r\nimport { customTheme } from \"./theme\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <ContextProvider>\r\n    <Router>\r\n      <ThemeProvider theme={customTheme}>\r\n        <CSSReset />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Router>\r\n  </ContextProvider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}