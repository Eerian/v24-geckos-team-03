{"version":3,"sources":["Context.js","components/Movieboxes.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterSidebar.js","pages/Homepage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","APIKEY","useEffect","axios","get","then","res","data","results","err","console","log","Provider","value","ImageUrl","children","Movieboxes","imageSrc","title","onClick","Box","bg","w","m","color","fontSize","Image","src","h","objectFit","MovieDetails","useContext","isOpen","onClose","id","movieDetails","setMovieDetails","movieCredits","setMovieCredits","cast","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","map","castMember","index","cast_id","character","name","profile_path","key","Grid","p","borderWidth","borderColor","rounded","templateColumns","columnGap","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","popularity","status","Date","release_date","toLocaleDateString","budget","format","revenue","rowGap","textAlign","tagline","Button","backgroundColor","_hover","mr","movieId","setMovieId","useDisclosure","onOpen","movieBoxes","movie","original_title","poster_path","className","maxWidth","margin","marginTop","display","flexWrap","justifyContent","length","Search","inputEl","useRef","current","onSubmit","e","preventDefault","type","ref","mx","NavBar","px","py","isInline","to","size","Heading","as","Searchbar","Switch","ml","float","Link","FilterSidebar","genre","setGenre","year","setYear","submit","setSubmit","selectEl","selectStyles","marginRight","position","width","height","lineHeight","background","overflow","borderRadius","padding","cursor","selected","disabled","border","textDecoration","outline","Homepage","top","left","fontWeight","App","path","customTheme","theme","colors","primaryBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.7a10100d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n  // state checks wheither favorite movies are displaying or not\n  const [isSearch, setIsSearch] = useState(false);\n  const [defaultMovies, setDefaultMovies] = useState(true);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setDefaultMovies(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies, setDefaultMovies]);\n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        setDefaultMovies\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image } from \"@chakra-ui/core\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick } = props;\n\n  return (\n    <Box\n      onClick={() => onClick()}\n      bg=\"primaryBackground\"\n      w=\"170px\"\n      m={4}\n      color=\"primaryText\"\n      fontSize={\"16px\"}\n    >\n      <Image src={imageSrc} w=\"170px\" h={\"220px\"} objectFit=\"cover\" />\n\n      <h1>{title}</h1>\n    </Box>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl } = useContext(Context);\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get( // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n            )\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get( // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const { cast_id, character, name, profile_path } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Image\n                rounded=\"lg\"\n                src={ImageUrl + profile_path}\n                h=\"80px\"\n                objectFit=\"cover\"\n              />\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null && movieCredits !== null && ( // boolean && will only execute what comes next if true\n          <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n            <ModalHeader>{movieDetails.title}</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              <Stack>\n                <Box>Summary</Box>\n                <Box\n                  p=\"10px\"\n                  borderWidth=\"1px\"\n                  borderColor=\"primaryBorder\"\n                  rounded=\"lg\"\n                  fontSize=\"0.9em\"\n                >\n                  {movieDetails.overview}\n                </Box>\n                <Box mt=\"15px\">Details</Box>\n                <Grid\n                  p=\"10px\"\n                  borderWidth=\"1px\"\n                  borderColor=\"primaryBorder\"\n                  rounded=\"lg\"\n                  templateColumns=\"50% 50%\"\n                  columnGap=\"10px\"\n                  fontSize=\"0.8em\"\n                >\n                  <Box>\n                    Runtime:{\" \"}\n                    {movieDetails.runtime === 0\n                      ? \"?\"\n                      : `${movieDetails.runtime} minutes`}\n                  </Box>\n                  <Box>Popularity: {movieDetails.popularity}</Box>\n                  <Box>Status: {movieDetails.status}</Box>\n                  <Box>\n                    Release Date:{\" \"}\n                    {new Date(movieDetails.release_date).toLocaleDateString()}\n                  </Box>\n                  {movieDetails.budget !== 0 && (\n                    <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                  )}\n                  {movieDetails.revenue !== 0 && (\n                    <Box>Revenue: {formatter.format(movieDetails.revenue)}</Box>\n                  )}\n                </Grid>\n                <Box mt=\"15px\">Cast</Box>\n\n                {movieCredits !== null && (\n                  <Grid\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    rowGap=\"10px\"\n                    fontSize=\"0.7em\"\n                  >\n                    {castList}\n                  </Grid>\n                )}\n\n                <Box\n                  p=\"10px\"\n                  textAlign=\"center\"\n                  color=\"logoText\"\n                  fontStyle=\"italic\"\n                  fontSize=\"1.1em\"\n                >\n                  {movieDetails.tagline}\n                </Box>\n              </Stack>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button\n                borderColor=\"logoText\"\n                borderWidth=\"3px\"\n                backgroundColor=\"primaryBackground\"\n                color=\"logoText\"\n                _hover\n                mr={3}\n                onClick={onClose}\n              >\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        )}\n      </Modal>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid() {\n  const { searchResults, ImageUrl } = useContext(Context);\n\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n\n    margin: \"0 auto\",\n\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        onClick={() => onHandleMovieClick(movie.id)}\n      />\n    );\n  });\n\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { Button } from \"@chakra-ui/core\";\n\nfunction Search() {\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY,\n    setDefaultMovies\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n\n    setIsSearch(true);\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n            setDefaultMovies(false);\n            inputEl.current.value = \"\";\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [search, setSearchResults, APIKEY, setIsSearch, setDefaultMovies]);\n\n  console.log(searchResults);\n  return (\n    <div className=\"search-bar\">\n      <form onSubmit={searchSubmit}>\n        <input type=\"text\" ref={inputEl}></input>\n        <Button mx=\"5px\" h=\"2em\">\n          Search Movies\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from \"./Searchbar\";\nimport { Link as Links } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport {\n  Box,\n  Flex,\n  Image,\n  Link,\n  Switch,\n  Heading,\n  Stack\n} from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const { setDefaultMovies, defaultMovies } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n    console.log(defaultMovies);\n    console.log(\"hello\");\n  };\n  return (\n    <Box className=\"nav-bar\" bg=\"primaryBackground\" w=\"100%\" px={5} py={2}>\n      <Stack isInline justifyContent=\"space-between\">\n        {\" \"}\n        <Links to=\"/\">\n          {\" \"}\n          <Stack isInline onClick={clicked}>\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={30}\n            />{\" \"}\n            <Heading as=\"h3\" size=\"lg\" color=\"logoText\">\n              Daily Flix\n            </Heading>\n          </Stack>\n        </Links>\n        <Stack isInline>\n          <Searchbar />\n          <Switch size=\"sm\" ml={2} />\n        </Stack>\n      </Stack>\n\n      <Box float=\"right\" mr={10}>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          My Favorites\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watched\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watch List\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { Heading } from \"@chakra-ui/core\";\nimport { Button } from \"@chakra-ui/core\";\n\nfunction FilterSidebar() {\n  const [genre, setGenre] = useState(\"Genre\");\n  const [year, setYear] = useState(\"Year\");\n  const [submit, setSubmit] = useState(false);\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const { setSearchResults, APIKEY, setDefaultMovies } = useContext(Context);\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setSubmit(true);\n    setGenre(inputEl.current.value);\n    setYear(selectEl.current.value);\n  }\n\n  useEffect(() => {\n    //   Checks wheither if correct selections are submitted\n    if (genre != \"Genre\" && year != \"Year\") {\n      console.log(\"hello\");\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setDefaultMovies(false);\n            setSubmit(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [submit]);\n\n  const sidebar = {\n    marginTop: \"250px\",\n    textAlign: \"center\"\n  };\n  const filterButton = {\n    border: \"none\",\n    color: \"black\",\n    padding: \"8px 32px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"16px\",\n    margin: \"4px 2px\",\n    cursor: \"pointer\",\n    backgroundColor: \"#2c3e50\",\n    borderRadius: \"30px\",\n    outline: \"none\"\n  };\n\n  const selectStyles = {\n    marginRight: \"10px\",\n    position: \"relative\",\n\n    width: \"20em\",\n    height: \"3em\",\n    lineHeight: \"3\",\n    background: \"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \".25em\",\n    padding: \"0 .5em\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  };\n\n  return (\n    <div style={sidebar}>\n      <Heading color=\"white\">Find Movies By</Heading>\n      <form onSubmit={formSubmit}>\n        <select ref={inputEl} style={selectStyles}>\n          <option selected disabled>\n            Genre\n          </option>\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </select>\n\n        <select ref={selectEl} style={selectStyles}>\n          <option selected disabled>\n            Year\n          </option>\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </select>\n\n        <button style={filterButton}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FilterSidebar;\n","import React, { useContext } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport FilterSidebar from \"../components/FilterSidebar\";\n\nimport { Context } from \"../Context\";\n\nfunction Homepage() {\n  const { isSearch } = useContext(Context);\n\n  const headerStyles = {\n    position: \"absolute\",\n    top: \"100px\",\n    color: \"white\",\n    left: \"150px\",\n    fontSize: \"25px\",\n    fontWeight: \"100\"\n  };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n      <h1 style={headerStyles}>{isSearch ? null : \"Popular Movies\"}</h1>\n      <NavBar />\n      <FilterSidebar />\n      <Grid />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\">\n          <Homepage />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}