{"version":3,"sources":["Context.js","components/Searchbar.js","components/Movieboxes.js","components/Grid.js","pages/Homepage.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","search","setSearch","searchResults","setSearchResults","Provider","value","ImageUrl","children","Search","useContext","inputEl","useRef","useEffect","length","axios","get","then","res","data","results","err","console","log","onSubmit","e","preventDefault","current","type","ref","Movieboxes","Box","bg","w","m","color","fontSize","Image","src","imageSrc","h","objectFit","title","Grid","movieBoxes","map","movie","key","id","original_title","poster_path","className","style","maxWidth","margin","display","flexWrap","justifyContent","Homepage","backgroundColor","height","width","overflow","Searchbar","App","path","ReactDOM","render","document","querySelector"],"mappings":"oOAEMA,EAAUC,IAAMC,gBAEtB,SAASC,EAAgBC,GACvB,IAD8B,EAEFC,mBAAS,IAFP,mBAEvBC,EAFuB,KAEfC,EAFe,OAGYF,mBAAS,IAHrB,mBAGvBG,EAHuB,KAGRC,EAHQ,KAK9B,OACE,kBAACT,EAAQU,SAAT,CACEC,MAAO,CAAEJ,YAAWE,mBAAkBH,SAAQE,gBAAeI,SANhD,oCAQZR,EAAMS,U,qBC+BEC,MAxCf,WAAmB,IAAD,EAC+CC,qBAC7Df,GADMO,EADQ,EACRA,UAAWE,EADH,EACGA,iBAAkBH,EADrB,EACqBA,OAAQE,EAD7B,EAC6BA,cAGvCQ,EAAUC,iBAAO,MA0BvB,OAjBAC,qBAAU,WACR,GAAIZ,EAAOa,OAAS,EAClB,IACEC,IACGC,IADH,4DAVS,mCAUT,kBAEyEf,IAEtEgB,MAAK,SAAAC,GACJd,EAAiBc,EAAIC,KAAKC,YAE9B,MAAOC,GACPC,QAAQC,IAAIF,MAGf,CAACpB,EAAQG,IAEZkB,QAAQC,IAAIpB,GAEV,6BACE,0BAAMqB,SAxBV,SAAsBC,GACpBA,EAAEC,iBACFxB,EAAUS,EAAQgB,QAAQrB,SAuBtB,2BAAOsB,KAAK,OAAOC,IAAKlB,IACxB,oD,gBCzBOmB,MAVf,SAAoB/B,GAClB,OACE,kBAACgC,EAAA,EAAD,CAAKC,GAAG,QAAQC,EAAE,QAAQC,EAAG,EAAGC,MAAM,QAAQC,SAAU,OACtD,kBAACC,EAAA,EAAD,CAAOC,IAAKvC,EAAMwC,SAAUN,EAAE,QAAQO,EAAG,QAASC,UAAU,UAE5D,4BAAK1C,EAAM2C,S,KCyBFC,MA5Bf,WAAiB,IAAD,EACsBjC,qBAAWf,GAAvCQ,EADM,EACNA,cAAeI,EADT,EACSA,SAUjBqC,EAAazC,EAAc0C,KAAI,SAASC,GAC5C,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAME,GACXN,MAAOI,EAAMG,eACbV,SAAUhC,EAAWuC,EAAMI,iBAKjC,OACE,yBAAKC,UAAU,YAAYC,MApBV,CACjBC,SAAU,SAEVC,OAAQ,SACRC,QAAS,OACTC,SAAU,OACVC,eAAgB,iBAebb,ICRQc,MAhBf,WACE,OACE,yBACEN,MAAO,CACLO,gBAAiB,UACjBC,OAAQ,QACRC,MAAO,QACPC,SAAU,WAGZ,kBAACC,EAAD,MACA,kBAAC,EAAD,Q,OCCSC,EAZH,WACV,OACE,yBAAKb,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,KAAK,KACV,kBAAC,EAAD,U,cCFVC,IAASC,OACP,kBAACrE,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJsE,SAASC,cAAc,Y","file":"static/js/main.c8f48bf9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  return (\n    <Context.Provider\n      value={{ setSearch, setSearchResults, search, searchResults, ImageUrl }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\n\nfunction Search() {\n  const { setSearch, setSearchResults, search, searchResults } = useContext(\n    Context\n  );\n  const inputEl = useRef(null);\n\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [search, setSearchResults]);\n\n  console.log(searchResults);\n  return (\n    <div>\n      <form onSubmit={searchSubmit}>\n        <input type=\"text\" ref={inputEl}></input>\n        <button>Search Movies</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Box, Image } from \"@chakra-ui/core\";\n\nfunction Movieboxes(props) {\n  return (\n    <Box bg=\"black\" w=\"170px\" m={4} color=\"white\" fontSize={\"8px\"}>\n      <Image src={props.imageSrc} w=\"170px\" h={\"220px\"} objectFit=\"cover\" />\n\n      <h1>{props.title}</h1>\n    </Box>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { flexWrap, justifyContent, backgroundColor } from \"styled-system\";\n\nfunction Grid() {\n  const { searchResults, ImageUrl } = useContext(Context);\n  const gridStyles = {\n    maxWidth: \"1200px\",\n\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n      />\n    );\n  });\n\n  return (\n    <div className=\"container\" style={gridStyles}>\n      {movieBoxes}\n    </div>\n  );\n}\n\nexport default Grid;\n","import React from \"react\";\nimport Searchbar from \"../components/Searchbar\";\nimport Grid from \"../components/Grid\";\n\nfunction Homepage() {\n  return (\n    <div\n      style={{\n        backgroundColor: \"#150e06\",\n        height: \"100vh\",\n        width: \"100vw\",\n        overflow: \"scroll\"\n      }}\n    >\n      <Searchbar />\n      <Grid />\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\">\n          <Homepage />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ContextProvider } from \"./Context\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <App />\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}