{"version":3,"sources":["Context.js","components/Movieboxes.js","components/Footer.js","components/FavoriteMovies.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/FilterPage.js","pages/SearchPage.js","components/WatchList.js","pages/WatchListpage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","searchQuery","setSearchQuery","searchResults","setSearchResults","navShadow","setNavShadow","homePageResults","setHomePageResults","filterdResults","setFilteredResults","db","Localbase","allFavMovies","setAllFavMovies","db2","allWatchListMovies","setallWatchListMovies","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","year","rating","isFavorite","PseudoBox","bg","w","minW","m","color","cursor","borderWidth","borderColor","rounded","fontSize","p","opacity","_hover","position","Box","top","right","backgroundColor","lineHeight","borderRadius","h","d","Icon","name","paddingLeft","paddingBottom","left","size","Image","src","objectFit","textAlign","Footer","className","paddingTop","boxShadow","Divider","Flex","justifyContent","flexDirection","mt","margin","Text","Link","href","isExternal","ml","orientation","fontWeight","style","background","WebkitBackgroundClip","WebkitTextFillColor","FavoriteMovies","movieId","setMovieId","useHistory","useDisclosure","isOpen","onOpen","onClose","useContext","useEffect","collection","get","then","movies","console","log","maxWidth","marginTop","display","flexWrap","map","movie","key","id","movieTitle","movieImage","undefined","movieReleaseDate","Date","getFullYear","movieRating","MovieDetails","movieDetails","setMovieDetails","movieCredits","setMovieCredits","isFave","setisFave","iswatchListed","setisWatchListed","forEach","axios","res","data","err","cast","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","castMember","index","cast_id","character","profile_path","person_id","Grid","templateColumns","columnGap","to","fontStyle","Modal","preserveScrollBarGap","Stack","overview","runtime","vote_average","status","release_date","toLocaleDateString","budget","format","revenue","rowGap","tagline","Button","variant","width","mr","doc","delete","i","length","add","poster_path","favoriteMovieIds","setFavoriteMovieIds","movieIdArray","push","movieBoxes","original_title","includes","Search","history","inputEl","useRef","results","onSubmit","e","preventDefault","current","type","ref","placeholder","NavBar","px","py","zIndex","isInline","as","RouterLink","Heading","fontFamily","Searchbar","Switch","marginRight","textDecoration","Filter","genreOption","yearOption","selectEl","page","selectStyles","height","overflow","genre","mx","my","Select","Homepage","onScroll","scrollTop","window","scrollY","addEventListener","removeEventListener","marginLeft","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","container","Spinner","transform","thickness","speed","emptyColor","go","overflowY","paddingY","pb","wrap","overflowX","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","myRef","createRef","biography","FilterPage","SearchPage","marginY","WatchList","WatchListpage","App","exact","path","customTheme","theme","colors","primaryBackground","cardBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.e7c61b9e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Localbase from \"localbase\";\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [searchQuery, setSearchQuery] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n  const [navShadow, setNavShadow] = useState(false);\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\n  const [filterdResults, setFilteredResults] = useState([]); // holds filtered movie results\n\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  //Create a LOCAL DATABASE forfavorite movies using localbase imported.\n  let db = new Localbase(\"db\");\n  const [allFavMovies, setAllFavMovies] = useState([]);\n\n  //Create a LOCAL DATABASE for Watchlist movies using localbase imported.\n  let db2 = new Localbase(\"db2\");\n const [allWatchListMovies, setallWatchListMovies] = useState([]);\n \n\n  return (\n    <Context.Provider\n      value={{\n        searchQuery,\n        setSearchQuery,\n        setSearchResults,\n\n        searchResults,\n        homePageResults,\n        setHomePageResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        db,\n        allFavMovies,\n        setAllFavMovies,\n        db2,\n        allWatchListMovies,\n        setallWatchListMovies,\n        setDefaultMovies,\n        navShadow,\n        setNavShadow,\n        defaultMovies,\n        filterdResults,\n        setFilteredResults\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image, PseudoBox, Icon } from \"@chakra-ui/core\";\nimport { FaHeart } from \"react-icons/fa\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick, year, rating, isFavorite } = props;\n\n  return (\n    <PseudoBox\n      onClick={() => onClick()}\n      bg=\"cardBackground\"\n      w=\"13vw\"\n      minW=\"175px\"\n      m={4}\n      color=\"primaryText\"\n      cursor=\"pointer\"\n      borderWidth=\"1px\"\n      borderColor=\"primaryBorder\"\n      rounded=\"lg\"\n      fontSize=\"0.8em\"\n      p=\"5px\"\n      opacity=\"0.75\"\n      _hover={{ borderColor: \"#666\", opacity: \"1\" }}\n      position=\"relative\"\n    >\n      {rating !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"8px\"\n          right=\"8px\"\n          backgroundColor=\"rgb(0,0,0,0.6)\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          <Box d=\"inline\">{rating}</Box>\n          <Icon\n            name=\"star\"\n            paddingLeft=\"2px\"\n            paddingBottom=\"3px\"\n            color=\"#ffff00\"\n          />\n        </Box>\n      )}\n\n      {isFavorite !== null && (\n        <Box\n          position=\"absolute\"\n          top=\"4px\"\n          left=\"5px\"\n          p=\"0.5em\"\n          lineHeight=\"1em\"\n          borderRadius=\"1em\"\n          h=\"2em\"\n          color=\"primaryText\"\n        >\n          {isFavorite && <FaHeart size=\"20px\" color=\"#ff0000\" />}\n        </Box>\n      )}\n\n      <Image rounded=\"lg\" src={imageSrc} objectFit=\"cover\" />\n      <Box m=\"5px\" textAlign=\"center\" fontSize=\"1.1em\">\n        {`${title} ${year !== null ? `(${year})` : \"\"}`}\n      </Box>\n    </PseudoBox>\n  );\n}\n\nexport default Movieboxes;\n","import React from \"react\";\nimport { Link as Links } from \"react-router-dom\";\nimport { Link, Text, Stack, Divider, Flex, Image, Box } from \"@chakra-ui/core\";\nconst movieDB_logo =\n  \"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\";\n\nconst Footer = () => {\n  const textGradient = {\n    background: \"-webkit-linear-gradient(#90cea1, #01b4e4)\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: \"transparent\"\n  };\n  return (\n    <Box\n      className=\"footer-container\"\n      bg=\"primaryBackground\"\n      paddingTop=\"10px\"\n      boxShadow=\"0px -4px 4px 1px rgba(0,0,0,0.25)\"\n    >\n      <Divider />\n      <Flex\n        className=\"footer\"\n        justifyContent=\"space-around\"\n        flexDirection=\"row\"\n        paddingTop=\"8px\"\n        paddingBottom=\"10px\"\n      >\n        <Flex\n          className=\"githubs-container\"\n          justifyContent=\"space-around\"\n          mt=\"30px\"\n        >\n          <Flex color=\"#e5e5e5\" margin=\"0 4px\" className=\"footer-githubs\">\n            <Text className=\"copyright\" color=\"#F34C28\">\n              &copy; Copyright 2020{\" \"}\n            </Text>\n            <Link\n              className=\"names\"\n              href=\"https://github.com/dpajek\"\n              _hover={{ color: \"#49c3fd\" }}\n              isExternal\n              mt={-2}\n              ml={2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>\n              Pajek\n            </Link>\n            <Link\n              className=\"names\"\n              href=\"https://github.com/Eerian\"\n              _hover={{ color: \"#49c3fd\" }}\n              isExternal\n              mt={-2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>\n              Erion{\" \"}\n            </Link>\n            <Link\n              className=\"names\"\n              href=\"https://github.com/Rayhan1998\"\n              _hover={{ color: \"#49c3fd\" }}\n              isExternal\n              mt={-2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github footer-icons\"></i>\n              Rayhan\n            </Link>\n          </Flex>\n          <Divider mt=\"-4px\" orientation=\"vertical\" />\n          <Flex className=\"project-repo\">\n            <Link\n              color=\"#fff\"\n              w=\"100%\"\n              ml=\"20px\"\n              _hover={{ color: \"#49c3fd\" }}\n              href=\"https://github.com/chingu-voyages/v24-geckos-team-03\"\n              isExternal\n              mt={-2}\n            >\n              <i className=\"fa fa-fw fa-2x fa-inverse fa-github\"></i>\n              <span className=\"repo-name\">Project Repo</span>\n            </Link>\n          </Flex>\n        </Flex>\n\n        <Flex color=\"#fff\" className=\"footer-logo\" flexDirection=\"column\">\n          <Text\n            fontSize={[\"sm\", \"md\", \"lg\", \"xl\"]}\n            fontWeight=\"bold\"\n            style={textGradient}\n          >\n            Powered By\n          </Text>\n          <Image src={movieDB_logo} size=\"65px\" />\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport Footer from \"./Footer\";\n\nconst FavoriteMovies = () => {\n  const [movieId, setMovieId] = useState(null);\n  const history = useHistory();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const { db, allFavMovies, setAllFavMovies } = useContext(Context);\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then(movies => {\n        setAllFavMovies(movies);\n        console.log(db);\n      });\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const responsiveArrow = {\n    color: \"white\",\n\n    position: \"absolute\",\n    top: \"170px\",\n    left: \"70px\",\n    cursor: \"pointer\"\n  };\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allFavMovies.map(movie => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n\nexport default FavoriteMovies;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport FavoriteMovies from './FavoriteMovies';\nimport Movieboxes from './Movieboxes';\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl, db, db2} = useContext(\n    Context\n  );\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  const {allFavMovies, setAllFavMovies } = useContext(Context);\n  const {allWatchListMovies, setallWatchListMovies} = useContext(Context)\n\n\n//create a handler for \"add to favorites\" button on the Modal.\nconst handleAddToFavorites = () => {\n  //Check for duplicate entries on the database before adding a movie.\n  for (let i = 0; i < allFavMovies.length; i++) {\n    if (allFavMovies[i].id === movieDetails.id) {\n      console.log('movie exists')\n      return null;\n      }\n    }\n\n  //add image and title of movies clicked to the DB\n  db.collection('favoriteMovies').add({\n    id: movieDetails.id,\n    movieImage: ImageUrl + movieDetails.poster_path,\n    movieTitle: movieDetails.title,\n    movieReleaseDate: movieDetails.release_date,\n    movieRating: movieDetails.vote_average,\n  })\n  .then(() => {\n    db.collection(\"favoriteMovies\")\n    .get()\n    .then(movies => {\n      setAllFavMovies(movies);\n    });\n  });\n  \n}\n//create a handler for RemoveFromFavorites button on the Modal\nconst handleRemoveFromFavorites = () => {\n  db.collection('favoriteMovies').doc({id : id}).delete()\n  //update favorite list\n  .then(() => {\n    db.collection(\"favoriteMovies\")\n    .get()\n    .then(movies => {\n      setAllFavMovies(movies);\n    });\n  });\n}\n\n\n//create a handler for \"add to watch list\" button on the Modal.\nconst handleAddToWatchList = () => {\n  //Check for duplicate entries on the database before adding a movie.\n  for (let i = 0; i < allWatchListMovies.length; i++) {\n    if (allWatchListMovies[i].id === movieDetails.id) {\n      console.log('movie exists')\n      return null;\n      }\n    }\n\n  //add image and title of movies clicked to the DB\n  db2.collection('watchListMovies').add({\n    id: movieDetails.id,\n    movieImage: ImageUrl + movieDetails.poster_path,\n    movieTitle: movieDetails.title,\n    movieReleaseDate: movieDetails.release_date,\n    movieRating: movieDetails.vote_average,\n  })\n    .then(() => {\n      db2.collection(\"watchListMovies\")\n      .get()\n      .then(movies => {\n        setallWatchListMovies(movies);\n  });\n});\n\n}\n\n//Create a handler to remove movies from watchlist\nconst handleRemoveFromWatchList = () => {\n    db2.collection('watchListMovies').doc({id : id}).delete()\n    //update watchlist\n    .then(() => {\n      db2.collection(\"watchListMovies\")\n      .get()\n      .then(movies => {\n        setallWatchListMovies(movies);\n      });\n    });\n}\n\n\n\nconst [isFave, setisFave] = useState(false);\nconst [iswatchListed, setisWatchListed] = useState(false);\n//check if a movie is favorited;\n  useEffect(() => {\n    setisFave(false);\n    allFavMovies.forEach(movie => {\n      if (movie.id === id) {\n        setisFave(true);\n      }\n    })\n  },[allFavMovies, id]);\n//check is a movie is watchlisted\n  useEffect(() => {\n    setisWatchListed(false);\n    allWatchListMovies.forEach(movie => {\n      if (movie.id === id) {\n        setisWatchListed(true);\n      }\n    })\n  },[allWatchListMovies, id]);\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id,\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Link to={`/actor/${person_id}`}>\n                <Image\n                  cursor=\"pointer\"\n                  rounded=\"lg\"\n                  src={ImageUrl + profile_path}\n                  h=\"80px\"\n                  objectFit=\"cover\"\n                />\n              </Link>\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n//Check if movie is favorited \nconst [isFaved, setisFaved] = useState();\n// const checkFavorited = () => {\n//     let favorited = \"\";\n//     for (let i = 0; i < allFavMovies.length; i++) {\n//       if (allFavMovies[i].id === movieDetails.id) {\n//         setisFaved(movieDetails.id)\n//         console.log(isFaved);\n//       }\n//   }\n// }\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Rating: {movieDetails.vote_average}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>  \n              {isFave\n              ? <Button\n                  variant=\"outline\"\n                  width=\"350px\"\n                  borderWidth=\"2px\"\n                  backgroundColor=\"#db291d\"\n                  color=\"white\"\n                  _hover\n                  mr={3}\n                  onClick={handleRemoveFromFavorites}\n                  >Remove From Favorites\n                </Button>\n              : <Button \n                  onClick={handleAddToFavorites}\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={3}\n                  \n                  >Add To Favorites\n                </Button>}\n              <Link to={`/moviedetailspage/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                </Link>\n                <Button\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={1}\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n              {iswatchListed\n              ? <Button\n                  variant=\"outline\"\n                  borderWidth=\"2px\"\n                  backgroundColor=\"#db291d\"\n                  color=\"white\"\n                  _hover\n                  mr={6}\n                  ml={6}\n                  onClick={handleRemoveFromWatchList}\n                  >Remove From WatchList\n                </Button>\n              : <Button \n                  onClick={handleAddToWatchList}\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={6}\n                  ml={6}\n                  \n                  >Add To WatchList\n                </Button>}\n              <ModalFooter>\n\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\nexport default MovieDetails;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid(props) {\n  const { searchResults } = props;\n\n  const { ImageUrl, allFavMovies, setAllFavMovies, db } = useContext(Context);\n\n  // State variables for moviedetails modal popup\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [favoriteMovieIds, setFavoriteMovieIds] = useState([]);\n\n  //Get data from the DB and store all movie ids to an array\n  useEffect(() => {\n    db.collection(\"favoriteMovies\")\n      .get()\n      .then(movies => {\n        setAllFavMovies(movies);\n      });\n    console.log(\"getFavMovies UseEffect\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //Get data from the DB and store all movie ids to an array\n  useEffect(() => {\n    if (allFavMovies.length > 0) {\n      const movieIdArray = [];\n      allFavMovies.forEach(movie => {\n        movieIdArray.push(movie.id);\n      });\n      setFavoriteMovieIds(movieIdArray);\n    }\n  }, [allFavMovies]);\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    marginTop: \"15px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        year={new Date(movie.release_date).getFullYear()}\n        rating={movie.vote_average}\n        isFavorite={favoriteMovieIds.includes(movie.id)}\n        onClick={() => onHandleMovieClick(movie.id)}\n      />\n    );\n  });\n\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n\n    onOpen();\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nfunction Search() {\n  const history = useHistory();\n\n  const {\n    setSearchResults,\n    searchQuery,\n    setSearchQuery,\n\n    setIsSearch,\n    APIKEY\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n\n    setSearchQuery(inputEl.current.value);\n\n    setIsSearch(true);\n\n    history.push(\"/searchPage\"); // Routes to search page on submit\n    console.log(searchQuery);\n  }\n\n  useEffect(() => {\n    if (searchQuery.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${searchQuery}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [searchQuery]);\n\n  return (\n    <div className=\"search\">\n      <form onSubmit={searchSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          ref={inputEl}\n          placeholder=\"Search movie here!\"\n        ></input>\n        <button type=\"submit\" name=\"button\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from \"./Searchbar\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport {\n  Box,\n  Image,\n  Link,\n  Switch,\n  Heading,\n  Stack,\n  Flex\n} from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const { setDefaultMovies, navShadow, searchQuery } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n  };\n\n  return (\n    <Box\n      className=\"nav-bar\"\n      style={{ top: 0 }}\n      position=\"fixed\"\n      bg=\"primaryBackground\"\n      w=\"100%\"\n      px={5}\n      py={5}\n      paddingBottom=\"10px\"\n      zIndex=\"1000\"\n      boxShadow={\n        navShadow\n          ? \"0px 6px 6px 3px rgba(0, 0, 0, 0.25)\"\n          : \"0px 6px 6px 3px rgba(0, 0, 0, 0)\"\n      }\n    >\n      <Flex isInline justifyContent=\"space-between\" className=\"top-nav\">\n        <Link as={RouterLink} to=\"/\">\n          <Flex isInline onClick={clicked} className=\"logo\">\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={46}\n            />\n            <Heading\n              as=\"h3\"\n              size=\"xl\"\n              fontWeight=\"200\"\n              color=\"#49c3fd\"\n              fontFamily=\"Gugi, cursive\"\n              className=\"logo-name\"\n            >\n              DAILY FLIX\n            </Heading>\n          </Flex>\n        </Link>\n        <Flex isInline className=\"search-bar-section\">\n          <Searchbar />\n          <Switch size=\"sm\" className=\"switch-button\" />\n        </Flex>\n      </Flex>\n      <Flex justifyContent=\"flex-end\" marginRight=\"198px\" className=\"nav-lists\">\n        {/* Use RouterLink as written in ChakraUI docs */}\n        <Link\n          textDecoration=\"none\"\n          _hover={{ color: \"#49c3fd\" }}\n          className=\"navbar-links\"\n          as={RouterLink}\n          to=\"/favorites\"\n          px={2}\n          color=\"#fff\"\n        >\n          My Favorites\n        </Link>\n        <Link\n          _hover={{ color: \"#49c3fd\" }}\n          className=\"navbar-links\"\n          as={RouterLink}\n          to=\"/watchList\"\n          px={2}\n          color=\"#fff\"\n        >\n          Watch List\n        </Link>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport \"./filter.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../Context\";\nimport { Button, Select, Box, Input } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Filter(props) {\n  const genreOption = useRef(null);\n  const yearOption = useRef(null);\n\n  const history = useHistory();\n\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const [page, setPage] = useState(1);\n  const {\n    APIKEY,\n    setDefaultMovies,\n    filterdResults,\n    setFilteredResults\n  } = useContext(Context);\n\n  function formSubmit(e) {\n    console.log(\"hello\");\n    e.preventDefault();\n\n    const genre = inputEl.current.value;\n    const year = selectEl.current.value;\n\n    if (genre === \"Genre\" && year === \"Year\") {\n      setDefaultMovies(true);\n      history.push(\"/\");\n    }\n\n    //   Checks wheither if correct selections are submitted\n\n    if (genre !== \"Genre\" && year === \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&with_genres=${genre}&page=${page}`\n          )\n          .then(res => {\n            setFilteredResults(res.data.results);\n            console.log(res.data.results);\n            setDefaultMovies(false);\n\n            history.push(\"/filterPage\");\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(year);\n    if (year !== \"Year\" && genre === \"Genre\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&page=${page}`\n          )\n          .then(res => {\n            setFilteredResults(res.data.results);\n            console.log(res.data.results);\n            setDefaultMovies(false);\n\n            history.push(\"/filterPage\");\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(year);\n    console.log(genre);\n    if (year !== \"Year\" && genre !== \"Genre\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}&page=${page}`\n          )\n          .then(res => {\n            setFilteredResults(res.data.results);\n            console.log(res.data.results);\n            setDefaultMovies(false);\n            //setSubmit(false);\n            history.push(\"/filterPage\");\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  const filterbar = {\n    marginTop: \"100px\",\n    textAlign: \"center\"\n  };\n  const filterButton = {\n    height: \"2em\",\n    borderWidth: \"2px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"0.9em\",\n    cursor: \"pointer\",\n    borderRadius: \"1em\"\n  };\n\n  const selectStyles = {\n    position: \"relative\",\n    width: \"10em\",\n    height: \"2.2em\",\n    lineHeight: \"2em\",\n    background: \"#444\", //\"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \"1em\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    paddingLeft: \"15px\",\n    fontSize: \"0.8em\"\n  };\n\n  console.log(page);\n\n  return (\n    <div style={filterbar}>\n      <form\n        className=\"form\"\n        onSubmit={formSubmit}\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n      >\n        <Box d=\"inline\" color=\"primaryText\" fontSize=\"1em\" mx=\"7px\" my=\"5px\">\n          Find Movies By\n        </Box>\n        <Select ref={inputEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={genreOption}>Genre</option>\n\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </Select>\n        <Select ref={selectEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\n          <option ref={yearOption}>Year</option>\n\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2014</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </Select>\n\n        <Button\n          backgroundColor=\"primaryBackground\"\n          borderColor=\"logoText\"\n          color=\"logoText\"\n          style={filterButton}\n          _hover={{\n            backgroundColor: \"logoText\",\n            color: \"primaryBackground\",\n            fontWeight: \"900\"\n          }}\n          type=\"submit\"\n          mx=\"7px\"\n          my=\"7px\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\nimport { Context } from \"../Context\";\nimport Footer from \"./../components/Footer\";\n\nfunction Homepage() {\n  const {\n    setNavShadow,\n    navShadow,\n    homePageResults,\n    setHomePageResults,\n    defaultMovies,\n    setDefaultMovies,\n    APIKEY\n  } = useContext(Context);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navShadow]);\n  // need navShadow as a dependency, or the value of navShadow won't change between onScroll events (it will always be false)\n\n  function onScroll() {\n    const scrollTop = window.scrollY;\n\n    if (!navShadow && scrollTop > 0) {\n      setNavShadow(true);\n    } else if (navShadow && scrollTop === 0) {\n      setNavShadow(false);\n    }\n  }\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies, APIKEY, setHomePageResults, setDefaultMovies]);\n\n  return (\n    <Box bg=\"primaryBackground\">\n      {\" \"}\n      &nbsp;\n      <Filter />\n      <Heading\n        as=\"h3\"\n        size=\"lg\"\n        marginTop=\"10px\"\n        marginLeft=\"5%\"\n        color=\"primaryText\"\n      >\n        {defaultMovies ? \"Popular Movies\" : null}\n      </Heading>\n      <Grid searchResults={homePageResults} />\n      <NavBar />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React, { useContext } from \"react\";\nimport { Box} from \"@chakra-ui/core\";\nimport NavBar from \"../components/NavBar\";\nimport FavoriteMovies from './../components/FavoriteMovies';\nimport Footer from './../components/Footer';\n\n\n\nconst FavoriteMoviespage = () => {\n\n// const headerStyles = {\n    // position: \"absolute\",\n    // top: \"100px\",\n    // color: \"red\",\n    // left: \"150px\",\n    // fontSize: \"25px\",\n    // fontWeight: \"400\"\n//   };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n      <Box>\n        <h1 className=\"page-heading favorites-list\">Favorite Movies</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <FavoriteMovies />\n      </Box>\n      <Footer />\n    </Box>\n  \n  );    \n    \n}\n\nexport default FavoriteMoviespage;","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"./../../Context\";\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MovieDetailsBody.css\";\n\nfunction MovieDetailsBody(props) {\n  const history = useHistory();\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\n  const [page, setPage] = useState(1);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n\n  setTimeout(() => {\n    setIsPageLoaded(true);\n  }, 2500);\n\n  const goBack = () => {\n    history.go(-1);\n    setDefaultMovies(true);\n  };\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast.map((castMember, index) => {\n      const {\n        cast_id,\n        character,\n        name,\n        profile_path,\n        id: person_id\n      } = castMember;\n\n      return (\n        <Box\n          key={cast_id}\n          textAlign=\"center\"\n          marginRight=\"60px\"\n          marginLeft=\"60px\"\n        >\n          <Link to={`/actor/${person_id}`}>\n            <Image\n              m=\"0 auto\"\n              cursor=\"pointer\"\n              rounded=\"lg\"\n              src={ImageUrl + profile_path}\n              objectFit=\"cover\"\n              width=\"100px\"\n              maxWidth=\"none\"\n            />\n          </Link>\n          <Box p=\"7px\">\n            {name} <br />{\" \"}\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n              {character}\n            </Text>\n          </Box>\n        </Box>\n      );\n    });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map(trailer => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            title={trailer.original_title}\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n            className=\"movieTrailerBoxes\"\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n  // Carousel settiings\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3\n  };\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then(res => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then(res => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then(res => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, [APIKEY, movieId]);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"scroll\"\n  };\n\n  const imageContainer = {\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"top\"\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\"\n  };\n\n  const pageSpinner = {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n\n    transform: \"translate(-50%, -50%)\"\n  };\n  return (\n    <>\n      <Box>\n        {isPageLoaded ? null : (\n          <Box className=\"loadingScreen\">\n            <Spinner\n              style={pageSpinner}\n              thickness=\"3px\"\n              speed=\"0.7s\"\n              emptyColor=\"gray.200\"\n              color=\"black\"\n              size=\"100px\"\n            />\n          </Box>\n        )}\n      </Box>\n      <Box\n        style={imageContainer}\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }}\n        >\n          <Box style={container}>\n            <Heading\n              position=\"absolute\"\n              top=\"50%\"\n              color=\"white\"\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\n            >\n              {movieData.original_title}\n            </Heading>\n\n            <span\n              className={\n                isPageLoaded ? `responsiveArrow` : `responsiveArrow removeClick`\n              }\n              onClick={goBack}\n            >\n              &#8592;\n            </span>\n          </Box>\n        </Box>\n      </Box>\n      <Box style={detailBody}>\n        <Box style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\n              {castList}\n            </Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailers.length > 0\n                ? movieTrailersboxes\n                : \"No Trailers Available\"}\n            </Flex>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\n\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Image, Grid as ChakraGrid, Heading } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction SearchByActor() {\n  const { APIKEY, ImageUrl, setNavShadow, navShadow } = useContext(Context);\n\n  const { personId } = useParams();\n\n  const [personDetails, setPersonDetails] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\n\n  function onScroll() {\n    const scrollTop = myRef.current.scrollTop;\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\n  }\n\n  useEffect(() => {\n    if (personId !== null) {\n      try {\n        axios\n          .get(\n            // retrieve actor's name based on personId\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setPersonDetails(res.data);\n          });\n\n        axios\n          .get(\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n          )\n          .then((res) => {\n            setSearchResults(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, personId, setSearchResults]);\n\n  return (\n    <Box\n      ref={myRef}\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n      onScroll={onScroll}\n    >\n      <NavBar />\n\n      {personDetails !== null && (\n        <>\n          <Heading\n            as=\"h3\"\n            size=\"lg\"\n            marginTop=\"100px\"\n            marginLeft=\"5%\"\n            color=\"primaryText\"\n          >\n            {personDetails.name}\n          </Heading>\n          <ChakraGrid\n            mx=\"125px\"\n            my=\"50px\"\n            borderWidth=\"1px\"\n            borderColor=\"primaryBorder\"\n            rounded=\"lg\"\n            templateColumns=\"auto auto\"\n          >\n            <Image\n              m=\"10px\"\n              src={ImageUrl + personDetails.profile_path}\n              h=\"220px\"\n              objectFit=\"cover\"\n              rounded=\"lg\"\n            />\n            <Box m=\"10px\" color=\"primaryText\" fontSize=\"0.9em\">\n              Actor Biography: {personDetails.biography}\n            </Box>\n          </ChakraGrid>\n\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default SearchByActor;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Box, Heading } from \"@chakra-ui/core\";\nimport axios from \"axios\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\nimport Footer from \"./../components/Footer\";\n\nimport { Context } from \"../Context\";\n\nfunction FilterPage() {\n  const { filterdResults } = useContext(Context);\n  console.log(filterdResults);\n\n  return (\n    <>\n      <Box\n        bg=\"primaryBackground\"\n        h=\"100vh\"\n        w=\"100vw\"\n        style={{\n          overflow: \"scroll\"\n        }}\n      >\n        <NavBar />\n        <Filter />\n        <Heading\n          as=\"h3\"\n          size=\"lg\"\n          marginTop=\"10px\"\n          marginLeft=\"5%\"\n          color=\"primaryText\"\n        >\n          Filter Results\n        </Heading>\n        <Grid searchResults={filterdResults} />\n      </Box>\n    </>\n  );\n}\n\nexport default FilterPage;\n","import React, { useContext } from \"react\";\nimport Grid from \"../components/Grid\";\nimport Navbar from \"../components/NavBar\";\nimport { Heading, Box } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\nimport Footer from './../components/Footer';\n\nfunction SearchPage() {\n  const { searchQuery, searchResults } = useContext(Context);\n  console.log(searchQuery);\n\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n      <Navbar />\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\n        {searchQuery.length > 0\n          ? `Search Results for ${searchQuery}`\n          : `Search For Movie`}\n      </Heading>\n\n      <Grid searchResults={searchResults} />\n      <Footer />\n    </Box>\n  );\n}\n\nexport default SearchPage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"../components/Movieboxes\";\nimport MovieDetails from \"./MovieDetails\";\nimport { useDisclosure } from \"@chakra-ui/core\";\n\nconst WatchList = () => {\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n  }\n\n  const { db2, allWatchListMovies, setallWatchListMovies } = useContext(\n    Context\n  );\n\n  //Get data from the DB and store all favotired movies to an array\n  useEffect(() => {\n    db2\n      .collection(\"watchListMovies\")\n      .get()\n      .then(movies => {\n        setallWatchListMovies(movies);\n      });\n  }, []);\n\n  //styles for the grid\n  const gridStyles = {\n    maxWidth: \"1200px\",\n    marginTop: \"10%\",\n    margin: \"0 auto\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {allWatchListMovies.map(movie => {\n          return (\n            <Movieboxes\n              key={movie.id}\n              title={movie.movieTitle}\n              imageSrc={movie.movieImage}\n              year={\n                movie.movieReleaseDate !== undefined\n                  ? new Date(movie.movieReleaseDate).getFullYear()\n                  : null\n              }\n              rating={\n                movie.movieRating !== undefined ? movie.movieRating : null\n              }\n              onClick={() => onHandleMovieClick(movie.id)}\n            />\n          );\n        })}\n      </div>\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n};\n\nexport default WatchList;\n","import React, { useContext } from \"react\";\nimport { Box} from \"@chakra-ui/core\";\nimport NavBar from \"../components/NavBar\";\nimport WatchList from './../components/WatchList';\nimport Footer from './../components/Footer';\n\nconst WatchListpage = () => {\n\n// const headerStyles = {\n    // position: \"absolute\",\n    // top: \"100px\",\n    // color: \"red\",\n    // left: \"150px\",\n    // fontSize: \"25px\",\n    // fontWeight: \"400\"\n//   };\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n      <Box>\n        <h1 className=\"page-heading watch-list\">Movies for later</h1>\n      </Box>\n      <Box className=\"movie-grid\">\n        <WatchList />\n      </Box>\n      <Footer />\n    </Box>\n  \n  );    \n    \n}\n\nexport default WatchListpage;","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport { BrowserRouter, Switch, Route, HashRouter } from \"react-router-dom\";\nimport FavoriteMoviespage from \"./pages/FavoriteMoviespage\";\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\nimport SearchByActor from \"./pages/SearchByActor\";\nimport FilterPage from \"./pages/FilterPage\";\n\nimport SearchPage from \"./pages/SearchPage\";\nimport WatchListpage from \"./pages/WatchListpage\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route path=\"/favorites\">\n            <FavoriteMoviespage />\n          </Route>\n          <Route path=\"/watchList\">\n            <WatchListpage />\n          </Route>\n          <Route path=\"/moviedetailspage/:movieId\">\n            <MovieDetailsPage />\n          </Route>\n          <Route path=\"/actor/:personId\">\n            <SearchByActor />\n          </Route>\n          <Route path=\"/searchPage\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/filterPage\">\n            <FilterPage />\n          </Route>\n          <Route path=\"/\">\n            <Homepage />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      cardBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}