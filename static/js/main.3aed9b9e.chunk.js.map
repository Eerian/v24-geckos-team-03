{"version":3,"sources":["Context.js","components/Movieboxes.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetails.js","pages/SearchByActor.js","pages/SearchPage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","homePageResults","setHomePageResults","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","Box","bg","w","m","color","fontSize","cursor","Image","src","h","objectFit","MovieDetails","useContext","isOpen","onClose","id","movieDetails","setMovieDetails","movieCredits","setMovieCredits","useEffect","axios","get","then","res","data","err","console","log","cast","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","map","castMember","index","cast_id","character","name","profile_path","person_id","key","Grid","p","borderWidth","borderColor","rounded","templateColumns","columnGap","to","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","popularity","status","Date","release_date","toLocaleDateString","budget","format","revenue","rowGap","textAlign","tagline","Button","backgroundColor","_hover","mr","movieId","setMovieId","useDisclosure","onOpen","movieBoxes","movie","original_title","poster_path","className","maxWidth","margin","marginTop","display","flexWrap","justifyContent","length","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","push","type","ref","borderRadius","fontWeight","appearance","WebkitBoxAlign","alignItems","WebkitBoxPack","transition","userSelect","position","whiteSpace","verticalAlign","lineHeight","outline","height","minWidth","paddingLeft","paddingRight","marginLeft","marginRight","NavBar","top","px","py","isInline","size","Heading","as","Searchbar","Switch","ml","float","Link","Filter","genre","setGenre","year","setYear","genreOption","yearOption","submit","setSubmit","selectEl","selectStyles","width","background","overflow","padding","disabled","Select","border","textDecoration","Homepage","left","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","container","Spinner","transform","thickness","speed","emptyColor","goBack","overflowY","paddingY","pb","Flex","wrap","overflowX","paddingTop","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","biography","SearchPage","App","path","customTheme","theme","colors","primaryBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.3aed9b9e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider(props) {\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\n\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\n  const [search, setSearch] = useState(\"\"); // save search input\n  const [searchResults, setSearchResults] = useState([]); // saves search results\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\n\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\n\n  return (\n    <Context.Provider\n      value={{\n        setSearch,\n        setSearchResults,\n        search,\n        searchResults,\n        homePageResults,\n        setHomePageResults,\n        ImageUrl,\n        isSearch,\n        setIsSearch,\n        APIKEY,\n        setDefaultMovies,\n        defaultMovies\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React from \"react\";\nimport { Box, Image } from \"@chakra-ui/core\";\n\nfunction Movieboxes(props) {\n  const { imageSrc, title, onClick } = props;\n\n  return (\n    <Box\n      onClick={() => onClick()}\n      bg=\"primaryBackground\"\n      w=\"170px\"\n      m={4}\n      color=\"primaryText\"\n      fontSize={\"16px\"}\n      cursor=\"pointer\"\n    >\n      <Image src={imageSrc} w=\"170px\" h={\"220px\"} objectFit=\"cover\" />\n\n      <h1>{title}</h1>\n    </Box>\n  );\n}\n\nexport default Movieboxes;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Stack,\n  Box,\n  Grid,\n  Image,\n  Text,\n} from \"@chakra-ui/core\";\nimport axios from \"axios\";\n\nfunction MovieDetails(props) {\n  const { APIKEY, ImageUrl } = useContext(\n    Context\n  );\n  const { isOpen, onClose, id } = props;\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  useEffect(() => {\n    if (id !== null) {\n      setMovieDetails(null); // prevents details from previous modal from showing up\n      setMovieCredits(null);\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieDetails(res.data);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n      try {\n        axios\n          .get(\n            // retrieve credits object based on movie id\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setMovieCredits(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setMovieDetails(null);\n      setMovieCredits(null);\n    }\n  }, [id, APIKEY]);\n\n  // Create our number formatter for USD currency\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  let castList = [];\n\n  if (movieCredits !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCredits\n      .slice(0, numberOfActorsDisplayed)\n      .map((castMember, index) => {\n        const {\n          cast_id,\n          character,\n          name,\n          profile_path,\n          id: person_id,\n        } = castMember;\n\n        return (\n          <Box key={cast_id}>\n            <Grid\n              p=\"3px\"\n              borderWidth=\"1px\"\n              borderColor=\"primaryBorder\"\n              rounded=\"lg\"\n              templateColumns=\"30% 70%\"\n              columnGap=\"3px\"\n            >\n              <Link to={`/actor/${person_id}`}>\n                <Image\n                  cursor=\"pointer\"\n                  rounded=\"lg\"\n                  src={ImageUrl + profile_path}\n                  h=\"80px\"\n                  objectFit=\"cover\"\n                />\n              </Link>\n              <Box p=\"7px\">\n                {name} <br />{\" \"}\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n                  {character}\n                </Text>\n              </Box>\n            </Grid>\n          </Box>\n        );\n      });\n  }\n\n  return (\n    <>\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        {movieDetails !== null &&\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\n              <ModalHeader>{movieDetails.title}</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <Stack>\n                  <Box>Summary</Box>\n                  <Box\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    fontSize=\"0.9em\"\n                  >\n                    {movieDetails.overview}\n                  </Box>\n                  <Box mt=\"15px\">Details</Box>\n                  <Grid\n                    p=\"10px\"\n                    borderWidth=\"1px\"\n                    borderColor=\"primaryBorder\"\n                    rounded=\"lg\"\n                    templateColumns=\"50% 50%\"\n                    columnGap=\"10px\"\n                    fontSize=\"0.8em\"\n                  >\n                    <Box>\n                      Runtime:{\" \"}\n                      {movieDetails.runtime === 0\n                        ? \"?\"\n                        : `${movieDetails.runtime} minutes`}\n                    </Box>\n                    <Box>Popularity: {movieDetails.popularity}</Box>\n                    <Box>Status: {movieDetails.status}</Box>\n                    <Box>\n                      Release Date:{\" \"}\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\n                    </Box>\n                    {movieDetails.budget !== 0 && (\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\n                    )}\n                    {movieDetails.revenue !== 0 && (\n                      <Box>\n                        Revenue: {formatter.format(movieDetails.revenue)}\n                      </Box>\n                    )}\n                  </Grid>\n                  <Box mt=\"15px\">Cast</Box>\n\n                  {movieCredits !== null && (\n                    <Grid\n                      templateColumns=\"50% 50%\"\n                      columnGap=\"10px\"\n                      rowGap=\"10px\"\n                      fontSize=\"0.7em\"\n                    >\n                      {castList}\n                    </Grid>\n                  )}\n\n                  <Box\n                    p=\"10px\"\n                    textAlign=\"center\"\n                    color=\"logoText\"\n                    fontStyle=\"italic\"\n                    fontSize=\"1.1em\"\n                  >\n                    {movieDetails.tagline}\n                  </Box>\n                </Stack>\n              </ModalBody>\n\n              <ModalFooter>\n                <Link to={`/moviedetailspage/${id}`}>\n                  {\" \"}\n                  <Button\n                    borderColor=\"logoText\"\n                    borderWidth=\"3px\"\n                    backgroundColor=\"primaryBackground\"\n                    color=\"logoText\"\n                    _hover\n                    mr={3}\n                    onClick={onClose}\n                  >\n                    More Details\n                  </Button>\n                </Link>\n                <Button\n                  borderColor=\"logoText\"\n                  borderWidth=\"3px\"\n                  backgroundColor=\"primaryBackground\"\n                  color=\"logoText\"\n                  _hover\n                  mr={3}\n                  onClick={onClose}\n                >\n                  Close\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          )}\n      </Modal>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nimport Movieboxes from \"./Movieboxes\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction Grid(props) {\n  const { searchResults } = props;\n\n  const { ImageUrl } = useContext(Context);\n\n  const [movieId, setMovieId] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const gridStyles = {\n    maxWidth: \"1200px\",\n\n    margin: \"0 auto\",\n\n    marginTop: \"5%\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\"\n  };\n\n  const movieBoxes = searchResults.map(function(movie) {\n    return (\n      <Movieboxes\n        key={movie.id}\n        title={movie.original_title}\n        imageSrc={ImageUrl + movie.poster_path}\n        onClick={() => onHandleMovieClick(movie.id)}\n      />\n    );\n  });\n\n  function onHandleMovieClick(id) {\n    setMovieId(id);\n    onOpen();\n    console.log(id);\n  }\n\n  return (\n    <>\n      <div className=\"container\" style={gridStyles}>\n        {searchResults.length > 0 ? movieBoxes : null}\n      </div>\n\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\n    </>\n  );\n}\n\nexport default Grid;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { Context } from \"../Context\";\nimport axios from \"axios\";\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Search() {\n  const history = useHistory();\n  console.log(history);\n  const {\n    setSearch,\n    setSearchResults,\n    search,\n    searchResults,\n    setIsSearch,\n    APIKEY,\n    setDefaultMovies\n  } = useContext(Context);\n\n  const inputEl = useRef(null);\n\n  function searchSubmit(e) {\n    e.preventDefault();\n    setSearch(inputEl.current.value);\n\n    setIsSearch(true);\n\n    history.push(\"/searchPage\"); // Routes to search page on submit\n  }\n\n  useEffect(() => {\n    if (search.length > 0) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\n          )\n          .then(res => {\n            setSearchResults(res.data.results);\n            setIsSearch(true);\n            setDefaultMovies(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(searchResults);\n  }, [search, setSearchResults, APIKEY, setIsSearch, setDefaultMovies]);\n\n  const buttonStyle = {\n    borderRadius: \"0.25rem\",\n    fontWeight: 600,\n    display: \"inline-flex\",\n    appearance: \"none\",\n    WebkitBoxAlign: \"center\",\n    alignItems: \"center\",\n    WebkitBoxPack: \"center\",\n    justifyContent: \"center\",\n    transition: \"all 250ms ease 0s\",\n    userSelect: \"none\",\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    lineHeight: 1.2,\n    outline: \"none\",\n    height: \"2em\",\n    minWidth: \"2.5rem\",\n    fontSize: \"1rem\",\n    paddingLeft: \"1rem\",\n    paddingRight: \"1rem\",\n    backgroundColor: \"rgb(237, 242, 247)\",\n    marginLeft: \"5px\",\n    marginRight: \"5px\"\n  };\n  return (\n    <div className=\"search-bar\">\n      <form onSubmit={searchSubmit}>\n        <input type=\"text\" ref={inputEl}></input>\n\n        <button style={buttonStyle}>\n          <Link to=\"/searchPage\">Search Movies</Link>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport Searchbar from \"./Searchbar\";\nimport { Link as Links } from \"react-router-dom\";\nimport { Context } from \"../Context\";\nimport { Box, Image, Link, Switch, Heading, Stack } from \"@chakra-ui/core\";\n\nconst NavBar = () => {\n  const {\n    setDefaultMovies,\n    defaultMovies,\n    setSearchResults,\n    search\n  } = useContext(Context);\n  const clicked = () => {\n    setDefaultMovies(true);\n  };\n\n  return (\n    <Box\n      className=\"nav-bar\"\n      style={{ top: 0 }}\n      bg=\"primaryBackground\"\n      w=\"100%\"\n      px={5}\n      py={2}\n    >\n      <Stack isInline justifyContent=\"space-between\">\n        {\" \"}\n        <Links to=\"/\">\n          {\" \"}\n          <Stack isInline onClick={clicked}>\n            <Image\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\n              size={30}\n            />{\" \"}\n            <Heading as=\"h3\" size=\"lg\" color=\"logoText\">\n              Daily Flix\n            </Heading>\n          </Stack>\n        </Links>\n        <Stack isInline>\n          <Searchbar />\n          <Switch size=\"sm\" ml={2} />\n        </Stack>\n      </Stack>\n\n      <Box float=\"right\" mr={10}>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          My Favorites\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watched\n        </Link>\n        <Link px={2} color=\"primaryText\" className=\"link\">\n          Watch List\n        </Link>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport \"./filter.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../Context\";\nimport { Heading, Button, Select } from \"@chakra-ui/core\";\n\nfunction Filter() {\n  const [genre, setGenre] = useState(\"Genre\");\n  const [year, setYear] = useState(\"Year\");\n  const genreOption = useRef(null);\n  const yearOption = useRef(null);\n  const [submit, setSubmit] = useState(false);\n  const inputEl = useRef(null);\n  const selectEl = useRef(null);\n  const {\n    APIKEY,\n    setDefaultMovies,\n    setSearch,\n    setHomePageResults\n  } = useContext(Context);\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setSubmit(true);\n    setGenre(inputEl.current.value);\n    setYear(selectEl.current.value);\n    genreOption.current.disabled = true;\n\n    yearOption.current.disabled = true;\n  }\n\n  useEffect(() => {\n    //   Checks wheither if correct selections are submitted\n    if (genre != \"Genre\" && year != \"Year\") {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(false);\n            setSubmit(false);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [submit]);\n\n  const filterbar = {\n    marginTop: \"250px\",\n    textAlign: \"center\"\n  };\n  const filterButton = {\n    border: \"none\",\n    color: \"black\",\n    padding: \"8px 32px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inlineBlock\",\n    fontSize: \"16px\",\n    margin: \"4px 2px\",\n    cursor: \"pointer\",\n    backgroundColor: \"#2c3e50\",\n    borderRadius: \"30px\",\n    outline: \"none\"\n  };\n\n  const selectStyles = {\n    marginRight: \"10px\",\n    position: \"relative\",\n\n    width: \"20em\",\n    height: \"3em\",\n    lineHeight: \"3\",\n    background: \"#2c3e50\",\n    overflow: \"hidden\",\n    borderRadius: \".25em\",\n    padding: \"0 .5em\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  };\n\n  return (\n    <div style={filterbar}>\n      <Heading color=\"white\">Find Movies By</Heading>\n      <form\n        className=\"form\"\n        onSubmit={formSubmit}\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n      >\n        <Select ref={inputEl} style={selectStyles} w=\"20em\">\n          <option ref={genreOption}>Genre</option>\n          <option value=\"28\">Action</option>\n\n          <option value=\"12\">Adventure</option>\n          <option value=\"16\">Animation</option>\n          <option value=\"35\">Comedy</option>\n          <option value=\"80\">Crime</option>\n          <option value=\"99\">Documentary</option>\n          <option value=\"18\">Drama</option>\n          <option value=\"14\">Fantasy</option>\n          <option value=\"36\">History</option>\n          <option value=\"10402\">Music</option>\n          <option value=\"9648\">Mystery</option>\n          <option value=\"10749\">Romance</option>\n\n          <option value=\"878\">Science Fiction</option>\n          <option value=\"10770\">Tv Movie</option>\n          <option value=\"53\">Thriller</option>\n          <option value=\"10752\">War</option>\n        </Select>\n\n        <Select ref={selectEl} style={selectStyles} w=\"20em\">\n          <option ref={yearOption}>Year</option>\n          <option>2020</option>\n          <option>2019</option>\n          <option>2018</option>\n          <option>2017</option>\n          <option>2016</option>\n          <option>2016</option>\n          <option>2015</option>\n          <option>2013</option>\n          <option>2012</option>\n          <option>2011</option>\n          <option>2010</option>\n          <option>2009</option>\n        </Select>\n\n        <button style={filterButton}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React, { useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Box } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\nimport Filter from \"../components/FilterBar/Filter\";\n\nimport { Context } from \"../Context\";\n\nfunction Homepage() {\n  const {\n    isSearch,\n    searchResults,\n    homePageResults,\n    setHomePageResults,\n    defaultMovies,\n    setDefaultMovies,\n    APIKEY\n  } = useContext(Context);\n\n  useEffect(() => {\n    if (defaultMovies === true) {\n      try {\n        axios\n          .get(\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\n          )\n          .then(res => {\n            setHomePageResults(res.data.results);\n            setDefaultMovies(true);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [defaultMovies]);\n\n  const headerStyles = {\n    position: \"absolute\",\n    top: \"100px\",\n    color: \"white\",\n    left: \"150px\",\n    fontSize: \"25px\",\n    fontWeight: \"100\"\n  };\n\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n      <h1 style={headerStyles}>{isSearch ? null : \"Popular Movies\"}</h1>\n      <NavBar />\n      <Filter />\n      <Grid searchResults={homePageResults} />\n    </Box>\n  );\n}\n\nexport default Homepage;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"./../../Context\";\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MovieDetailsBody.css\";\n\nfunction MovieDetailsBody(props) {\n  const history = useHistory();\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\n\n  const [movieData, setMovieData] = useState([]);\n  const [movieCast, setMovieCast] = useState([]);\n  const [movieTrailers, setMovieTrailers] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n\n  setTimeout(() => {\n    setIsPageLoaded(true);\n  }, 2500);\n\n  const goBack = () => {\n    history.goBack();\n    setDefaultMovies(true);\n  };\n  const youtubeLink = `https://www.youtube.com/embed/`;\n  let castList = []; // Holds all the movie cast headshots/name/\n\n  // movie cast card creator\n  if (movieCast !== null) {\n    const numberOfActorsDisplayed = 10;\n    // the code beloe takes the first X objects in the movie credit array\n    // for each of these, a Box is generated with a headshot, actor name, and character\n    castList = movieCast.map((castMember, index) => {\n      const {\n        cast_id,\n        character,\n        name,\n        profile_path,\n        id: person_id\n      } = castMember;\n\n      return (\n        <Box\n          key={cast_id}\n          textAlign=\"center\"\n          marginRight=\"60px\"\n          marginLeft=\"60px\"\n        >\n          <Link to={`/actor/${person_id}`}>\n            <Image\n              m=\"0 auto\"\n              cursor=\"pointer\"\n              rounded=\"lg\"\n              src={ImageUrl + profile_path}\n              objectFit=\"cover\"\n              width=\"100px\"\n              maxWidth=\"none\"\n            />\n          </Link>\n          <Box p=\"7px\">\n            {name} <br />{\" \"}\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\n              {character}\n            </Text>\n          </Box>\n        </Box>\n      );\n    });\n  }\n\n  // movie trailer box creator\n\n  let movieTrailersboxes = [];\n  if (movieTrailers.length > 0) {\n    movieTrailersboxes = movieTrailers.map(trailer => {\n      return (\n        <Box mr=\"10px\" key={trailer.id}>\n          <iframe\n            title={trailer.original_title}\n            width=\"420\"\n            height=\"345\"\n            src={`${youtubeLink}${trailer.key}`}\n            className=\"movieTrailerBoxes\"\n          ></iframe>\n        </Box>\n      );\n    });\n  }\n  // Carousel settiings\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3\n  };\n\n  // Id is passed from MovieDetails component\n  const { movieId } = props;\n\n  useEffect(() => {\n    try {\n      axios\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\n        .then(res => {\n          // stores movie data using movie ID\n          setMovieData(res.data);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\n        )\n        .then(res => {\n          // stores all movie trailers keys\n          setMovieTrailers(res.data.videos.results);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n    try {\n      axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\n        )\n        .then(res => {\n          // stores cast data using movie ID\n          setMovieCast(res.data.cast);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // styling varibles\n  const detailBody = {\n    backgroundColor: \"#333333\",\n    height: \"100%\",\n    width: \"100%\",\n    overflowY: \"scroll\"\n  };\n\n  const imageContainer = {\n    width: \"100vw\",\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"top\"\n  };\n\n  const container = {\n    maxWidth: \"80%\",\n    margin: \"0 auto\",\n    color: \"white\"\n  };\n\n  const pageSpinner = {\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n\n    transform: \"translate(-50%, -50%)\"\n  };\n  return (\n    <>\n      <Box>\n        {isPageLoaded ? null : (\n          <Box className=\"loadingScreen\">\n            <Spinner\n              style={pageSpinner}\n              thickness=\"3px\"\n              speed=\"0.7s\"\n              emptyColor=\"gray.200\"\n              color=\"black\"\n              size=\"100px\"\n            />\n          </Box>\n        )}\n      </Box>\n      <Box\n        style={imageContainer}\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\n      >\n        <Box\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0,0,0,0.5)\"\n          }}\n        >\n          <Box style={container}>\n            <Heading\n              position=\"absolute\"\n              top=\"50%\"\n              color=\"white\"\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\n            >\n              {movieData.original_title}\n            </Heading>\n            <Link to=\"/\">\n              <span className=\"responsiveArrow\" onClick={goBack}>\n                &#8592;\n              </span>\n            </Link>\n          </Box>\n        </Box>\n      </Box>\n      <Box style={detailBody}>\n        <Box style={container}>\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\">Summary</Heading>\n            <p>{movieData.overview}</p>\n          </Box>\n\n          <Box paddingY=\"30px\">\n            <Heading pb=\"10px\"> Cast</Heading>\n\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\n              {castList}\n            </Flex>\n          </Box>\n\n          <Box paddingTop=\"30px\">\n            <Heading pb=\"10px\">Trailers</Heading>\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\n              {movieTrailersboxes}\n            </Flex>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default MovieDetailsBody;\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\n\nimport { useParams } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/core\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n\n  return (\n    <div>\n      <MovieDetailsBody movieId={movieId} />\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Box, Image, Grid as ChakraGrid } from \"@chakra-ui/core\";\nimport Grid from \"../components/Grid\";\nimport NavBar from \"../components/NavBar\";\n//import FilterSidebar from \"../components/FilterSidebar\";\nimport axios from \"axios\";\nimport { Context } from \"../Context\";\nimport { useParams } from \"react-router-dom\";\n\nfunction SearchByActor() {\n  const { APIKEY, ImageUrl } = useContext(Context);\n\n  const { personId } = useParams();\n\n  const [personDetails, setPersonDetails] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    if (personId !== null) {\n      try {\n        axios\n          .get(\n            // retrieve actor's name based on personId\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\n          )\n          .then((res) => {\n            setPersonDetails(res.data);\n          });\n\n        axios\n          .get(\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\n          )\n          .then((res) => {\n            setSearchResults(res.data.cast);\n          });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, [APIKEY, personId, setSearchResults]);\n\n  const headerStyles = {\n    position: \"absolute\",\n    top: \"100px\",\n    color: \"white\",\n    left: \"150px\",\n    fontSize: \"25px\",\n    fontWeight: \"100\",\n  };\n\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\",\n      }}\n    >\n      <NavBar />\n\n      {personDetails !== null && (\n        <>\n          <h1\n            style={headerStyles}\n          >{`${personDetails.name}`}</h1>\n          <br />\n          <br />\n          <br />\n          <br />\n          <ChakraGrid\n            m=\"100px\"\n            borderWidth=\"1px\"\n            borderColor=\"primaryBorder\"\n            rounded=\"lg\"\n            templateColumns=\"auto auto\"\n          >\n            <Image\n              m=\"10px\"\n              src={ImageUrl + personDetails.profile_path}\n              h=\"220px\"\n              objectFit=\"cover\"\n              rounded=\"lg\"\n            />\n            <Box\n              m=\"10px\"\n              color=\"primaryText\"\n              fontSize=\"0.8em\"\n              >{personDetails.biography}</Box>\n          </ChakraGrid>\n\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default SearchByActor;\n","import React, { useContext } from \"react\";\nimport Grid from \"../components/Grid\";\nimport Navbar from \"../components/NavBar\";\nimport { Heading, Box } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\n\nfunction SearchPage() {\n  const { search, searchResults, isSearch } = useContext(Context);\n  console.log(search);\n  return (\n    <Box\n      bg=\"primaryBackground\"\n      h=\"100vh\"\n      w=\"100vw\"\n      style={{\n        overflow: \"scroll\"\n      }}\n    >\n      <Heading paddingY=\"80px\" textAlign=\"center\" color=\"white\">\n        {isSearch ? `Search Results for ${search}` : `Search For Movie`}\n      </Heading>\n      <Navbar />\n      <Grid searchResults={searchResults} />\n    </Box>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport MovieDetailsPage from \"./pages/MovieDetails\";\nimport SearchByActor from \"./pages/SearchByActor\";\nimport SearchPage from \"./pages/SearchPage\";\nimport { Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/moviedetailspage/:movieId\">\n          <MovieDetailsPage />\n        </Route>\n\n        <Route path=\"/actor/:personId\">\n          <SearchByActor />\n        </Route>\n        <Route path=\"/searchPage\">\n          <SearchPage />\n        </Route>\n        <Route path=\"/\">\n          <Homepage />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { theme } from \"@chakra-ui/core\";\n\n// we can customize our theme here\nexport const customTheme = {\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primaryBackground: \"#333\",\n      primaryBorder: \"#555\",\n      logoText: \"#49c3fd\",\n      primaryText: \"#fff\",\n    }\n};\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport { customTheme } from \"./theme\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <ContextProvider>\n    <Router>\n      <ThemeProvider theme={customTheme}>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}