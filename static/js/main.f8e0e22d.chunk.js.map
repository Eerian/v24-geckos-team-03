{"version":3,"sources":["Context.js","components/Movieboxes.js","components/FavoriteMovies.js","components/MovieDetails.js","components/Grid.js","components/Searchbar.js","components/NavBar.js","components/FilterBar/Filter.js","pages/Homepage.js","pages/FavoriteMoviespage.js","components/MovieDetails/MovieDetailsBody.js","pages/MovieDetailsPage.js","pages/SearchByActor.js","pages/SearchPage.js","App.js","theme.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","isSearch","setIsSearch","defaultMovies","setDefaultMovies","search","setSearch","searchResults","setSearchResults","navShadow","setNavShadow","homePageResults","setHomePageResults","db","Localbase","allFavMovies","setAllFavMovies","useEffect","collection","get","then","movies","console","log","Provider","value","ImageUrl","APIKEY","children","Movieboxes","imageSrc","title","onClick","year","rating","PseudoBox","bg","w","minW","m","color","cursor","borderWidth","borderColor","rounded","fontSize","p","opacity","_hover","position","Box","top","right","backgroundColor","lineHeight","borderRadius","h","d","Icon","name","paddingLeft","paddingBottom","Image","src","objectFit","textAlign","FavoriteMovies","movieId","setMovieId","useDisclosure","isOpen","onOpen","onClose","useContext","className","style","maxWidth","marginTop","margin","display","flexWrap","justifyContent","map","movie","key","id","movieTitle","movieImage","undefined","movieReleaseDate","Date","getFullYear","movieRating","MovieDetails","movieDetails","setMovieDetails","movieCredits","setMovieCredits","isFave","setisFave","forEach","axios","res","data","err","cast","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","castList","slice","castMember","index","cast_id","character","profile_path","person_id","Grid","templateColumns","columnGap","to","Text","fontStyle","Modal","preserveScrollBarGap","Stack","overview","mt","runtime","vote_average","status","release_date","toLocaleDateString","budget","format","revenue","rowGap","tagline","Button","i","length","add","poster_path","mr","movieBoxes","original_title","Search","history","useHistory","inputEl","useRef","results","onSubmit","e","preventDefault","current","push","type","ref","placeholder","NavBar","px","py","zIndex","boxShadow","isInline","Link","as","RouterLink","size","Heading","fontWeight","fontFamily","Searchbar","Switch","ml","float","marginRight","textDecoration","Filter","genre","setGenre","setYear","genreOption","yearOption","submit","setSubmit","selectEl","selectStyles","width","height","background","overflow","disabled","mx","my","Select","Homepage","myRef","createRef","onScroll","scrollTop","marginLeft","FavoriteMoviespage","MovieDetailsBody","movieData","setMovieData","movieCast","setMovieCast","movieTrailers","setMovieTrailers","isPageLoaded","setIsPageLoaded","setTimeout","movieTrailersboxes","trailer","videos","imageContainer","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","container","Spinner","left","transform","thickness","speed","emptyColor","goBack","overflowY","paddingY","pb","Flex","wrap","overflowX","paddingTop","MovieDetailsPage","useParams","SearchByActor","personId","personDetails","setPersonDetails","biography","SearchPage","marginY","App","exact","path","customTheme","theme","colors","primaryBackground","cardBackground","primaryBorder","logoText","primaryText","ReactDOM","render","ThemeProvider","CSSReset","document","querySelector"],"mappings":"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","file":"static/js/main.f8e0e22d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Localbase from 'localbase';\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider(props) {\r\n  const ImageUrl = \"https://image.tmdb.org/t/p/w400\";\r\n\r\n  const [isSearch, setIsSearch] = useState(false); // state that holds wheither a user has submitted a search or not\r\n  const [defaultMovies, setDefaultMovies] = useState(true); // state checks wheither favorite movies are displaying or not\r\n  const [search, setSearch] = useState(\"\"); // save search input\r\n  const [searchResults, setSearchResults] = useState([]); // saves search results\r\n  const [navShadow, setNavShadow] = useState(false);\r\n  const [homePageResults, setHomePageResults] = useState([]); // saves popular movies or filtered results\r\n\r\n  const APIKEY = \"6ee25636d25df9899ed46e80a13383ff\";\r\n\r\n//Create a LOCAL DATABASE using localbase imported. \r\nlet db = new Localbase('db');\r\nconst [allFavMovies, setAllFavMovies] = useState([]);\r\n  //Get data from the DB and store all favotired movies to an array\r\n    useEffect(() => {\r\n      db.collection('favoriteMovies').get().then(movies =>{\r\n        setAllFavMovies(movies);\r\n        console.log(db);\r\n      });\r\n    },[]);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        setSearch,\r\n        setSearchResults,\r\n        search,\r\n        searchResults,\r\n        homePageResults,\r\n        setHomePageResults,\r\n        ImageUrl,\r\n        isSearch,\r\n        setIsSearch,\r\n        APIKEY,\r\n        db,\r\n        allFavMovies,\r\n        setDefaultMovies,\r\n        navShadow,\r\n        setNavShadow,\r\n        defaultMovies\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport { ContextProvider, Context };\r\n","import React from \"react\";\r\nimport { Box, Image, PseudoBox, Icon } from \"@chakra-ui/core\";\r\n\r\nfunction Movieboxes(props) {\r\n  const { imageSrc, title, onClick, year, rating } = props;\r\n\r\n  return (\r\n    <PseudoBox\r\n      onClick={() => onClick()}\r\n      bg=\"cardBackground\"\r\n      w=\"13vw\"\r\n      minW=\"175px\"\r\n      m={4}\r\n      color=\"primaryText\"\r\n      cursor=\"pointer\"\r\n      borderWidth=\"1px\"\r\n      borderColor=\"primaryBorder\"\r\n      rounded=\"lg\"\r\n      fontSize=\"0.8em\"\r\n      p=\"5px\"\r\n      opacity=\"0.75\"\r\n      _hover={{ borderColor: \"#666\", opacity: \"1\" }}\r\n      position=\"relative\"\r\n    >\r\n      {rating !== null && (\r\n        <Box\r\n          position=\"absolute\"\r\n          top=\"8px\"\r\n          right=\"8px\"\r\n          backgroundColor=\"rgb(0,0,0,0.6)\"\r\n          p=\"0.5em\"\r\n          lineHeight=\"1em\"\r\n          borderRadius=\"1em\"\r\n          h=\"2em\"\r\n          color=\"primaryText\"\r\n        >\r\n          <Box d=\"inline\">{rating}</Box>\r\n          <Icon\r\n            name=\"star\"\r\n            paddingLeft=\"2px\"\r\n            paddingBottom=\"3px\"\r\n            color=\"#ffff00\"\r\n          />\r\n        </Box>\r\n      )}\r\n      <Image rounded=\"lg\" src={imageSrc} objectFit=\"cover\" />\r\n\r\n      <Box m=\"5px\" textAlign=\"center\" fontSize=\"1.1em\">\r\n        {`${title} ${year !== null ? `(${year})` : \"\"}`}\r\n      </Box>\r\n    </PseudoBox>\r\n  );\r\n}\r\n\r\nexport default Movieboxes;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport Movieboxes from \"../components/Movieboxes\";\r\nimport MovieDetails from \"./MovieDetails\";\r\nimport { useDisclosure } from \"@chakra-ui/core\";\r\n\r\nconst FavoriteMovies = () => {\r\n  const [movieId, setMovieId] = useState(null);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  function onHandleMovieClick(id) {\r\n    setMovieId(id);\r\n    onOpen();\r\n  }\r\n\r\n  const { allFavMovies } = useContext(Context);\r\n\r\n  //styles for the grid\r\n  const gridStyles = {\r\n    maxWidth: \"1200px\",\r\n    marginTop: \"10%\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-evenly\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={gridStyles}>\r\n        {allFavMovies.map((movie) => {\r\n          return (\r\n            <Movieboxes\r\n              key={movie.id}\r\n              title={movie.movieTitle}\r\n              imageSrc={movie.movieImage}\r\n              year={\r\n                movie.movieReleaseDate !== undefined\r\n                  ? new Date(movie.movieReleaseDate).getFullYear()\r\n                  : null\r\n              }\r\n              rating={\r\n                movie.movieRating !== undefined ? movie.movieRating : null\r\n              }\r\n              onClick={() => onHandleMovieClick(movie.id)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\r\n    </>\r\n  );\r\n};\r\n//     <Movieboxes\r\n//     key={movie.id}\r\n//     title={movie.movieTitle}\r\n//     imageSrc={movie.movieImage}\r\n\r\n// />\r\n\r\nexport default FavoriteMovies;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  Stack,\r\n  Box,\r\n  Grid,\r\n  Image,\r\n  Text,\r\n} from \"@chakra-ui/core\";\r\nimport axios from \"axios\";\r\nimport FavoriteMovies from './FavoriteMovies';\r\nimport Movieboxes from './Movieboxes';\r\n\r\nfunction MovieDetails(props) {\r\n  const { APIKEY, ImageUrl, allFavMovies, db} = useContext(\r\n    Context\r\n  );\r\n  const { isOpen, onClose, id } = props;\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n  const [movieCredits, setMovieCredits] = useState(null);\r\n\r\n\r\n//create a handler for \"add to favorites\" button on the Modal.\r\nconst [isFavorited, setisFavorited] = useState();\r\n\r\n\r\nconst handleAddToFavorites = () => {\r\n    //Check for duplicate entries on the database before adding a movie.\r\n    for (let i = 0; i < allFavMovies.length; i++) {\r\n      if (allFavMovies[i].id === movieDetails.id) {\r\n        console.log('movie exists')\r\n        return null;\r\n      }\r\n  }\r\n    //add image and title of movies clicked to the DB\r\n    db.collection('favoriteMovies').add({\r\n      id: movieDetails.id,\r\n      movieImage: ImageUrl + movieDetails.poster_path,\r\n      movieTitle: movieDetails.title,\r\n      movieReleaseDate: movieDetails.release_date,\r\n      movieRating: movieDetails.vote_average,\r\n    })\r\n  \r\n  }\r\n \r\n\r\n\r\n// function searchByActor(person_id) {\r\n//   setPersonId(person_id);\r\n//   setDefaultMovies(true);\r\n//   onClose();\r\n// }\r\n\r\nconst [isFave, setisFave] = useState(false);\r\n//check if a movie is favorited;\r\n  useEffect(() => {\r\n    setisFave(false);\r\n    allFavMovies.forEach(movie => {\r\n      if (movie.id === id) {\r\n        setisFave(true);\r\n      }\r\n    })\r\n  \r\n    if (id !== null) {\r\n      setMovieDetails(null); // prevents details from previous modal from showing up\r\n      setMovieCredits(null);\r\n      try {\r\n        axios\r\n          .get(\r\n            // retrieve credits object based on movie id\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setMovieDetails(res.data);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      try {\r\n        axios\r\n          .get(\r\n            // retrieve credits object based on movie id\r\n            `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setMovieCredits(res.data.cast);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      setMovieDetails(null);\r\n      setMovieCredits(null);\r\n    }\r\n  }, [id, APIKEY]);\r\n\r\n  // Create our number formatter for USD currency\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n\r\n  let castList = [];\r\n\r\n  if (movieCredits !== null) {\r\n    const numberOfActorsDisplayed = 10;\r\n    // the code beloe takes the first X objects in the movie credit array\r\n    // for each of these, a Box is generated with a headshot, actor name, and character\r\n    castList = movieCredits\r\n      .slice(0, numberOfActorsDisplayed)\r\n      .map((castMember, index) => {\r\n        const {\r\n          cast_id,\r\n          character,\r\n          name,\r\n          profile_path,\r\n          id: person_id,\r\n        } = castMember;\r\n\r\n        return (\r\n          <Box key={cast_id}>\r\n            <Grid\r\n              p=\"3px\"\r\n              borderWidth=\"1px\"\r\n              borderColor=\"primaryBorder\"\r\n              rounded=\"lg\"\r\n              templateColumns=\"30% 70%\"\r\n              columnGap=\"3px\"\r\n            >\r\n              <Link to={`/actor/${person_id}`}>\r\n                <Image\r\n                  cursor=\"pointer\"\r\n                  rounded=\"lg\"\r\n                  src={ImageUrl + profile_path}\r\n                  h=\"80px\"\r\n                  objectFit=\"cover\"\r\n                />\r\n              </Link>\r\n              <Box p=\"7px\">\r\n                {name} <br />{\" \"}\r\n                <Text fontSize=\"0.9em\" fontStyle=\"italic\">\r\n                  {character}\r\n                </Text>\r\n              </Box>\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      });\r\n  }\r\n\r\n//Check if movie is favorited \r\nconst [isFaved, setisFaved] = useState();\r\n// const checkFavorited = () => {\r\n//     let favorited = \"\";\r\n//     for (let i = 0; i < allFavMovies.length; i++) {\r\n//       if (allFavMovies[i].id === movieDetails.id) {\r\n//         setisFaved(movieDetails.id)\r\n//         console.log(isFaved);\r\n//       }\r\n//   }\r\n// }\r\n\r\n  return (\r\n    <>\r\n      <Modal preserveScrollBarGap isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        {movieDetails !== null &&\r\n          movieCredits !== null && ( // boolean && will only execute what comes next if true\r\n            <ModalContent bg=\"primaryBackground\" color=\"primaryText\">\r\n              <ModalHeader>{movieDetails.title}</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <Stack>\r\n                  <Box>Summary</Box>\r\n                  <Box\r\n                    p=\"10px\"\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"primaryBorder\"\r\n                    rounded=\"lg\"\r\n                    fontSize=\"0.9em\"\r\n                  >\r\n                    {movieDetails.overview}\r\n                  </Box>\r\n                  <Box mt=\"15px\">Details</Box>\r\n                  <Grid\r\n                    p=\"10px\"\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"primaryBorder\"\r\n                    rounded=\"lg\"\r\n                    templateColumns=\"50% 50%\"\r\n                    columnGap=\"10px\"\r\n                    fontSize=\"0.8em\"\r\n                  >\r\n                    <Box>\r\n                      Runtime:{\" \"}\r\n                      {movieDetails.runtime === 0\r\n                        ? \"?\"\r\n                        : `${movieDetails.runtime} minutes`}\r\n                    </Box>\r\n                    <Box>Rating: {movieDetails.vote_average}</Box>\r\n                    <Box>Status: {movieDetails.status}</Box>\r\n                    <Box>\r\n                      Release Date:{\" \"}\r\n                      {new Date(movieDetails.release_date).toLocaleDateString()}\r\n                    </Box>\r\n                    {movieDetails.budget !== 0 && (\r\n                      <Box>Budget: {formatter.format(movieDetails.budget)}</Box>\r\n                    )}\r\n                    {movieDetails.revenue !== 0 && (\r\n                      <Box>\r\n                        Revenue: {formatter.format(movieDetails.revenue)}\r\n                      </Box>\r\n                    )}\r\n                  </Grid>\r\n                  <Box mt=\"15px\">Cast</Box>\r\n\r\n                  {movieCredits !== null && (\r\n                    <Grid\r\n                      templateColumns=\"50% 50%\"\r\n                      columnGap=\"10px\"\r\n                      rowGap=\"10px\"\r\n                      fontSize=\"0.7em\"\r\n                    >\r\n                      {castList}\r\n                    </Grid>\r\n                  )}\r\n\r\n                  <Box\r\n                    p=\"10px\"\r\n                    textAlign=\"center\"\r\n                    color=\"logoText\"\r\n                    fontStyle=\"italic\"\r\n                    fontSize=\"1.1em\"\r\n                  >\r\n                    {movieDetails.tagline}\r\n                  </Box>\r\n                </Stack>\r\n              </ModalBody>\r\n\r\n              <ModalFooter>  \r\n              {isFave\r\n              ? <Button>Remove</Button>\r\n              : <Button onClick={handleAddToFavorites}>Add</Button>}\r\n         \r\n            {/* <Button\r\n                    borderColor=\"logoText\"\r\n                    borderWidth=\"3px\"\r\n                    backgroundColor=\"primaryBackground\"\r\n                    color=\"logoText\"\r\n                    _hover\r\n                    mr={3} \r\n                    onClick={handleAddToFavorites}\r\n              >\r\n                    Add to favorites\r\n              </Button>   */}\r\n              <Link to={`/moviedetailspage/${id}`}>\r\n                  {\" \"}\r\n                  <Button\r\n                    borderColor=\"logoText\"\r\n                    borderWidth=\"3px\"\r\n                    backgroundColor=\"primaryBackground\"\r\n                    color=\"logoText\"\r\n                    _hover\r\n                    mr={3}\r\n                    onClick={onClose}\r\n                  >\r\n                    More Details\r\n                  </Button>\r\n                </Link>\r\n                <Button\r\n                  borderColor=\"logoText\"\r\n                  borderWidth=\"3px\"\r\n                  backgroundColor=\"primaryBackground\"\r\n                  color=\"logoText\"\r\n                  _hover\r\n                  mr={3}\r\n                  onClick={onClose}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </ModalFooter>\r\n            </ModalContent>\r\n          )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default MovieDetails;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport Movieboxes from \"./Movieboxes\";\r\nimport { useDisclosure } from \"@chakra-ui/core\";\r\nimport MovieDetails from \"./MovieDetails\";\r\n\r\nfunction Grid(props) {\r\n  const {searchResults} = props;\r\n\r\n  const { ImageUrl } = useContext(Context);\r\n\r\n  const [movieId, setMovieId] = useState(null);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const gridStyles = {\r\n    maxWidth: \"1200px\",\r\n    margin: \"0 auto\",\r\n    marginTop: \"15px\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-evenly\"\r\n  };\r\n\r\n  const movieBoxes = searchResults.map(function(movie) {\r\n    return (\r\n      <Movieboxes\r\n        key={movie.id}\r\n        title={movie.original_title}\r\n        imageSrc={ImageUrl + movie.poster_path}\r\n        year={new Date(movie.release_date).getFullYear()}\r\n        rating={movie.vote_average}\r\n        onClick={() => onHandleMovieClick(movie.id)}\r\n      />\r\n    );\r\n  });\r\n\r\n  function onHandleMovieClick(id) {\r\n    setMovieId(id);\r\n    onOpen();\r\n    console.log(id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={gridStyles}>\r\n        {searchResults.length > 0 ? movieBoxes : null}\r\n      </div>\r\n      <MovieDetails isOpen={isOpen} onClose={onClose} id={movieId} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useRef, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nfunction Search() {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  const {\r\n    setSearch,\r\n    setSearchResults,\r\n    search,\r\n    searchResults,\r\n    setIsSearch,\r\n    APIKEY,\r\n    setDefaultMovies\r\n  } = useContext(Context);\r\n\r\n  const inputEl = useRef(null);\r\n\r\n  function searchSubmit(e) {\r\n    e.preventDefault();\r\n    setSearch(inputEl.current.value);\r\n\r\n    setIsSearch(true);\r\n\r\n    history.push(\"/searchPage\"); // Routes to search page on submit\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (search.length > 0) {\r\n      try {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${search}`\r\n          )\r\n          .then(res => {\r\n            setSearchResults(res.data.results);\r\n            setIsSearch(true);\r\n            setDefaultMovies(false);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    console.log(searchResults);\r\n  }, [search, setSearchResults, APIKEY, setIsSearch, setDefaultMovies]);\r\n\r\n  const buttonStyle = {\r\n    borderRadius: \"0.25rem\",\r\n    fontWeight: 600,\r\n    display: \"inline-flex\",\r\n    appearance: \"none\",\r\n    WebkitBoxAlign: \"center\",\r\n    alignItems: \"center\",\r\n    WebkitBoxPack: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: \"all 250ms ease 0s\",\r\n    userSelect: \"none\",\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    verticalAlign: \"middle\",\r\n    lineHeight: 1.2,\r\n    outline: \"none\",\r\n    height: \"2em\",\r\n    minWidth: \"2.5rem\",\r\n    fontSize: \"1rem\",\r\n    paddingLeft: \"1rem\",\r\n    paddingRight: \"1rem\",\r\n    backgroundColor: \"rgb(237, 242, 247)\",\r\n    marginLeft: \"5px\",\r\n    marginRight: \"5px\"\r\n  };\r\n  return (\r\n    <div className=\"search\">\r\n      <form onSubmit={searchSubmit}>\r\n        <input type=\"text\" name=\"search\" ref={inputEl} placeholder=\"Search movie here!\"></input>\r\n        <button type=\"submit\" name=\"button\">\r\n          <i className=\"fas fa-search\"></i>\r\n        {/* <input type=\"text\" ref={inputEl}></input> */}\r\n        </button>\r\n      </form>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Search;\r\n","import React, { useContext } from \"react\";\r\nimport Searchbar from './Searchbar';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Context } from \"../Context\";\r\nimport { Box, Image, Link, Switch, Heading, Stack } from \"@chakra-ui/core\";\r\n\r\nconst NavBar = () => {\r\n  const {\r\n    setDefaultMovies,\r\n    navShadow\r\n  } = useContext(Context);\r\n  const clicked = () => {\r\n    setDefaultMovies(true);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className=\"nav-bar\"\r\n      style={{ top: 0 }}\r\n      position=\"absolute\"\r\n      bg=\"primaryBackground\"\r\n      w=\"100%\"\r\n      px={5}\r\n      py={5}\r\n      paddingBottom=\"10px\" \r\n      zIndex=\"1000\"\r\n      boxShadow={\r\n        navShadow\r\n          ? \"0px 6px 6px 3px rgba(0, 0, 0, 0.25)\"\r\n          : \"0px 6px 6px 3px rgba(0, 0, 0, 0)\"\r\n      }\r\n    >\r\n      <Stack isInline justifyContent=\"space-between\">\r\n        <Link as={RouterLink} to=\"/\">\r\n          <Stack isInline onClick={clicked}>\r\n            <Image\r\n              src=\"https://cdn1.iconfinder.com/data/icons/media-colorful-1/48/film_roll-512.png\"\r\n              size={46}\r\n            />\r\n            <Heading as=\"h3\" size=\"xl\" fontWeight=\"200\" color=\"#49c3fd\" fontFamily=\"Gugi, cursive\">\r\n              DAILY FLIX\r\n            </Heading>\r\n          </Stack>\r\n          </Link>\r\n          <Stack isInline>\r\n            <Searchbar />\r\n            <Switch size=\"sm\" ml={2}/>\r\n          </Stack>\r\n        </Stack>\r\n        <Box float=\"right\" marginRight=\"198px\">\r\n            {/* Use RouterLink as written in ChakraUI docs */}\r\n            <Link textDecoration=\"none\" _hover={{color : \"#49c3fd\"}} as={RouterLink} to=\"/favorites\" px={2} color=\"#fff\" className=\"link\">My Favorites</Link>\r\n            <Link _hover={{color : \"#49c3fd\"}} className=\"navbar-links\" px={2} color=\"#fff\">Watch List</Link>\r\n        </Box>\r\n      </Box>\r\n\r\n \r\n      \r\n    )\r\n}\r\n\r\n\r\nexport default NavBar;\r\n\r\n\r\n","import React, { useContext, useRef, useState, useEffect } from \"react\";\r\nimport \"./filter.css\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../Context\";\r\nimport { Heading, Button, Select, Box } from \"@chakra-ui/core\";\r\n\r\nfunction Filter() {\r\n  const [genre, setGenre] = useState(\"Genre\");\r\n  const [year, setYear] = useState(\"Year\");\r\n  const genreOption = useRef(null);\r\n  const yearOption = useRef(null);\r\n  const [submit, setSubmit] = useState(false);\r\n  const inputEl = useRef(null);\r\n  const selectEl = useRef(null);\r\n  const {\r\n    APIKEY,\r\n    setDefaultMovies,\r\n    setHomePageResults\r\n  } = useContext(Context);\r\n\r\n  function formSubmit(e) {\r\n    e.preventDefault();\r\n    setSubmit(true);\r\n    setGenre(inputEl.current.value);\r\n    setYear(selectEl.current.value);\r\n    genreOption.current.disabled = true;\r\n\r\n    yearOption.current.disabled = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    //   Checks wheither if correct selections are submitted\r\n    if (genre !== \"Genre\" && year !== \"Year\") {\r\n      try {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/discover/movie?api_key=${APIKEY}&sort_by=popularity.desc&page=1&year=${year}&with_genres=${genre}`\r\n          )\r\n          .then(res => {\r\n            setHomePageResults(res.data.results);\r\n            setDefaultMovies(false);\r\n            setSubmit(false);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [submit]);\r\n\r\n  const filterbar = {\r\n    marginTop: \"125px\",\r\n    textAlign: \"center\",\r\n  };\r\n  const filterButton = {\r\n    height: \"2em\",\r\n    borderWidth: \"2px\",\r\n    textAlign: \"center\",\r\n    textDecoration: \"none\",\r\n    display: \"inlineBlock\",\r\n    fontSize: \"0.9em\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"1em\",\r\n  };\r\n\r\n  const selectStyles = {\r\n    position: \"relative\",\r\n    width: \"10em\",\r\n    height: \"2.2em\",\r\n    lineHeight: \"2em\",\r\n    background: \"#444\", //\"#2c3e50\",\r\n    overflow: \"hidden\",\r\n    borderRadius: \"1em\",\r\n    color: \"#fff\",\r\n    cursor: \"pointer\",\r\n    paddingLeft: \"15px\",\r\n    fontSize: \"0.8em\",\r\n  };\r\n\r\n  return (\r\n    <div style={filterbar}>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={formSubmit}\r\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\r\n      >\r\n        <Box d=\"inline\" color=\"primaryText\" fontSize=\"1em\" mx=\"7px\" my=\"5px\">\r\n          Find Movies By\r\n        </Box>\r\n        <Select ref={inputEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\r\n          <option ref={genreOption}>Genre</option>\r\n          <option value=\"28\">Action</option>\r\n\r\n          <option value=\"12\">Adventure</option>\r\n          <option value=\"16\">Animation</option>\r\n          <option value=\"35\">Comedy</option>\r\n          <option value=\"80\">Crime</option>\r\n          <option value=\"99\">Documentary</option>\r\n          <option value=\"18\">Drama</option>\r\n          <option value=\"14\">Fantasy</option>\r\n          <option value=\"36\">History</option>\r\n          <option value=\"10402\">Music</option>\r\n          <option value=\"9648\">Mystery</option>\r\n          <option value=\"10749\">Romance</option>\r\n          <option value=\"878\">Science Fiction</option>\r\n          <option value=\"10770\">Tv Movie</option>\r\n          <option value=\"53\">Thriller</option>\r\n          <option value=\"10752\">War</option>\r\n        </Select>\r\n\r\n        <Select ref={selectEl} style={selectStyles} w=\"8em\" mx=\"7px\" my=\"7px\">\r\n          <option ref={yearOption}>Year</option>\r\n          <option>2020</option>\r\n          <option>2019</option>\r\n          <option>2018</option>\r\n          <option>2017</option>\r\n          <option>2016</option>\r\n          <option>2015</option>\r\n          <option>2014</option>\r\n          <option>2013</option>\r\n          <option>2012</option>\r\n          <option>2011</option>\r\n          <option>2010</option>\r\n          <option>2009</option>\r\n        </Select>\r\n\r\n        <Button\r\n          backgroundColor=\"primaryBackground\"\r\n          borderColor=\"logoText\"\r\n          color=\"logoText\"\r\n          style={filterButton}\r\n          _hover={{ backgroundColor: \"logoText\", color: \"primaryBackground\", fontWeight: \"900\" }}\r\n          type=\"submit\"\r\n          mx=\"7px\" \r\n          my=\"7px\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Box, Heading } from \"@chakra-ui/core\";\r\nimport axios from \"axios\";\r\nimport Grid from \"../components/Grid\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Filter from \"../components/FilterBar/Filter\";\r\n\r\nimport { Context } from \"../Context\";\r\n\r\nfunction Homepage() {\r\n  const {\r\n    isSearch,\r\n    setNavShadow,\r\n    navShadow,\r\n    homePageResults,\r\n    setHomePageResults,\r\n    defaultMovies,\r\n    setDefaultMovies,\r\n    APIKEY,\r\n  } = useContext(Context);\r\n\r\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\r\n\r\n  function onScroll() {\r\n    const scrollTop = myRef.current.scrollTop;\r\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\r\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (defaultMovies === true) {\r\n      try {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/trending/movie/week?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setHomePageResults(res.data.results);\r\n            setDefaultMovies(true);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }, [defaultMovies, APIKEY, setHomePageResults, setDefaultMovies]);\r\n\r\n  return (\r\n    <Box\r\n      ref={myRef}\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\",\r\n      }}\r\n      onScroll={onScroll}\r\n    >\r\n      <NavBar />\r\n      <Filter />\r\n      <Heading\r\n        as=\"h3\"\r\n        size=\"lg\"\r\n        marginTop=\"10px\"\r\n        marginLeft=\"5%\"\r\n        color=\"primaryText\"\r\n      >\r\n        {isSearch ? null : \"Popular Movies\"}\r\n      </Heading>\r\n      <Grid searchResults={homePageResults} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeProvider, Box, Flex, Link, Image,  Switch , Heading, Stack} from \"@chakra-ui/core\";\r\nimport Grid from \"../components/Grid\";\r\nimport { Context } from \"../Context\";\r\nimport Movieboxes from \"../components/Movieboxes\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport { Localbase } from 'localbase';\r\nimport FavoriteMovies from './../components/FavoriteMovies';\r\n\r\n\r\n\r\nconst FavoriteMoviespage = () => {\r\n\r\n// const headerStyles = {\r\n    // position: \"absolute\",\r\n    // top: \"100px\",\r\n    // color: \"red\",\r\n    // left: \"150px\",\r\n    // fontSize: \"25px\",\r\n    // fontWeight: \"400\"\r\n//   };\r\n  return (\r\n    <Box\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\",\r\n      }}\r\n    >\r\n      <NavBar />\r\n      <Box>\r\n        <h1 className=\"page-heading\">Favorite Movies</h1>\r\n      </Box>\r\n      <Box className=\"movie-grid\">\r\n        <FavoriteMovies />\r\n      </Box>\r\n    </Box>\r\n  \r\n  );\r\n         \r\n        \r\n    \r\n}\r\n\r\nexport default FavoriteMoviespage;","import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"./../../Context\";\r\nimport { Box, Heading, Image, Text, Flex, Spinner } from \"@chakra-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./MovieDetailsBody.css\";\r\n\r\nfunction MovieDetailsBody(props) {\r\n  const history = useHistory();\r\n  const { APIKEY, ImageUrl, setDefaultMovies } = useContext(Context);\r\n\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [movieCast, setMovieCast] = useState([]);\r\n  const [movieTrailers, setMovieTrailers] = useState([]);\r\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\r\n\r\n  setTimeout(() => {\r\n    setIsPageLoaded(true);\r\n  }, 2500);\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n    setDefaultMovies(true);\r\n  };\r\n  const youtubeLink = `https://www.youtube.com/embed/`;\r\n  let castList = []; // Holds all the movie cast headshots/name/\r\n\r\n  // movie cast card creator\r\n  if (movieCast !== null) {\r\n    const numberOfActorsDisplayed = 10;\r\n    // the code beloe takes the first X objects in the movie credit array\r\n    // for each of these, a Box is generated with a headshot, actor name, and character\r\n    castList = movieCast.map((castMember, index) => {\r\n      const {\r\n        cast_id,\r\n        character,\r\n        name,\r\n        profile_path,\r\n        id: person_id\r\n      } = castMember;\r\n\r\n      return (\r\n        <Box\r\n          key={cast_id}\r\n          textAlign=\"center\"\r\n          marginRight=\"60px\"\r\n          marginLeft=\"60px\"\r\n        >\r\n          <Link to={`/actor/${person_id}`}>\r\n            <Image\r\n              m=\"0 auto\"\r\n              cursor=\"pointer\"\r\n              rounded=\"lg\"\r\n              src={ImageUrl + profile_path}\r\n              objectFit=\"cover\"\r\n              width=\"100px\"\r\n              maxWidth=\"none\"\r\n            />\r\n          </Link>\r\n          <Box p=\"7px\">\r\n            {name} <br />{\" \"}\r\n            <Text fontSize=\"0.9em\" fontStyle=\"italic\">\r\n              {character}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    });\r\n  }\r\n\r\n  // movie trailer box creator\r\n\r\n  let movieTrailersboxes = [];\r\n  if (movieTrailers.length > 0) {\r\n    movieTrailersboxes = movieTrailers.map(trailer => {\r\n      return (\r\n        <Box mr=\"10px\" key={trailer.id}>\r\n          <iframe\r\n            title={trailer.original_title}\r\n            width=\"420\"\r\n            height=\"345\"\r\n            src={`${youtubeLink}${trailer.key}`}\r\n            className=\"movieTrailerBoxes\"\r\n          ></iframe>\r\n        </Box>\r\n      );\r\n    });\r\n  }\r\n  // Carousel settiings\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3\r\n  };\r\n\r\n  // Id is passed from MovieDetails component\r\n  const { movieId } = props;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios\r\n        .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}`)\r\n        .then(res => {\r\n          // stores movie data using movie ID\r\n          setMovieData(res.data);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    try {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIKEY}&append_to_response=videos`\r\n        )\r\n        .then(res => {\r\n          // stores all movie trailers keys\r\n          setMovieTrailers(res.data.videos.results);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    try {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}`\r\n        )\r\n        .then(res => {\r\n          // stores cast data using movie ID\r\n          setMovieCast(res.data.cast);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  // styling varibles\r\n  const detailBody = {\r\n    backgroundColor: \"#333333\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    overflowY: \"scroll\"\r\n  };\r\n\r\n  const imageContainer = {\r\n    width: \"100vw\",\r\n    backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.backdrop_path})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"top\"\r\n  };\r\n\r\n  const container = {\r\n    maxWidth: \"80%\",\r\n    margin: \"0 auto\",\r\n    color: \"white\"\r\n  };\r\n\r\n  const pageSpinner = {\r\n    position: \"fixed\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n\r\n    transform: \"translate(-50%, -50%)\"\r\n  };\r\n  return (\r\n    <>\r\n      <Box>\r\n        {isPageLoaded ? null : (\r\n          <Box className=\"loadingScreen\">\r\n            <Spinner\r\n              style={pageSpinner}\r\n              thickness=\"3px\"\r\n              speed=\"0.7s\"\r\n              emptyColor=\"gray.200\"\r\n              color=\"black\"\r\n              size=\"100px\"\r\n            />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        style={imageContainer}\r\n        height={[\"200px\", \"200px\", \"100vh\", \"100vh\"]}\r\n        position={[\"relative\", \"relative\", \"static\", \"static\"]}\r\n      >\r\n        <Box\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0,0,0,0.5)\"\r\n          }}\r\n        >\r\n          <Box style={container}>\r\n            <Heading\r\n              position=\"absolute\"\r\n              top=\"50%\"\r\n              color=\"white\"\r\n              fontSize={[\"20px\", \"22px\", \"30px\", \"35px\"]}\r\n            >\r\n              {movieData.original_title}\r\n            </Heading>\r\n            <Link to=\"/\">\r\n              <span className=\"responsiveArrow\" onClick={goBack}>\r\n                &#8592;\r\n              </span>\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box style={detailBody}>\r\n        <Box style={container}>\r\n          <Box paddingY=\"30px\">\r\n            <Heading pb=\"10px\">Summary</Heading>\r\n            <p>{movieData.overview}</p>\r\n          </Box>\r\n\r\n          <Box paddingY=\"30px\">\r\n            <Heading pb=\"10px\"> Cast</Heading>\r\n\r\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"space-between\">\r\n              {castList}\r\n            </Flex>\r\n          </Box>\r\n\r\n          <Box paddingTop=\"30px\">\r\n            <Heading pb=\"10px\">Trailers</Heading>\r\n            <Flex wrap=\"nowrap\" overflowX=\"auto\" justifyContent=\"center\">\r\n              {movieTrailersboxes}\r\n            </Flex>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsBody;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport MovieDetailsBody from \"../components/MovieDetails/MovieDetailsBody\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Box } from \"@chakra-ui/core\";\r\n\r\nfunction MovieDetailsPage() {\r\n  const { movieId } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <MovieDetailsBody movieId={movieId} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Box, Image, Grid as ChakraGrid, Heading } from \"@chakra-ui/core\";\r\nimport Grid from \"../components/Grid\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../Context\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction SearchByActor() {\r\n  const { APIKEY, ImageUrl, setNavShadow, navShadow } = useContext(Context);\r\n\r\n  const { personId } = useParams();\r\n\r\n  const [personDetails, setPersonDetails] = useState(null);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const myRef = React.createRef(); //need so that we can access scrolling position of div on scroll event\r\n\r\n  function onScroll() {\r\n    const scrollTop = myRef.current.scrollTop;\r\n    if (!navShadow && scrollTop > 0) setNavShadow(true);\r\n    else if (navShadow && scrollTop === 0) setNavShadow(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (personId !== null) {\r\n      try {\r\n        axios\r\n          .get(\r\n            // retrieve actor's name based on personId\r\n            `https://api.themoviedb.org/3/person/${personId}?api_key=${APIKEY}`\r\n          )\r\n          .then((res) => {\r\n            setPersonDetails(res.data);\r\n          });\r\n\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${APIKEY}`\r\n            // note: although this api is different from trending movies, it contains the id, title, poster fields we use\r\n          )\r\n          .then((res) => {\r\n            setSearchResults(res.data.cast);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }, [APIKEY, personId, setSearchResults]);\r\n\r\n  return (\r\n    <Box\r\n      ref={myRef}\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\",\r\n      }}\r\n      onScroll={onScroll}\r\n    >\r\n      <NavBar />\r\n\r\n      {personDetails !== null && (\r\n        <>\r\n          <Heading\r\n            as=\"h3\"\r\n            size=\"lg\"\r\n            marginTop=\"100px\"\r\n            marginLeft=\"5%\"\r\n            color=\"primaryText\"\r\n          >\r\n            {personDetails.name}\r\n          </Heading>\r\n          <ChakraGrid\r\n            mx=\"125px\"\r\n            my=\"50px\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"primaryBorder\"\r\n            rounded=\"lg\"\r\n            templateColumns=\"auto auto\"\r\n          >\r\n            <Image\r\n              m=\"10px\"\r\n              src={ImageUrl + personDetails.profile_path}\r\n              h=\"220px\"\r\n              objectFit=\"cover\"\r\n              rounded=\"lg\"\r\n            />\r\n            <Box m=\"10px\" color=\"primaryText\" fontSize=\"0.9em\">\r\n              Actor Biography: {personDetails.biography}\r\n            </Box>\r\n          </ChakraGrid>\r\n\r\n          {searchResults.length > 0 && <Grid searchResults={searchResults} />}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchByActor;\r\n","import React, { useContext } from \"react\";\r\nimport Grid from \"../components/Grid\";\r\nimport Navbar from \"../components/NavBar\";\r\nimport { Heading, Box } from \"@chakra-ui/core\";\r\nimport { Context } from \"../Context\";\r\n\r\nfunction SearchPage() {\r\n  const { search, searchResults, isSearch } = useContext(Context);\r\n  console.log(search);\r\n  return (\r\n    <Box\r\n      bg=\"primaryBackground\"\r\n      h=\"100vh\"\r\n      w=\"100vw\"\r\n      style={{\r\n        overflow: \"scroll\"\r\n      }}\r\n    >\r\n       <Navbar />\r\n      <Heading paddingY=\"80px\" marginY=\"50px\" textAlign=\"center\" color=\"white\">\r\n        {isSearch ? `Search Results for ${search}` : `Search For Movie`}\r\n      </Heading>\r\n     \r\n      <Grid searchResults={searchResults} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport { BrowserRouter, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport FavoriteMoviespage from \"./pages/FavoriteMoviespage\";\r\nimport MovieDetailsPage from \"./pages/MovieDetailsPage\";\r\nimport SearchByActor from \"./pages/SearchByActor\";\r\n\r\nimport SearchPage from \"./pages/SearchPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Homepage />\r\n          </Route>\r\n          <Route path=\"/favorites\">\r\n            <FavoriteMoviespage />\r\n          </Route>\r\n          <Route path=\"/moviedetailspage/:movieId\">\r\n            <MovieDetailsPage />\r\n          </Route>\r\n\r\n          <Route path=\"/actor/:personId\">\r\n            <SearchByActor />\r\n          </Route>\r\n          <Route path=\"/searchPage\">\r\n            <SearchPage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Homepage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { theme } from \"@chakra-ui/core\";\r\n\r\n// we can customize our theme here\r\nexport const customTheme = {\r\n    ...theme,\r\n    colors: {\r\n      ...theme.colors,\r\n      primaryBackground: \"#333\",\r\n      cardBackground: \"#333\",\r\n      primaryBorder: \"#555\",\r\n      logoText: \"#49c3fd\",\r\n      primaryText: \"#fff\",\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport { ContextProvider } from \"./Context\";\r\nimport { customTheme } from \"./theme\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <ContextProvider>\r\n    <Router>\r\n      <ThemeProvider theme={customTheme}>\r\n        <CSSReset />\r\n        <App />\r\n      </ThemeProvider>\r\n    </Router>\r\n  </ContextProvider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}